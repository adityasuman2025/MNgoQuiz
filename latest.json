[
    {
        "JavaScript & Web Tech": {
            "Why do we use javascript for web development? (and not any other language)": [
                "<p class=\"c13\"><span class=\"c8\">JavaScript is a popular programming language used for web development due to several key reasons:</span></p>",
                "<ol class=\"c10 lst-kix_bxotaiteoqg7-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Client-Side Interactivity:</span><span class=\"c8\">&nbsp;JavaScript is primarily used to add interactivity and dynamic behaviour to websites on the client-side, meaning it runs directly in the user's web browser.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Browser Compatibility: J</span><span class=\"c8\">avaScript is supported by all major web browsers. Browsers have built-in JavaScript engines that execute JavaScript code directly in the browser, making it a consistent and cross-browser solution. Therefore we need to maintain codebase in different languages for different browsers</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Versatility:</span><span class=\"c8\">&nbsp;JavaScript can be used for many use cases of web development, like</span></li></ol>",
                "<ol class=\"c10 lst-kix_bxotaiteoqg7-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">doing form validation</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">creating interactive elements</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">creating animations</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">handling events (e.g., clicks, mouse movements)</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">manipulating the Document Object Model (DOM)</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">handling AJAX requests and interacting with server-side APIs</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">updating the page content without requiring a full page reload, providing a more seamless user experience.</span></li></ol>",
                "<ol class=\"c10 lst-kix_bxotaiteoqg7-0\" start=\"4\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Large Community and Libraries: </span><span class=\"c8\">JavaScript has an extensive and active developer community. This means there are countless libraries, frameworks, and tools available that can significantly speed up the development process and help solve common web development challenges. Examples of popular JavaScript libraries and frameworks include React, Angular, and Vue.js.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Support Native Web Technologies: </span><span class=\"c8\">Modern web technologies like HTML5, CSS3, and Web APIs are designed to work seamlessly with JavaScript. Many of these technologies are integrated into web browsers and accessible via JavaScript APIs.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Security and Browser Sandboxing:</span><span class=\"c8\">: JavaScript runs within a browser's sandboxed environment, ensuring security by preventing direct access to system resources. This is crucial for maintaining user safety and data privacy.</span></li></ol>"
            ],
            "How does the chrome v8 JS engine work?": [
                "<p class=\"c13\"><span class=\"c8\">The V8 engine is an open-source JavaScript engine developed by the Google Chrome team.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">The combination of parsing, profiling, optimization, and JIT compilation in the Chrome V8 engine contributes to the fast and efficient execution of JavaScript code in web applications. </span></p>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Parsing:</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">The V8 engine's first step is to parse the JavaScript code into an Abstract Syntax Tree (AST), which represents the structure of the code in a tree-like format.</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-0\" start=\"2\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Profiling: </span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">After parsing the JavaScript, code is first executed in an \"interpreted\" mode.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">As the JavaScript code is interpreted, the V8 engine uses profilers to collect runtime information about the code's behaviour. This includes tracking which parts of the code are executed frequently (hot paths) and which data types are commonly used.</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-0\" start=\"3\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Optimisation &amp; Just-In-Time (JIT) Compilation:</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Based on the gathered information, the V8 engine employs JIT compilation to optimise specific code paths.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">JIT compilation generates machine code that is tailored for the actual runtime behaviour of the code, taking advantage of the specific data types encountered during interpretation.</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-0\" start=\"4\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Execution:</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Once a code path has been compiled, the resulting machine code is stored in an \"executable memory\" area.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Subsequent executions of the same code path can directly use the compiled machine code, which significantly speeds up execution compared to interpretation.</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-0\" start=\"5\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Garbage Collection:</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">JavaScript is a garbage-collected language, meaning that memory management is handled automatically.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">V8's garbage collector periodically identifies and deallocates memory that is no longer needed, preventing memory leaks.</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-0\" start=\"6\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Asynchronous Execution:</span></li></ol>",
                "<ol class=\"c10 lst-kix_swqzz5gn0c9z-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">V8 handles asynchronous operations like timers and network requests using the event loop, which allows non-blocking execution and responsiveness.</span></li></ol>",
                "<p class=\"c13\"><span class=\"c11\">In summary, the V8 engine first </span><span class=\"c2\">parses</span><span class=\"c11\">&nbsp;the JS code and converts it into AST(a tree-like representation of the structure of the code) then it executes the code in interpretation mode and </span><span class=\"c2\">profiles</span><span class=\"c11\">&nbsp;the code (like which part of the code is frequently used and commonly used data types). Based on the runtime behaviour and profiling data, it </span><span class=\"c2\">optimises</span><span class=\"c11\">&nbsp;the code using </span><span class=\"c2\">JIT Compilation</span><span class=\"c8\">&nbsp;to selectively compile frequently executed code paths into highly optimised machine code. Subsequent executions of the same code path can directly use the compiled machine code, which significantly speeds up execution compared to interpretation.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">This combination of interpretation and JIT compilation helps achieve a balance between startup speed and runtime performance for JavaScript execution.</span></p>",
                "<p class=\"c13\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 718.11px; height: 600.00px;\"><img alt=\"\" src=\"images/image8.png\" style=\"width: 718.11px; height: 600.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>"
            ],
            "Does v8 javascript engine compile or interpret the code?": [
                "<p class=\"c13\"><span class=\"c8\">The V8 JavaScript engine employs a combination of both compilation and interpretation to execute JavaScript code. This approach is known as \"Just-In-Time\" (JIT) compilation, which aims to balance the benefits of both compilation and interpretation for optimising the performance of JavaScript execution.</span></p>"
            ],
            "Compiler vs Interpreter (Compilation vs execution)": [
                "<ul class=\"c10 lst-kix_rltiwuxbufr3-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Translation vs. Interpretation</span><span class=\"c8\">: The primary difference is in how they process the source code. A compiler translates the entire source code (of high-level programming language) into machine code (low-level language) or bytecode before execution, while an interpreter reads and executes the source code line-by-line at runtime.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Output</span><span class=\"c8\">: A compiler generates an executable file or bytecode as its output, while an interpreter directly executes the code without producing a separate output file.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Error Handling</span><span class=\"c8\">: A compiler checks for errors throughout the entire code and reports them all at once, while an interpreter stops execution immediately after encountering the first error.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Execution Performance</span><span class=\"c8\">: Due to the translation step, compiled code generally runs faster than interpreted code, as the latter incurs overhead in translating and executing line-by-line.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Portability</span><span class=\"c11\">: Interpreted code can be more portable since it relies on the interpreter present on the target platform, while compiled code may need to be recompiled for different platforms.</span></li></ul>"
            ],
            "Everything in JavaScript happens inside an Execution Context": [
                "<p class=\"c13\"><span class=\"c8\">JavaScript was created by Brendan Eich while he was working at Netscape Communications Corporation (now known as Mozilla Corporation). Brendan Eich developed JavaScript in a span of about 10 days in May 1995</span></p>",
                "<p class=\"c13\"><span class=\"c11\">When JavaScript code is executed, Execution Context is created and it is called </span><span class=\"c2\">Global Execution Context (GEC)</span><span class=\"c8\">.</span></p>",
                "<ol class=\"c10 lst-kix_vip1l3s2x38m-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">JavaScript program is executed in TWO PHASES inside Execution Context</span></li></ol>",
                "<ol class=\"c10 lst-kix_vip1l3s2x38m-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c2\">MEMORY ALLOCATION PHASE</span><span class=\"c11\">&nbsp;- JavaScript program goes throughout the program and allocates memory of Variables and Functions declared in program and stores </span><span class=\"c2\">undefined</span><span class=\"c11\">&nbsp;and </span><span class=\"c2\">function code </span><span class=\"c8\">respectively as its value.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c2\">CODE EXECUTION PHASE</span><span class=\"c8\">&nbsp;- &nbsp;JavaScript program now goes through the code line by line and executes the code. </span></li></ol>",
                "<ol class=\"c10 lst-kix_vip1l3s2x38m-0\" start=\"2\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">A Function is invoked when it is called and it acts as another MINI PROGRAM and creates its own Execution Context.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Return keyword returns the Control back to the Parent Execution-Context, from where the Function is called and the Execution Context of the Function is DELETED.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">CALL STACK</span><span class=\"c8\">&nbsp;maintains the ORDER of execution of Execution Contexts. It CREATES Execution Context whenever a Program starts or a Function is invoked and it pops out the Execution Context when a Function or Program ENDS.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Undefined is like a placeholder till a variable is not assigned a value.</span></li></ol>"
            ],
            "Execution Context": [
                "<p class=\"c13\"><span class=\"c11\">JavaScript interpreter creates a new context whenever it’s about to execute a </span><span class=\"c11 c37\">function</span><span class=\"c11\">&nbsp;or </span><span class=\"c11 c37\">script</span><span class=\"c11\">. Every script/code starts with an execution context called a </span><span class=\"c2\">global execution context (GEC)</span><span class=\"c11\">. And every time we call a function, a new execution context is created and is put on top of the </span><span class=\"c11 c37\">execution stack </span><span class=\"c2 c37\">(call stack)</span><span class=\"c8\">. The same pattern follows when we call the nested function which can call another nested function.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Execution context has two components</span></p>",
                "<ol class=\"c10 lst-kix_xtojqn9s6d3c-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Memory component / variable environment:</span><span class=\"c8\">&nbsp; variable and function values are stored in a key value format.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Code component / thread of execution:</span><span class=\"c8\">&nbsp;It is a place where whole JavaScript code is executed</span></li></ol>"
            ],
            "this": [
                "<p class=\"c13\"><span class=\"c2 c37\">this</span><span class=\"c11\">&nbsp;is a property of the execution context. only function calls establish a </span><span class=\"c11\">new </span><span class=\"c2 c37\">this</span><span class=\"c11\">&nbsp;context</span><span class=\"c8\">&nbsp;(because it creates a new execution context)</span></p>"
            ],
            "Hoisting": [
                "<p class=\"c13\"><span class=\"c11\">JavaScript </span><span class=\"c2\">Hoisting</span><span class=\"c8\">&nbsp;refers to the process whereby the interpreter appears to move the declaration of functions, variables or classes to the top of their scope, prior to execution of the code.</span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&amp;sa=D&amp;source=editors&amp;ust=1707022712783060&amp;usg=AOvVaw1IH7vdDniT7R24ocSZeufl\">https://developer.mozilla.org/en-US/docs/Glossary/Hoisting</a></span></p>",
                "<p class=\"c13 c4\"><span class=\"c3 c15\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">variables defined with var and function declaration are hoisted.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">var takes undefined value and function contains its code.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c3 c15\"></span></p>",
                "<p class=\"c13\"><span class=\"c11\">let and const are also hoisted (in a different way: they exist in</span><span class=\"c2\">&nbsp;temporal dead zone (TDZ)</span><span class=\"c8\">&nbsp;for the time being)</span></p>",
                "<p class=\"c13\"><span class=\"c8\">The Temporal Dead Zone exists until a variable is declared and assigned a value.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">window.&lt;variable&gt; OR this.&lt;variable&gt; will not give the value of a variable defined using let or const.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c2\">precedence order: &nbsp;</span><span class=\"c8\">variable assignment &gt; function declaration &gt; variable definition</span></p>",
                "<p class=\"c13\"><span class=\"c8\">e.g</span></p>",
                "<p class=\"c13\"><span class=\"c8\">var a = 10;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">function a() {}</span></p>",
                "<p class=\"c13\"><span class=\"c11 c37\">typeof</span><span class=\"c11\">&nbsp;a will be </span><span class=\"c53 c11 c37 c81\">number</span></p>",
                "<p class=\"c13 c4\"><span class=\"c53 c11 c37 c81\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">var a;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">function a() {}</span></p>",
                "<p class=\"c13\"><span class=\"c11 c37\">typeof</span><span class=\"c11\">&nbsp;a will be </span><span class=\"c11 c37\">function </span><span class=\"c8\">because variable is not assigned only defined</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">function a() {}</span></p>",
                "<p class=\"c13\"><span class=\"c8\">var a;</span></p>",
                "<p class=\"c13\"><span class=\"c11 c37\">typeof</span><span class=\"c11\">&nbsp;a will be </span><span class=\"c11 c37\">function </span><span class=\"c8\">because variable is not assigned only defined</span></p>"
            ],
            "Blocked Scope": [
                "<p class=\"c13\"><span class=\"c2\">let &amp; const is block scoped,</span><span class=\"c11\">&nbsp;means it is not accessible outside of the block, but var can be accessible because </span><span class=\"c2\">var is function scoped.</span></p>"
            ],
            "Hoisting vs Memory Component of Execution Context": [
                "<p class=\"c13\"><span class=\"c8\">Hoisting is a mechanism in JavaScript where variable and function declarations are moved to the top of their containing scope during the compile phase. This means that regardless of where variables and functions are declared in your code, they are moved to the top of their scope.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">The memory component of an execution context refers to the memory space allocated for variables and function references during the execution of a JavaScript program.</span></p>"
            ],
            "Event Loop": [
                "<p class=\"c13\"><span class=\"c8\">Event loop is used to] handle asynchronous operations in JS. The event loop is a constantly running process that monitors both the callback queue and the call stack.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">If the call stack is not empty, the event loop waits until it is empty and places the next function from the callback queue to the call stack. If the callback queue is empty, nothing will happen:</span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.javascripttutorial.net/javascript-event-loop/&amp;sa=D&amp;source=editors&amp;ust=1707022712784596&amp;usg=AOvVaw3WMtTnOcOKVWWlV-faSpEN\">https://www.javascripttutorial.net/javascript-event-loop/</a></span></p>",
                "<ol class=\"c10 lst-kix_xpn04ouj9az7-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Callback functions of Web APIs</span><span class=\"c11\">&nbsp;are first stored in the </span><span class=\"c2\">Web API environment</span><span class=\"c11\">&nbsp;and then transferred to some queue from where the </span><span class=\"c2\">event loop</span><span class=\"c11\">&nbsp;picks them up and places it in the </span><span class=\"c2\">call stack</span><span class=\"c8\">, whenever the call stack is empty.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c11\">All Callback functions (except promise callback and mutation observer) are transferred to </span><span class=\"c30 c2\">callback queue or task queue or macrotask queue.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c11\">Promises callback and mutation observer are transferred to the </span><span class=\"c2\">microtask queue.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Microtask queue</span><span class=\"c11\">&nbsp;tasks are given </span><span class=\"c2\">priority</span><span class=\"c11\">&nbsp;over </span><span class=\"c2\">Macrotask queue</span><span class=\"c11\">&nbsp;tasks, </span><span class=\"c2\">event loop</span><span class=\"c8\">&nbsp;will pick tasks from callback queue, only when all tasks of microtask queue are done.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c11\">Too many </span><span class=\"c2\">microtask queue </span><span class=\"c11\">tasks generated can cause </span><span class=\"c2\">Starvation</span><span class=\"c8\">&nbsp;(not giving time to callback queue tasks to execute).</span></li><li class=\"c16 li-bullet-0\"><span class=\"c11\">If the value of the expression following the </span><span class=\"c2\">await</span><span class=\"c11\">&nbsp;operator is not a Promise, it's converted to a resolved Promise i.e. await will also trigger an item into </span><span class=\"c2\">microtask</span><span class=\"c11\">&nbsp;</span><span class=\"c30 c2\">queue</span></li></ol>",
                "<p class=\"c13\"><span class=\"c8\">Order:</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; - Statement</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; - Microtask Queue - Promise callbacks/mutation observer (microtask queue)</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; - Web worker (port/window.eventHander, etc..)</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; - Macrotask Queue - all other callbacks e.g. setTimeout (callback/macrotask queue)</span></p>"
            ],
            "JavaScript is synchronous single-threaded language": [
                "<p class=\"c13\"><span class=\"c2\">Synchronous means one at a time </span><span class=\"c8\">i.e. one line of code is being executed at a time in order the code appears. </span></p>",
                "<p class=\"c13\"><span class=\"c2\">Single threaded means that one command</span><span class=\"c8\">&nbsp;is being executed at a time.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">So in JavaScript one thing is happening at a time.</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Sync kar lo/ sync me rakhna (we generally use in our day-to-day life): </span><span class=\"c8\">means keep everything in a single thread, means data in all devices are the same.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">JavaScript is single-threaded, meaning it processes one task at a time. However, </span><span class=\"c2\">it can handle asynchronous operations efficiently using the event loop.</span></p>"
            ],
            "Synchronous": [
                "<p class=\"c13\"><span class=\"c8\">One task at a time (single threaded)</span></p>"
            ],
            "Asynchronous": [
                "<p class=\"c13\"><span class=\"c8\">multiple task at a time (multi threaded)</span></p>",
                "<p class=\"c13\"><span class=\"c8\">parallel programming</span></p>"
            ],
            "Asynchronous Function": [
                "<p class=\"c13\"><span class=\"c8\">Functions running in parallel with other functions are k/n as asynchronous function</span></p>",
                "<p class=\"c13\"><span class=\"c8\">e.g. fetch, setTimeout, setInterval, etc.</span></p>"
            ],
            "How to perform a specific task on completion of asynchronous function": [
                "<ol class=\"c10 lst-kix_6xnhrta60x79-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Promise</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">callback function - it grows the code horizontally and give control to the asynchronous function</span></li></ol>"
            ],
            "Inversion of control": [
                "<p class=\"c1\"><span class=\"c8\">When we pass a callback (instead of using a promise) to an asynchronous function to process after the async.task is done, we give control to that async. function. This is k/n as inversion of control.</span></p>"
            ],
            "Callback Hell": [
                "<p class=\"c1\"><span class=\"c8\">Callback hell or \"pyramid of doom,\" is a situation where there is a deep and complex nesting of callback functions. This generally happens while handling asynchronous code, where operations are performed one after the other, and each operation requires a callback to handle its result.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">It grows the code horizontally</span></p>"
            ],
            "Promise": [
                "<p class=\"c13\"><span class=\"c8\">Promise is an object that represents the eventual completion of asynchronous operation. It represents a result that may be available now, or in the future or never. </span></p>",
                "<p class=\"c13\"><span class=\"c2\">Promises</span><span class=\"c8\">&nbsp;are used to handle asynchronous operations in JavaScript. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">Promise can be consumed/handled in 2 ways:</span></p>",
                "<ol class=\"c10 lst-kix_4skoph96uo70-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">then, catch</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">async/await</span></li></ol>"
            ],
            "Promise.all vs allSettled, race, any": [
                "<ul class=\"c10 lst-kix_t4mlosvdu624-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Promise.all:</span><span class=\"c8\">&nbsp;It takes an array of promises and returns a resolved promise when all the promises are resolved or returns a rejected promise as soon as any of the promises is rejected. Waits for all promises to be fulfilled or any one to be rejected.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Promise.allSettled:</span><span class=\"c8\">&nbsp;It takes an array of promises and returns a resolved promise (containing array of result of each promise) when all the promises are settled (either rejected or resolved). Waits for all promises to settle (either fulfilled or rejected) and returns an array of results with information about each promise.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Promise.race:</span><span class=\"c8\">&nbsp;It takes an array of promises and returns a resolved or rejected promise as soon as the first promise is resolved or rejected. It's a race, and the first one to finish (fulfil or reject) determines the outcome.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Promise.any: </span><span class=\"c11\">It takes an array of promises and returns a resolved promise as soon as any of the promises is fulfilled/resolved otherwise returns a rejected promise when none of the promise is resolved.</span><span class=\"c2\">&nbsp;</span><span class=\"c8\">It's like trying different options, and the first successful one wins. If all options fail, you get a report of why they failed.</span></li></ul>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">if the given array of promises does include a value instead of promise, then it directly returns the value in the result array</span></p>"
            ],
            "Async/Await": [
                "<ol class=\"c10 lst-kix_vwprrffi9lxi-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c7\">Async function always returns a promise, if we directly return a promise from the async function then it gets returned as it is, otherwise if we return any value, then resolve promise with that value will be returned.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c7\">Async function is used to handle asynchronous tasks in JavaScript.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c7\">Asynchronous tasks are generally handled though promises.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c7\">And promises can be consumed in 2 ways, async/await or then/catch.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c34 c11\">Await keyword can only be used inside an async function.</span></li></ol>"
            ],
            "Difference b/w .then/catch & async/await": [
                "<p class=\"c1\"><span class=\"c11\">In</span><span class=\"c2\">&nbsp;async/await</span><span class=\"c11\">&nbsp;JS engine </span><span class=\"c2\">appears/fakes to wait at the line</span><span class=\"c8\">&nbsp;where await is used, till the given promise is resolved and does not proceed further in the code.</span></p>",
                "<p class=\"c1\"><span class=\"c11\">While in </span><span class=\"c2\">.then/catch</span><span class=\"c11\">, the JS engine </span><span class=\"c2\">does not wait</span><span class=\"c8\">&nbsp;for the promise to resolve and proceed further in the code, and whenever the promise gets resolved it calls the attached callback function.</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">And None of them block the thread or call stack.</span></p>"
            ],
            "Closure": [
                "<p class=\"c13\"><span class=\"c8\">Closures occur when a function retains access to variables from its outer (enclosing) function even after that outer function has completed execution.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">A </span><span class=\"c2\">closure</span><span class=\"c11\">&nbsp;is the combination of a function bundled together (enclosed) with references to its surrounding state (the </span><span class=\"c2\">lexical environment</span><span class=\"c8\">). i.e. closure = function + its lexical environment</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">Whenever a function is returned from a function, even if it is vanished in the execution context, It's not just that function alone it returns but the entire closure (function along with its lexical scope).</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">In closure reference of the variables in the scope is there, but not its value</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c11\">ref:</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3DeBTBG4nda2A%26list%3DPLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP%26index%3D13&amp;sa=D&amp;source=editors&amp;ust=1707022712788357&amp;usg=AOvVaw0kE1EpTzib_LJEca4QVmHS\">&nbsp;</a></span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3DeBTBG4nda2A%26list%3DPLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP%26index%3D13&amp;sa=D&amp;source=editors&amp;ust=1707022712788447&amp;usg=AOvVaw1xnNNPmqLHpAsYnfPkrlAz\">https://www.youtube.com/watch?v=eBTBG4nda2A&amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP&amp;index=13</a></span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&amp;sa=D&amp;source=editors&amp;ust=1707022712788565&amp;usg=AOvVaw1I4jiXgdujqChw51cLZkf8\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures</a></span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">Uses of Closure: Memoization, Currying, Once Function, Data hiding and encapsulation, debounce/throttle</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Cons: </span><span class=\"c8\">it can take lots of memory, because those variables are not garbage collected.</span></p>"
            ],
            "Garbage Collector": [
                "<p class=\"c13\"><span class=\"c8\">It frees variables from memory which are no longer in use, or have never been used.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">JavaScript is a garbage-collected language, meaning that memory management is handled automatically.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">(GC) is a mechanism that automatically manages memory by identifying and reclaiming memory that is no longer needed or reachable by the program. It helps prevent memory leaks and ensures efficient memory usage in programs.</span></p>"
            ],
            "Mark and Sweep Algorithm": [
                "<p class=\"c13\"><span class=\"c8\">\"Mark and Sweep\" is a garbage collection algorithm used by programming languages like JavaScript to manage memory and automatically reclaim memory that is no longer in use. </span></p>",
                "<p class=\"c13\"><span class=\"c8\">The \"Mark and Sweep\" algorithm ensures that memory occupied by objects that are no longer reachable or referenced by the program is properly released, preventing memory leaks and improving the overall performance of the application.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here's how the Mark and Sweep algorithm works:</span></p>",
                "<ul class=\"c10 lst-kix_3ie40ml82f6-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Mark Phase: </span><span class=\"c8\">The first step of the algorithm involves marking all reachable objects in memory. Objects that are still being used by the program are marked as \"live,\" while those that are not accessible are left unmarked (considered \"dead\").</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Sweep Phase: </span><span class=\"c8\">In the sweep phase, the garbage collector goes through the entire memory space and deallocates (reclaims) memory occupied by unmarked (dead) objects. This involves releasing memory that is no longer needed and making it available for future allocations.</span></li></ul>"
            ],
            "Lexical Environment": [
                "<p class=\"c13\"><span class=\"c11\">The Local memory (Created during </span><span class=\"c2\">Execution Context </span><span class=\"c8\">of that function) + Lexical environment of its parent.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">e.g when the execution reach a use of a variable/function, it will search for its existence in the local memory of that function, if it's not found it will go to the lexical environment of its parent (</span><span class=\"c2\">there is a reference of lexical environment of its parent in local memory of a function</span><span class=\"c11\">), and so on. This chain is known as the </span><span class=\"c30 c2\">Scope Chain.</span></p>"
            ],
            "Scope": [
                "<p class=\"c13\"><span class=\"c8\">Scope is till where we can access a function/variable.</span></p>"
            ],
            "Block": [
                "<p class=\"c13\"><span class=\"c8\">Multiple statements formed in a group enclosed in curly brackets forms a block</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Block is needed because, sometimes Javascript expects a single statement to run, but we need to run commands with multiple statements which is only possible by block. e.g if else, for, etc</span></p>"
            ],
            "Error Types": [
                "<p class=\"c13\"><span class=\"c8\">There are three types of error: </span></p>",
                "<ol class=\"c10 lst-kix_n0qf2md3mbum-0 start\" start=\"1\"><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c2\">referenceError</span><span class=\"c11\">&nbsp;- </span><span class=\"c8\">given where variable does not have memory allocation</span></li><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c2\">typeError</span><span class=\"c8\">&nbsp;- given when we change type that is not supposed to be changed</span></li><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c2\">syntaxError</span><span class=\"c8\">&nbsp;- when proper syntax(way of writing a statement) is not used</span></li></ol>"
            ],
            "Anonymous Functions": [
                "<p class=\"c13\"><span class=\"c8\">It is a function that does not have any name associated with it. An anonymous function is not accessible after its initial creation, it can only be accessed by the variable it is stored in as a function, as a value. </span></p>",
                "<p class=\"c13\"><span class=\"c8\">It is generally used at places where function is used as values e.g. arrow function, and callback function</span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.geeksforgeeks.org/javascript-anonymous-functions/&amp;sa=D&amp;source=editors&amp;ust=1707022712790207&amp;usg=AOvVaw3PgrKu1nswvdIEUQahI3ph\">https://www.geeksforgeeks.org/javascript-anonymous-functions/</a></span></p>"
            ],
            "High Order Function": [
                "<p class=\"c13\"><span class=\"c11\">A </span><span class=\"c2\">high order</span><span class=\"c11\">&nbsp;</span><span class=\"c2\">function </span><span class=\"c11\">is a</span><span class=\"c11\">&nbsp;</span><span class=\"c2\">function</span><span class=\"c11\">&nbsp;that accepts one or more </span><span class=\"c2\">functions</span><span class=\"c11\">&nbsp;as arguments or returns a </span><span class=\"c2\">function</span><span class=\"c8\">.</span></p>"
            ],
            "Function Statement / Function Declaration": [
                "<p class=\"c13\"><span class=\"c8\">regular function</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">&lt;function&gt;.</span><span class=\"c11 c37\">name</span><span class=\"c8\">&nbsp;gives name of the function</span></p>",
                "<p class=\"c1\"><span class=\"c11\">&lt;function&gt;.</span><span class=\"c11 c37\">length</span><span class=\"c8\">&nbsp;gives count of parameters of the function</span></p>"
            ],
            "Function Expression": [
                "<p class=\"c13\"><span class=\"c8\">A function stored in a variable as is its value</span></p>",
                "<p class=\"c13\"><span class=\"c11\">Function expression can’t be called before its declaration because the value of the variable will be undefined till then.</span></p>"
            ],
            "First Class Function / First Class Citizen": [
                "<p class=\"c13\"><span class=\"c8\">The ability of function to be used as values is k/n as First Class Function.</span></p>"
            ],
            "IIFE": [
                "<p class=\"c13\"><span class=\"c8\">immediately Invoked Function Expression - self executing function</span></p>",
                "<p class=\"c13\"><span class=\"c8\">(function() {</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// logic</span></p>",
                "<p class=\"c13\"><span class=\"c8\">})()</span></p>"
            ],
            "Generator Function": [
                "<p class=\"c1\"><span class=\"c8\">Generator functions are used to generate values on the fly (on-demand).</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Generator functions are a special type of function in JS that can be paused and resumed. They allow us to generate a sequence of values lazily.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Generators are used in iterable functions of in-built data structures of JS.</span></p>"
            ],
            "Pure Function": [
                "<p class=\"c1\"><span class=\"c2\">Deterministic</span><span class=\"c11\">:</span><span class=\"c8\">&nbsp;A Pure Function is a function that always returns the same result for a given set of arguments. It does not depend on any state or data change during a program’s execution. Rather, it only depends on its input arguments.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">No Side Effects:</span><span class=\"c8\">&nbsp;A pure function doesn't cause any observable effects outside of its scope. It means it doesn't modify variables outside of its own scope, it doesn't interact with the DOM, it doesn't make API calls, and it doesn't change any external state.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">E.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function add(a, b) {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">return a + b;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">here add is a pure function</span></p>",
                "<p class=\"c1\"><span class=\"c8\"><br>let total = 0;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function addToTotal(value) {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">total += value; return total;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">here addToTotal function modifies the total variable outside of its scope. Therefore, it is not a pure function.</span></p>"
            ],
            "Constructor Function": [
                "<p class=\"c13\"><span class=\"c8\">In JavaScript, a constructor function is used to create objects.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">// constructor function</span></p>",
                "<p class=\"c13\"><span class=\"c8\">function Person () {</span></p>",
                "<p class=\"c13 c22\"><span class=\"c8\">this.name = 'John',</span></p>",
                "<p class=\"c13 c22\"><span class=\"c8\">this.age = 23</span></p>",
                "<p class=\"c13\"><span class=\"c8\">}</span></p>",
                "<p class=\"c13\"><span class=\"c8\">// create an object</span></p>",
                "<p class=\"c13\"><span class=\"c8\">const person = new Person();</span></p>"
            ],
            "Difference b/w regular and arrow function ": [
                "<p class=\"c13\"><span>ref: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://medium.com/swlh/javascript-arrow-functions-vs-regular-functions-5ec4a9076796&amp;sa=D&amp;source=editors&amp;ust=1707022712792311&amp;usg=AOvVaw1bz5azs87_97aRf7VjG2yg\">https://medium.com/swlh/javascript-arrow-functions-vs-regular-functions-5ec4a9076796</a></span></p>",
                "<ol class=\"c10 lst-kix_u33bokbpnx1e-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Syntax</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2 c37\">this</span><span class=\"c2\">&nbsp;binding</span><span class=\"c11\"><br>In regular functions, </span><span class=\"c11 c37\">this</span><span class=\"c11\">&nbsp;keyword represents the object that calls the function, which could be the window, the document, a button or whatever.<br>In arrow functions the </span><span class=\"c11 c37\">this</span><span class=\"c11\">&nbsp;keyword represents, </span><span class=\"c11 c37\">this</span><span class=\"c8\">&nbsp;of the object where it is defined.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Argument binding</span><span class=\"c8\"><br>Unlike regular functions, arrow functions do not have an arguments binding. However, they have access to the arguments object of the closest non-arrow parent function.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Using </span><span class=\"c2 c37\">new</span><span class=\"c2\">&nbsp;keyword</span><span class=\"c8\"><br>Regular functions are constructible (constructor function) and callable.<br>Arrow functions are only ‘callable’ and not constructible<br>hence new keyword can’t be used with arrow function</span></li></ol>"
            ],
            "JSON and Object literals": [
                "<p class=\"c1\"><span class=\"c2\">Object Literals:</span><span class=\"c8\">&nbsp;It is a JS Object. it is a comma-separated list of key-value pairs wrapped in curly braces. It can be taken as a 'container' for data.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">JSON:</span><span class=\"c8\">&nbsp;JavaScript Object Notation is a textual/string format of a JS Object.</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">JSON cannot be an object. JSON is a string format. The data is only JSON when it is in a string format. When it is converted to a JavaScript variable, it becomes a JavaScript object.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const myJSON = '{\"name\":\"John\", \"age\":30, \"car\":null}';</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const myObj = JSON.parse(myJSON);</span></p>"
            ],
            ".call() & .apply()": [
                "<p class=\"c13\"><span class=\"c11\">The call() method calls the function with a </span><span class=\"c11\">given </span><span class=\"c2 c37\">this</span><span class=\"c11\">&nbsp;value</span><span class=\"c8\">(object) and arguments provided individually.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">When we don't specify this, it'll refer to the globalThis i.e. window in the browser's context.</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c11\">in apply() we pass arguments in array</span></p>"
            ],
            ".bind()": [
                "<p class=\"c13\"><span class=\"c11\">the bind() method creates copy of the function with a given </span><span class=\"c2 c37\">this</span><span class=\"c8\">&nbsp;value(object) and arguments provided individually</span></p>",
                "<p class=\"c13\"><span class=\"c8\">bind is same as call() but instead of calling the function, it's just create clone of the function, which we can invoke/call later</span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3D75W8UPQ5l7k&amp;sa=D&amp;source=editors&amp;ust=1707022712793576&amp;usg=AOvVaw07Nw7wNr-T8b4np-tX7hO2\">https://www.youtube.com/watch?v=75W8UPQ5l7k</a></span></p>"
            ],
            "Polyfill (Shims)": [
                "<p class=\"c1\"><span class=\"c2\">Polyfills</span><span class=\"c8\">&nbsp;are used to add missing features to a browser that it does not natively support. It’s like browser fallback.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Shims</span><span class=\"c8\">&nbsp;are often used to provide a consistent API or bridge differences between environments, which can include polyfilling missing features. e.g. jQuery</span></p>",
                "<p class=\"c1\"><span class=\"c11\">In practice, the terms \"polyfill\" and \"shim\" are sometimes used interchangeably, and their specific meanings can vary depending on the context in which they are used.</span></p>"
            ],
            "ProtoType": [
                "<p class=\"c13\"><span class=\"c8\">Whenever we create a function/object/array, JS engine attach a prototype property in it.</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Prototype property</span><span class=\"c8\">&nbsp;is basically an object (also known as Prototype object), which contains some functions like toString, valueOf, map, reduce, etc. </span></p>",
                "<p class=\"c13\"><span class=\"c8\">We can also attach methods and properties in a prototype object, which enables all the other functions/object/array to inherit these methods and properties.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c11\">we can access the prototype of an object using: </span><span class=\"c2 c37\">Object.getPrototypeOf(&lt;object name&gt;) </span><span class=\"c11 c37\">or </span><span class=\"c53 c2 c37\">&lt;object name&gt;.__proto__</span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&amp;sa=D&amp;source=editors&amp;ust=1707022712794255&amp;usg=AOvVaw0a-5l93cTzq-hOvXTXRIBc\">Prototypes</a></span><span class=\"c8\">&nbsp;are the mechanism by which JavaScript objects inherit features from one another. Basically, when you try to access a property of an object: if the property can't be found in the object itself, the prototype is searched for the property. If the property still can't be found, then the prototype's prototype is searched, and so on until either the property is found.</span></p>"
            ],
            "Compose & Pipe function": [
                "<p class=\"c1\"><span class=\"c11\">The </span><span class=\"c2 c37\">compose()</span><span class=\"c8\">&nbsp;function takes a list of functions and returns a new function. This new function, when called with an argument, will apply the functions from right to left.</span></p>",
                "<p class=\"c1\"><span class=\"c11\">The </span><span class=\"c2 c37\">pipe()</span><span class=\"c8\">&nbsp;function is similar to compose(), but it applies the functions from left to right.</span></p>"
            ],
            "Reduce Function": [
                "<p class=\"c13\"><span class=\"c8\">It is used to get a single value out of array, value can be anything, string, number, object, array, etc</span></p>",
                "<p class=\"c13\"><span class=\"c11\">If you don't supply an initial value then the </span><span class=\"c2\">FIRST</span><span class=\"c8\">&nbsp;element of the array is used as initial value (and that element is skipped in the loop)</span></p>"
            ],
            "Proxy": [
                "<p class=\"c13\"><span class=\"c11\">In JavaScript, a </span><span class=\"c2\">Proxy</span><span class=\"c8\">&nbsp;is a built-in object that allows us to customise the fundamental operations (such as property access, assignment, function invocation, etc.) of an object. </span></p>",
                "<p class=\"c13\"><span class=\"c8\">It provides a way to define custom behaviour for these operations, effectively allowing us to create a \"wrapper\" around an object and control how it interacts with the outside world. </span></p>",
                "<p class=\"c13\"><span class=\"c8\">const proxy = new Proxy(target, handler);</span></p>"
            ],
            "Object.defineProperty() vs Proxy": [
                "<p class=\"c1\"><span class=\"c30 c2\">Object.defineProperty</span></p>",
                "<ul class=\"c10 lst-kix_cmy8yt14pykf-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Object.defineProperty is a method that allows you to add a new property or modify an existing property on an object and define certain behaviours for that property.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">It does not return a new object and modify the given object.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Object.defineProperty(obj, prop, descriptor);</span></li></ul>",
                "<p class=\"c1\"><span class=\"c30 c2\">Proxy</span></p>",
                "<ul class=\"c10 lst-kix_o4vvpogd4t8z-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">It returns a new object with the given behaviour applied</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">const proxyObj = new Proxy(obj, handler);</span></li></ul>"
            ],
            "Observer": [
                "<p class=\"c1\"><span class=\"c8\">Observer APIs are very useful to detect changes in the applications.</span></p>",
                "<ol class=\"c10 lst-kix_d01n41uqzul0-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">MutationObserver</span><span class=\"c8\">: Mutation Observer observes the DOM tree</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">IntersectionObserver</span><span class=\"c8\">: Intersection observer observes a DOM element’s visibility and positions.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">ResizeObserver</span><span class=\"c8\">: ResizeObserver observes the changes to the dimensions of a DOM element. </span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">PerformanceObserver</span><span class=\"c8\">: PerformanceObserver is used to observe performance measurement events and be notified of new performance entries as they are recorded in the browser's performance timeline.</span></li></ol>"
            ],
            "Module": [
                "<p class=\"c13\"><span class=\"c8\">JavaScript modules allow us to break up our code into separate files. This makes it easier to maintain the code-base.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">It relies on the </span><span class=\"c11 c37\">import</span><span class=\"c11\">&nbsp;and </span><span class=\"c11 c37\">export</span><span class=\"c8\">&nbsp;statements.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c13\"><span class=\"c30 c2\">person.js</span></p>",
                "<p class=\"c13\"><span class=\"c8\">const name = \"Jesse”, age = 40;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">export { name, age };</span></p>",
                "<p class=\"c13 c4\"><span class=\"c30 c2\"></span></p>",
                "<p class=\"c13\"><span class=\"c30 c2\">main.html</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&lt;script type=\"module\"&gt;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import { name, age } from \"./person.js\";</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&lt;/script&gt;</span></p>"
            ],
            "Falsy": [
                "<p class=\"c1\"><span class=\"c11\">A falsy (sometimes written falsey) value is a value that is considered false when encountered in a </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Glossary/Boolean&amp;sa=D&amp;source=editors&amp;ust=1707022712796252&amp;usg=AOvVaw3b0FYU4WMbeoBNt6q1hjNw\">Boolean</a></span><span class=\"c8\">&nbsp;context.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">E.g. null, undefined, 0, -0, “”, false, NaN, 0n, document.all()</span></p>"
            ],
            "Finally": [
                "<p class=\"c13\"><span class=\"c11\">The </span><span class=\"c2 c37\">finally</span><span class=\"c11\">&nbsp;statement in </span><span class=\"c2\">try catch finally</span><span class=\"c8\">&nbsp;defines a code block that always runs regardless of the result.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">finally() does not receive any argument.</span></p>"
            ],
            "Throttle & Debounce": [
                "<p class=\"c1\"><span class=\"c8\">Debounce &amp; Throttle is used to limit the rate of the given function call</span></p>",
                "<ul class=\"c10 lst-kix_bg6s3gg2skyn-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Throttle</span><span class=\"c8\">: the given function will be called at most once per specified period.</span></li></ul>",
                "<ul class=\"c10 lst-kix_bg6s3gg2skyn-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It is a technique in which there is always a specific delay(not more not less) b/w two function calls.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">e.g. shooting game, pistol gun can only be fired after some time is passed (reload duration)</span></li></ul>",
                "<ul class=\"c10 lst-kix_bg6s3gg2skyn-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Debounce</span><span class=\"c8\">: the given function will be called after a specified period after the caller stops calling the decorated function.</span></li></ul>",
                "<ul class=\"c10 lst-kix_bg6s3gg2skyn-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It is technique in which the given function is called only after a certain delay of time has been passed since the last trigger/firing of the event</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">e.g. search bar in any e-commerce website</span></li></ul>"
            ],
            "JS Data Structure & Time Complexity": [
                "<a id=\"t.ff6afe46f968dd172d90286dd11b224bed228eed\"></a>",
                "<a id=\"t.0\"></a>",
                "<table class=\"c45\"><tbody><tr class=\"c73\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">Data Structure</span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">Insertion</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">Deletion</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c2 c30\">Access</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">Search</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">Iteration</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">Size</span></p></td></tr><tr class=\"c56\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td></tr><tr class=\"c64\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">MAP: map = new Map()</span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">map.set(key, val)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">map.delete(key)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">map.get(key)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">map.has(key)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">map.keys(), map.values(), map.entries()</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">map.size</span></p></td></tr><tr class=\"c66\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td></tr><tr class=\"c66\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(log n)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(log n)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(log n)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(log n)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(1)</span></p></td></tr><tr class=\"c68\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td></tr><tr class=\"c72\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">OBJECT: obj = { }</span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">obj[key] = val</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">delete obj[key]</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">obj[key]</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">obj.hasOwnProperty(key)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Object.keys(obj), Object.values(obj), Object.entries(obj)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Object.keys(obj).length, Object.values(obj).length, Object.entries(obj).length</span></p></td></tr><tr class=\"c66\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(n)</span></p></td></tr><tr class=\"c59\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td></tr><tr class=\"c68\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td></tr><tr class=\"c72\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">SET: set = new Set()</span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">set.add(val)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">set.delete(val)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">set.has(val)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">set.has(val)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">set.values()</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">set.size</span></p></td></tr><tr class=\"c66\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td></tr><tr class=\"c59\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(1)</span></p></td></tr><tr class=\"c68\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c29 c4\"><span class=\"c30 c31\"></span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c4 c29\"><span class=\"c30 c31\"></span></p></td></tr><tr class=\"c66\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">ARRAY: arr = [ ]</span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">arr.push(val), arr.unshift(val)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">arr.pop(), arr.shift()</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">arr[idx]</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">arr.indexOf(val), arr.includes(val)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">arr.forEach()</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">arr.length</span></p></td></tr><tr class=\"c66\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">At the end</span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">push: O(1)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">pop: O(1)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(n)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Average: O(1)</span></p></td></tr><tr class=\"c72\"><td class=\"c25\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">At the Beginning </span></p></td><td class=\"c6\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">unshift: O(n)</span></p></td><td class=\"c21\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">shift: O(n)</span></p></td><td class=\"c19\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(1)</span></p></td><td class=\"c48\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c39\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(n)</span></p></td><td class=\"c35\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Worst: O(1)</span></p></td></tr></tbody></table>"
            ],
            "Spread vs Rest Operator": [
                "<p class=\"c13\"><span class=\"c8\">The main difference between rest and spread is that the rest operator puts the rest of some specific user-supplied values into a JavaScript array.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">But the spread syntax expands iterables into individual elements.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Spread operator deep copies the primitive properties(1st depth) of the object but for the nested objects it does only shallow copying</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Object Spread operator actually is internally the same as Object.assign(). Following 2 lines of code are totally the same.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let aClone = { ...a };</span></p>",
                "<p class=\"c1\"><span class=\"c11\">let aClone = Object.assign({}, a);</span></p>"
            ],
            "null vs undefined": [
                "<p class=\"c13\"><span class=\"c8\">null is a actual value assigned to a variable, which represents no value/null</span></p>",
                "<p class=\"c13\"><span class=\"c8\">and when a variable is declared but not initialised by any value, it is by default assigned undefined to it</span></p>",
                "<p class=\"c13\"><span class=\"c8\">console.log(null == undefined) //true because both of then does not represents a value</span></p>",
                "<p class=\"c13\"><span class=\"c11\">console.log(null === undefined) //false because typeof null is object, but type of undefined is undefined</span></p>"
            ],
            "undefined vs undeclared": [
                "<p class=\"c1\"><span class=\"c11\">An </span><span class=\"c2 c37\">undeclared</span><span class=\"c11\">&nbsp;variable is one that hasn't been declared at all, while an </span><span class=\"c2 c37\">undefined</span><span class=\"c11\">&nbsp;variable is one that has been declared but hasn't been assigned a value (not initialised).</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let y;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(y); // undefined, because y is declared but has not been assigned any value (not initialised)</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(x); // ReferenceError x is not defined</span></p>",
                "<p class=\"c1\"><span class=\"c8\">z = 10 // in strict mode // ReferenceError z is not defined</span></p>"
            ],
            "var vs let vs const": [
                "<p class=\"c13\"><span class=\"c11 c37\">var</span><span class=\"c11\">&nbsp;is function scoped, </span><span class=\"c11 c37\">let</span><span class=\"c11\">&nbsp;&amp; </span><span class=\"c11 c37\">const</span><span class=\"c8\">&nbsp;are block scoped.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">when we use </span><span class=\"c2 c37\">const</span><span class=\"c8\">&nbsp;to declare a variable, it means that the variable cannot be reassigned to a different value. However, it does not make the value itself immutable.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const myObject = { key: 'value' };</span></p>",
                "<p class=\"c1\"><span class=\"c8\">myObject.key = 'new value'; // This is allowed</span></p>",
                "<p class=\"c1\"><span class=\"c8\">myObject = { anotherKey: 'another value' }; // This will throw an error because we are trying to reassign myObject</span></p>",
                "<p class=\"c1\"><span class=\"c11\">In this case, the </span><span class=\"c11 c37\">myObject</span><span class=\"c8\">&nbsp;variable itself cannot be reassigned, but we can still modify the properties of the object it points to.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">In the case of strings, numbers, and booleans, we cannot reassign the variable because they are primitive values, and const prevents the variable from being reassigned.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Objects, on the other hand, are reference types in JavaScript. When we create an object, we are actually creating a reference to a location in memory. Using const with an object prevents reassignment of the variable to a different memory location, but it does not prevent us from modifying the properties of the object at that memory location.</span></p>"
            ],
            "Object.freeze() vs Object.seal()": [
                "<p class=\"c13\"><span class=\"c11 c37\">Object.freeze()</span><span class=\"c8\">&nbsp;does not let to add/modify/remove any property/key to object</span></p>",
                "<p class=\"c13\"><span class=\"c11\">but </span><span class=\"c11 c37\">Object.seal()</span><span class=\"c8\">&nbsp;can modify any existing property but doesn't let us add/delete property.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">If we attempt to modify a property on a frozen object in strict mode, JavaScript will fail silently or throw an error (in non-strict mode, it will fail silently).</span></p>"
            ],
            "Argument vs Parameter": [
                "<p class=\"c13\"><span class=\"c11\">The parameters are the </span><span class=\"c11 c37\">aliases</span><span class=\"c8\">&nbsp;for the values that will be passed to the function. The arguments are the actual values.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">function foo( a, b, c ) {}; // a, b, and c are the parameters</span></p>",
                "<p class=\"c13\"><span class=\"c8\">foo( 1, 2, 3 ); // 1, 2, and 3 are the arguments</span></p>"
            ],
            "Math.max/min": [
                "<p class=\"c1\"><span class=\"c8\">console.log(Math.min()) // Infinity</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(Math.max()) // -Infinity</span></p>"
            ],
            "NaN = Not a Number": [
                "<p class=\"c13\"><span class=\"c8\">console.log(NaN == NaN) // false</span></p>",
                "<p class=\"c13\"><span class=\"c8\">console.log(NaN === NaN) // false</span></p>",
                "<p class=\"c13\"><span class=\"c8\">console.log(Math.max(NaN, 1)) // NaN</span></p>",
                "<p class=\"c13\"><span class=\"c8\">console.log(Math.min(NaN, 1)) // NaN</span></p>",
                "<p class=\"c13\"><span class=\"c8\">console.log(Math.min(NaN, Infinity)) // NaN</span></p>",
                "<p class=\"c13\"><span class=\"c8\">console.log(Math.max(\"any string\", 1)) // NaN</span></p>",
                "<p class=\"c13\"><span class=\"c11\">The </span><span class=\"c11 c37\">Math.max()</span><span class=\"c11\">&nbsp;and </span><span class=\"c11 c37\">Math.min()</span><span class=\"c11\">&nbsp;functions return </span><span class=\"c11 c37\">NaN</span><span class=\"c8\">&nbsp;if any parameter isn't a number and can't be converted into one (of course NaN cannot be converted into a number).</span></p>"
            ],
            "Infinity": [
                "<p class=\"c1\"><span class=\"c8\">1/0 = Infinity</span></p>",
                "<p class=\"c1\"><span class=\"c8\">-1/0 = -Infinity</span></p>",
                "<p class=\"c1\"><span class=\"c8\">0 / Infinity = 0</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Infinity x 0 = NaN</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Infinity x 1 = Infinity</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Infinity + Infinity = Infinity</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Infinity - Infinity = NaN</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Infinity x Infinity = Infinity</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Infinity / Infinity = NaN</span></p>"
            ],
            "Operator Precedence": [
                "<p class=\"c1\"><span class=\"c2\">Number &gt; String &gt; Boolean</span></p>",
                "<p class=\"c1\"><span class=\"c8\">When using &gt; to compare two operands, if either operand is a number, Javascript will first convert the string/boolean to its equivalent number and then numerically compare.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">i.e. ’10’ &gt; 9</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Only when both operands are string, they are compared lexicographically. i.e. character by character until they are not equal or there aren't any characters left. The first character of '10' is less than the first character of '9' hence '10' is &lt; '9' i.e. ’10’ &lt; ’9’</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">Also, these operators work from left to right</span></p>"
            ],
            "== Operator": [
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Comparing Primitives (String, Number, Boolean):</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">If both of the operands are primitives and of the same type, == performs a simple value check.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">5 == 5; // true </span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">'hello' == 'hello'; // true</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">true == false; // false</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-0\" start=\"2\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Comparing Objects:</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">if both of the operands are objects, then JS compares them by their reference not value.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">i.e. if both objects are pointing to same memory location, if yes then it will return true otherwise false</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">const obj1 = { key: 'value' }; <br>const obj2 = { key: 'value' }; <br>console.log(obj1 == obj2); // false, because they are different objects in memory</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">const arr = [1];<br>console.log(arr == arr); // true, because they are same objects in memory</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">console.log({} == {}); // false, because they are different objects in memory</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-0\" start=\"3\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Comparing Different Types: Number &gt; String &gt; Boolean</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c30 c2\">Number and String:</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">If one operand is a number and the other is a string, JavaScript tries to convert the string to a number and then compares them.</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ol>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-3 start\"><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">5 == '5'; // true, because the string '5' is coerced to the number 5</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">5 == 'yo bro'; // false, because the string 'yo bro' is coerced to the NaN</span></li></ul>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-1\" start=\"2\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c30 c2\">Boolean and Non-Boolean:</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c30 c2\">Boolean and Number</span></li></ol>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-3 start\"><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">When comparing a boolean and a number value, the boolean is converted to a number (true becomes 1, false becomes 0).</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ul>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-4 start\"><li class=\"c1 c40 c63 li-bullet-0\"><span class=\"c8\">true == 1; // true </span></li><li class=\"c1 c40 c63 li-bullet-0\"><span class=\"c8\">false == 0; // true</span></li><li class=\"c1 c40 c63 li-bullet-0\"><span class=\"c8\">false == 1; // false</span></li><li class=\"c1 c40 c63 li-bullet-0\"><span class=\"c8\">true == 2; // false</span></li></ul>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2\" start=\"2\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c30 c2\">Boolean and String</span></li></ol>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-3 start\"><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">When comparing a boolean and a string value, the boolean is converted to its string value (true becomes “true”, false becomes “false”)</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ul>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-4 start\"><li class=\"c1 c40 c63 li-bullet-0\"><span class=\"c8\">“true” == true // true, because true if coerced to “true”</span></li><li class=\"c1 c40 c63 li-bullet-0\"><span class=\"c8\">“false” == false // true</span></li><li class=\"c1 c40 c63 li-bullet-0\"><span class=\"c8\">“Nyc pik” == true // false </span></li></ul>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-1\" start=\"3\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c30 c2\">Null and Undefined:</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">null and undefined are equal when using ==</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ol>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-3 start\"><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">null == undefined; // true</span></li></ul>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-1\" start=\"4\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c30 c2\">Object and Primitive:</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">If one operand is an object and the other is a primitive value, the object is converted to a primitive value using the object's valueOf() and toString() methods.</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ol>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-3 start\"><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">'hello' == new String('hello'); // true, because the object, new String('hello') &nbsp;is coerced to the primitive value 'hello'</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">1 == [1]; // true, because the object [1], is converted to string “1” using [1].toString() and 1 == “1” as “1” is coerced to 1 so 1 == 1, which is true</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">false == [0] // true</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">[0] == 0 // true, “0” == 0 -&gt; 0 == 0 -&gt; true</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">[0] == “” // false, “0” == “” -&gt; false</span></li></ul>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-1\" start=\"5\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c30 c2\">Different Objects:</span></li></ol>",
                "<ol class=\"c10 lst-kix_5iqxsvp2wyly-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">When comparing two different object types, the references are compared, not the contents of the objects.</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">e.g.</span></li></ol>",
                "<ul class=\"c10 lst-kix_5iqxsvp2wyly-3 start\"><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">[] == {}; // false, because they are different objects in memory</span></li></ul>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log([1] == 1) // 1 == 1 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log([1] == '1') // 1 == 1 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(['1'] == '1') // 1 == 1 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(['1'] == 1) // 1 == 1 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log([1] == ['1']) // false as both are arrays (not the same reference)</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(new Boolean(true) == 1) // 1 == 1 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(new Boolean(true) == new Boolean(true)) // false as both are actually objects</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(Boolean(true) == '1') // true == '1' = 1 == 1 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(Boolean(false) == [0]) // false == [0] = 0 == 0 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(new Boolean(true) == '1') // object true == '1' = 1 == 1 = true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(new Boolean(false) == [0]) // object fasle == [0] = // false as both are actually objects</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(null == undefined) // true</span></p>"
            ],
            "+ Operator": [
                "<p class=\"c13\"><span class=\"c8\">+&lt;anyString which is not a number&gt; = NaN, &nbsp;e.g. ‘biro’</span></p>",
                "<p class=\"c13\"><span class=\"c8\">+&lt;anyString which is a number&gt; = that number, &nbsp;e.g. ‘1’</span></p>",
                "<p class=\"c13\"><span class=\"c8\">+&lt;anyNumber&gt; = that number</span></p>",
                "<p class=\"c13\"><span class=\"c8\">+{ } = NaN</span></p>",
                "<p class=\"c13\"><span class=\"c8\">+[ ] = 0</span></p>",
                "<p class=\"c13\"><span class=\"c8\">// In mathematical operators, + works on both numbers and strings (used in string concatenation). </span></p>",
                "<p class=\"c13\"><span class=\"c8\">// Hence, if any of the operands is not a number(string), using + converts all operand/s to string and concatenates.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">String({ }) = “[object Object]”</span></p>",
                "<p class=\"c13\"><span class=\"c8\">String([ ]) = “”</span></p>",
                "<p class=\"c13\"><span class=\"c8\">String(123) = “123”</span></p>"
            ],
            "to check if a key present in object": [
                "<ol class=\"c10 lst-kix_n8l82284olve-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c11\">if ('key' in myObj), </span><span class=\"c2\">BUT</span><span class=\"c11\">&nbsp;the </span><span class=\"c11 c37\">in</span><span class=\"c8\">&nbsp;operator matches all object keys, including those in the object's prototype chain.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c11\">so best way is to use<br> </span><span class=\"c2 c37\">myObj.hasOwnProperty('key')</span></li></ol>"
            ],
            "Sparse Array": [
                "<p class=\"c1\"><span class=\"c11\">In JavaScript, a sparse array is an array in which not all elements have been assigned a value. This means that there are \"holes\" or empty slots in the array, where no value is stored. These holes are represented by </span><span class=\"c11 c37\">undefined</span><span class=\"c8\">.</span></p>"
            ],
            "Array.flat(depth)": [
                "<p class=\"c1\"><span class=\"c11\">It is used to flatten a array till given depth</span></p>",
                "<p class=\"c1\"><span class=\"c11 c37\">Array.prototype.flat()</span><span class=\"c8\">&nbsp;method can be used with sparse arrays. When we apply flat() to a sparse array, it will remove empty slots (undefined elements) and return a new array with only the defined elements.</span></p>"
            ],
            "Array.Sort()": [
                "<p class=\"c13\"><span class=\"c8\">Array.sort expects a compare function that defines the sort order. </span></p>",
                "<p class=\"c13\"><span class=\"c8\">If omitted, the array elements are converted to strings, then sorted lexicographically</span></p>",
                "<p class=\"c13\"><span class=\"c8\">i.e [999, 1111, 111, 2, 0] will become [0,111,1111,2,999]</span></p>"
            ],
            "Function Currying": [
                "<p class=\"c13\"><span class=\"c8\">Currying is a technique in functional programming, in which a function with multiple arguments is converted into several functions in sequence, each taking one or more arguments.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">It can be done in 2 ways:</span></p>",
                "<ol class=\"c10 lst-kix_p9iksw5dodg2-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Closure methods</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Bind</span></li></ol>"
            ],
            "Memoization": [
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=http://en.wikipedia.org/wiki/Memoization&amp;sa=D&amp;source=editors&amp;ust=1707022712820347&amp;usg=AOvVaw1E0zZnfkPqC9Ucyzi2J3xP\">Memoization</a></span><span class=\"c8\">&nbsp;is a programming technique which is used to increase a function’s performance by caching its previously computed results.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Because JavaScript objects behave like associative arrays, they are ideal candidates to act as caches. Each time a memoized function is called, its parameters are used to index the cache. If the data is present, then it can be returned, without executing the entire function. However, if the data is not cached, then the function is executed, and the result is added to the cache.</span></p>"
            ],
            "Passing by value, Passing by reference & their relation with react memoization": [
                "<ol class=\"c10 lst-kix_c29wi48j1dj1-1 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Passing by value:</span><span class=\"c34 c11\">&nbsp;All primitives (number, string, boolean, etc) in JS are passed by value.<br>Means when we pass a primitive data type variable as an argument to a function. Any change in that argument inside that function does not affect the original variable.<br>e.g.<br></span><span class=\"c8\">const count = 1;<br>function increaseCount(count) {</span></li></ol>",
                "<p class=\"c1 c28 c22\"><span class=\"c8\">count++;</span></p>",
                "<p class=\"c1 c28 c22\"><span class=\"c8\">return count;</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4 c28\"><span class=\"c8\"></span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">const increaseCountResp = increaseCount(count);</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">console.log(\"count\", count); // 1</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">console.log(\"increaseCountResp\", increaseCountResp); // 2<br></span></p>",
                "<ol class=\"c10 lst-kix_c29wi48j1dj1-1\" start=\"2\"><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Passing by reference:</span><span class=\"c11 c34\">&nbsp;objects (object, array, function, etc) in JS are passed by reference. Means when we pass an object data type variable as an argument to a function. Any change in t</span><span class=\"c11\">hat argument inside that function also affects the original variable.<br></span><span class=\"c34 c11\">e.g.</span></li></ol>",
                "<p class=\"c1 c28\"><span class=\"c8\">const obj = { a: \"a\" };</span></p>",
                "<p class=\"c1 c4 c28\"><span class=\"c8\"></span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">function addGreet(obj) {</span></p>",
                "<p class=\"c1 c28 c22\"><span class=\"c8\">obj.greet = \"Hello World\";</span></p>",
                "<p class=\"c1 c20\"><span class=\"c8\">return obj;</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4 c28\"><span class=\"c8\"></span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">const greetResp = addGreet(obj);</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">console.log(\"obj\", obj); // { a: 'a', greet: 'Hello World' }</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">console.log(\"greetResp\", greetResp); // { a: 'a', greet: 'Hello World' }<br></span></p>",
                "<ol class=\"c10 lst-kix_c29wi48j1dj1-1\" start=\"3\"><li class=\"c0 li-bullet-0\"><span class=\"c34 c11\">In react, </span><span class=\"c2 c34\">React.memo </span><span class=\"c34 c11\">is used to memoize a component. It prevents re-rendering of the component if its props have not been updated. And in react, props are passed by value. So if the props which are passed to a component does not change, then the memoized component can be used directly which can prevent its re-render.</span></li></ol>"
            ],
            "ES Modules (ESM) vs CommonJS (CJS)": [
                "<p class=\"c1\"><span class=\"c8\">ES Modules (ESM) and CommonJS (CJS) are two different systems for organising and importing/exporting code in JavaScript.</span></p>",
                "<ol class=\"c10 lst-kix_i69mv690y5b1-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Syntax</span><span class=\"c8\">: ES Modules use import and export statements to define dependencies and expose functionality between different modules, while CommonJS uses require() to import modules and module.exports or exports to export functionality.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Async Import:</span><span class=\"c8\">&nbsp;ES Modules support asynchronous loading of modules using the import() function, allowing you to conditionally load modules while CJS only supports synchronous Import.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Named and Default Exports:</span><span class=\"c8\">&nbsp;ESM supports both named exports (exporting specific entities from a module) and default exports (exporting a single entity as the module's default), while CJS supports only named exports.</span></li></ol>"
            ],
            "ECMAScript": [
                "<p class=\"c13\"><span class=\"c8\">ECMAScript is the standardised specification of the rules, syntax, and features of writing code in a scripting language.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">JavaScript is a practical implementation of that specification, used for creating dynamic and interactive web applications and supported by various environments and platforms.</span></p>"
            ],
            "Features of ES6": [
                "<ul class=\"c10 lst-kix_9h1qo89tgt5o-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_let&amp;sa=D&amp;source=editors&amp;ust=1707022712822002&amp;usg=AOvVaw1AYVm-rpdOe2SSDmSGRyGA\">The let keyword</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_const&amp;sa=D&amp;source=editors&amp;ust=1707022712822132&amp;usg=AOvVaw1nYdCxIhGjKtBMFvm92QUF\">The const keyword</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_arrow&amp;sa=D&amp;source=editors&amp;ust=1707022712822241&amp;usg=AOvVaw0vce8szqTShjFmImViZqGN\">Arrow Functions</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.javascripttutorial.net/es6/javascript-template-literals/&amp;sa=D&amp;source=editors&amp;ust=1707022712822370&amp;usg=AOvVaw38LzvlLe4DjR1nhzOLlfsR\">template literals</a></span><span class=\"c8\">: `${name} is a good boy`</span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_forof&amp;sa=D&amp;source=editors&amp;ust=1707022712822479&amp;usg=AOvVaw21U_v6tuEI-hO088Rkbk6k\">For/of</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_map&amp;sa=D&amp;source=editors&amp;ust=1707022712822585&amp;usg=AOvVaw1gUMNdvA2l-6wXK5_liKLr\">Map Objects</a></span><span class=\"c8\">: The Map object holds key-value pairs and remembers the original insertion order of the keys.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_set&amp;sa=D&amp;source=editors&amp;ust=1707022712822692&amp;usg=AOvVaw0sjMj8FJTrjp1V0gGjv66-\">Set Objects</a></span><span class=\"c8\">: The Set object lets you store unique values of any type.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_class&amp;sa=D&amp;source=editors&amp;ust=1707022712822803&amp;usg=AOvVaw2aghjuLkPC-QjdIZxF371c\">Classes</a></span><span class=\"c8\">: JS Classes are templates for JS Objects.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_promise&amp;sa=D&amp;source=editors&amp;ust=1707022712822911&amp;usg=AOvVaw3VvJbVSSZ1USby7afxAOjR\">Promises</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_param&amp;sa=D&amp;source=editors&amp;ust=1707022712823024&amp;usg=AOvVaw1rGMj6yjHnajxujW3jyAO9\">Default Parameters</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/Js/js_es6.asp%23mark_rest&amp;sa=D&amp;source=editors&amp;ust=1707022712823131&amp;usg=AOvVaw0WyTdPq7fYUENlsOKCvHrM\">Function Rest Parameter</a></span></li></ul>"
            ],
            "Interpolation": [
                "<p class=\"c1\"><span class=\"c8\">In JavaScript, interpolation is the process of inserting strings or values into an existing string.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">t(\"MNgo Quiz is {{evaluation}}\", { evaluation: 'fantastic' })</span></p>"
            ],
            "Idempotent": [
                "<p class=\"c1\"><span class=\"c8\">An operation is known as idempotent if applying it multiple times has the same effect as applying it once.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g. </span></p>",
                "<p class=\"c1\"><span class=\"c2\">PUT</span><span class=\"c11\">&nbsp;HTTP request is </span><span class=\"c2\">idempotent</span><span class=\"c8\">&nbsp;because it will update the same value multiple time for the same request</span></p>",
                "<p class=\"c1\"><span class=\"c2\">POST</span><span class=\"c11\">&nbsp;HTTP request is </span><span class=\"c2\">not idempotent</span><span class=\"c11\">&nbsp;as it will keep creating a new entry for the same request if called multiple times</span></p>"
            ],
            "How npm works": [
                "<p class=\"c1\"><span class=\"c8\">npm (Node Package Manager) is a package manager for JavaScript and Node.js which is used to manage and distribute packages (libraries, frameworks, etc.). It allows us to easily install, update, and manage dependencies in our project. </span></p>",
                "<ol class=\"c10 lst-kix_x766zvfza836-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">if we do npm install somewhere deep inside a project, it goes up and up till it finds package.json file or node_modules folder (root of the project), for installing dependencies of the project </span></li><li class=\"c16 li-bullet-0\"><span class=\"c11\">When we install a package, npm adds an entry for that package along with its versions in the </span><span class=\"c2\">package.json</span><span class=\"c8\">&nbsp;file under the \"dependencies\" section.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Dependency Resolution: </span><span class=\"c11\">npm creates a </span><span class=\"c2\">package-lock.json</span><span class=\"c8\">&nbsp;file that locks package’s dependency versions, to ensure consistent and reproducible builds and they are compatible with each other.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c11\">npm supports scoped packages, which group related packages together under a specific scope (e.g. </span><span class=\"c2\">@organisation/package</span><span class=\"c8\">).</span></li></ol>",
                "<p class=\"c1\"><span class=\"c8\">NPM streamlines the process of managing dependencies and packages in JavaScript and Node.js projects</span></p>",
                "<ol class=\"c10 lst-kix_veiiswi3myjt-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">installation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">version management</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">dependency resolution</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">script execution</span></li></ol>"
            ],
            "Versioning": [
                "<p class=\"c13\"><span class=\"c8\">&lt;major version&gt;.&lt;minor version&gt;.&lt;patch version&gt;</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<a id=\"t.1e089d50462443b6a9e5f007fade69c02e68b5f1\"></a>",
                "<a id=\"t.1\"></a>",
                "<table class=\"c45\"><tbody><tr class=\"c44\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">value</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">desc</span></p></td></tr><tr class=\"c44\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">version</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Must match version exactly</span></p></td></tr><tr class=\"c44\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">~version</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">Approximately equivalent, i.e. only accept new </span><span class=\"c2\">patch</span><span class=\"c8\">&nbsp;versions</span></p></td></tr><tr class=\"c44\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">^version</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">Compatible with version, i.e. accept new </span><span class=\"c2\">minor and patch</span><span class=\"c8\">&nbsp;versions</span></p></td></tr><tr class=\"c59\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">&gt;version, &gt;=version, &lt;version, &lt;=version</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Version should match the condition</span></p></td></tr><tr class=\"c59\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">1.2.x</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">1.2.0, 1.2.1, etc., but not 1.3.0</span></p></td></tr><tr class=\"c59\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">*</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Matches any version</span></p></td></tr><tr class=\"c59\"><td class=\"c62\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">latest</span></p></td><td class=\"c49\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Obtains latest release</span></p></td></tr></tbody></table>"
            ],
            "What is Bundler": [
                "<p class=\"c13\"><span class=\"c8\">A bundler is a tool used in web development to combine multiple separate files, often written in different languages or technologies, into a single file or a smaller number of files.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here are the key aspects and benefits of using a bundler:</span></p>",
                "<ol class=\"c10 lst-kix_topoctn1gqvm-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">File Dependency Resolution:</span><span class=\"c8\">&nbsp;Bundlers analyse the codebase to determine the dependencies between different files, including JavaScript modules, CSS files, images, and more.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Code Transformation: </span><span class=\"c8\">Bundlers can apply transformations to the code, such as transpiling newer JavaScript syntax into a version compatible with older browsers.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Optimising and Minifying: </span><span class=\"c8\">Bundlers can optimise code by removing whitespace, renaming variables, and performing other operations to reduce file size. This is often referred to as minification.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Module System Compatibility: </span><span class=\"c8\">Bundlers allow you to use modern JavaScript module systems (like ES6 Modules) and bundle them for browsers that may not natively support these features.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Code Splitting: </span><span class=\"c8\">Bundlers support code splitting, which allows parts of the application to be loaded on demand, improving initial load times.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Asset Management: </span><span class=\"c8\">Bundlers can handle assets like images, fonts, and other files, ensuring they are included and processed correctly in the final output.</span></li></ol>",
                "<p class=\"c13\"><span class=\"c8\">e.g. Webpack, Rollup, Parcel, Browserify</span></p>"
            ],
            "Webpack": [
                "<p class=\"c13\"><span class=\"c8\">Webpack is a popular open-source module bundler for modern web applications. It's widely used in the JavaScript ecosystem to manage and bundle various assets like JavaScript files, CSS files, images, fonts, and more. Webpack helps optimise the loading and execution of web applications by intelligently combining and serving these assets.</span></p>",
                "<ol class=\"c10 lst-kix_so97aj7h750j-0 start\" start=\"1\"><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c8\">Webpack offers various optimization techniques, including minification, code splitting, and caching, to improve the performance of web applications.</span></li><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c8\">Webpack supports tree shaking, a technique that eliminates dead code (unused exports) from the final bundle. This helps reduce file size.</span></li><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c11\">Webpack is highly configurable through a </span><span class=\"c2\">webpack.config.js</span><span class=\"c8\">&nbsp;file. This file specifies how Webpack should process different types of files and how the final bundle should be generated.</span></li><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c8\">Webpack uses loaders to preprocess files. Loaders transform files from one format to another.</span></li><li class=\"c13 c28 c40 li-bullet-0\"><span class=\"c11\">Webpack provides a development server that enables</span><span class=\"c2\">&nbsp;Hot Module Replacement (HMR)</span><span class=\"c8\">. This means that when you make changes to your code, the browser is updated in real-time without requiring a full page refresh.</span></li></ol>"
            ],
            "Parcel": [
                "<p class=\"c1\"><span class=\"c8\">Parcel is a zero-configuration module bundler. It's designed to be extremely easy to set up and use, making it a good choice for quick prototyping or smaller projects.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Key Features of Parcel:</span></p>",
                "<ol class=\"c10 lst-kix_d5a2l8k8h6kf-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Zero Configuration</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Built-in Support for Common Technologies: React, vue, Svelte, without extra configuration</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Code Splitting</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Hot Module Replacement (HMR)</span></li></ol>"
            ],
            "Babel": [
                "<p class=\"c13\"><span class=\"c8\">Babel transpiles modern JavaScript code (ES6+ syntax) into a version of JavaScript that is compatible with older browsers and environments. This allows developers to write code using the latest language features while ensuring it can run on a wider range of platforms.</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Babel is commonly used in React projects to transpile JSX syntax into regular JavaScrip</span><span class=\"c8\">t.</span></p>",
                "<p class=\"c1\"><span class=\"c11\">Babel can be configured using a configuration file (usually named .</span><span class=\"c2\">babelrc</span><span class=\"c8\">) or through configuration options in package.json. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here's how Babel works:</span></p>",
                "<ol class=\"c10 lst-kix_j4tr1tp3rbqn-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Parsing</span><span class=\"c11\">: Babel starts by parsing the input JavaScript code using a parser like </span><span class=\"c2\">Babel Parser</span><span class=\"c8\">. This step breaks down the code into an Abstract Syntax Tree (AST), which is a hierarchical representation of the code's structure.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Transformation</span><span class=\"c8\">: Once the code is parsed, Babel can apply various plugins to the AST. These plugins can do things like transforming newer syntax into equivalent older syntax or adding polyfills for missing features.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Generation</span><span class=\"c8\">: After the AST has been transformed, Babel then generates code from the modified AST. This code is typically in an older version of JavaScript that is widely supported across different environments.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Output</span><span class=\"c8\">: The transformed code is then outputted, and it can be saved to a file or used directly in a browser or server environment.</span></li></ol>"
            ],
            "Source Maps": [
                "<p class=\"c13\"><span class=\"c11\">Source maps are a way to map a bundled (combined/minified) code back to an unbuilt state. When we build for production, along with minifying and combining our JavaScript files, we generate a source map too which holds information about the original files.</span></p>"
            ],
            ".env variable": [
                "<p class=\"c13\"><span class=\"c8\">An \"environment variable,\" often referred to simply as an \"env variable,\" is a variable outside of a program or application that stores configuration settings, system information, or any data that needs to be available to multiple processes or components within an operating system or application environment. These variables are used to customise the behaviour of software and to manage various aspects of the environment in which programs run.</span></p>"
            ],
            "Prettier": [
                "<p class=\"c13\"><span class=\"c8\">Prettier is an open-source code formatter that is used to format the code to follow a consistent style and layout. It supports various programming languages, including JS, TS, HTML, CSS, JSON, and more. Prettier helps teams maintain a standardised code style without manual formatting efforts or debates over code formatting conventions.</span></p>"
            ],
            "Linter": [
                "<p class=\"c13\"><span class=\"c8\">A linter is a code analysis tool used to check source code for potential errors, bugs, style violations, and adherence to coding standards or style guidelines. It helps identify issues early in the development process, before the code is executed or deployed, reducing the likelihood of bugs and making the codebase more maintainable.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">e.g. </span><span class=\"c2\">ESLint</span><span class=\"c11\">&nbsp;(for JavaScript and TypeScript), </span><span class=\"c2\">Pylint</span><span class=\"c11\">&nbsp;(for Python), </span><span class=\"c2\">TSLint</span><span class=\"c11\">&nbsp;(for TypeScript), </span><span class=\"c2\">Stylelint</span><span class=\"c11\">&nbsp;(for CSS and Sass)</span></p>"
            ],
            "Unit Testing": [
                "<p class=\"c13\"><span class=\"c8\">Unit testing is a software development practice in which individual units or components (like functions, methods, or modules) of a program are tested in isolation from the rest of the application. The goal is to ensure that each unit of code works as expected.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here are the key aspects of unit testing:</span></p>",
                "<ol class=\"c10 lst-kix_bow3ara6toou-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Isolation</span><span class=\"c8\">: Unit tests focus on testing a specific piece of functionality in isolation. This means that external dependencies or interactions are typically replaced with mock objects or stubs.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Fast Execution: </span><span class=\"c8\">Unit tests should be quick to execute. This allows developers to get fast feedback on the correctness of their code.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Deterministic: </span><span class=\"c8\">A unit test should always produce the same result when run under the same conditions. This means that tests should not rely on external factors like the network or system time.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Repeatable: </span><span class=\"c8\">Unit tests should be repeatable in different environments. They should produce the same results whether run on a developer's machine or in a CI/CD pipeline.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Independent: </span><span class=\"c8\">Unit tests should be independent of each other. The success or failure of one test should not impact the results of another test.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Good Test Coverage: </span><span class=\"c8\">The goal of unit testing is to achieve a high level of test coverage, ensuring that most if not all code paths are tested.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Refactoring Safety Net: </span><span class=\"c8\">Unit tests act as a safety net when refactoring code. They help ensure that existing functionality remains intact after making changes.</span></li></ol>"
            ],
            "End to End Testing": [
                "<p class=\"c1\"><span class=\"c8\">The primary goal of E2E testing is to ensure that all components or units work together correctly in a real-world scenario. It helps catch integration issues and ensures that the application functions as expected from the user's perspective. e.g. Selenium, Cypress, Puppeteer, and TestCafe</span></p>",
                "<ol class=\"c10 lst-kix_nl4jwaz02050-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Scope</span><span class=\"c8\">: E2E testing aims to test the entire flow of an application from the user's perspective. It simulates real user interactions with the system.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Granularity</span><span class=\"c8\">: E2E tests are coarse-grained and cover a broader range of functionalities. They often involve multiple units and can span across different components or modules.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Dependencies</span><span class=\"c8\">: E2E tests do not typically use mocks or stubs. They interact with the actual application and its dependencies as a real user would.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Speed</span><span class=\"c8\">: E2E tests are slower compared to unit tests because they involve interactions with the entire application, including user interfaces, databases, and external systems.</span></li></ol>"
            ],
            "Test Driven Development (TDD)": [
                "<p class=\"c1\"><span class=\"c11\">Test Driven Development (TDD) is a software development practice that focuses on creating unit test cases before writing the actual code.</span></p>"
            ],
            "Git": [
                "<p class=\"c1\"><span class=\"c2\">Revert a commit: </span><span class=\"c8\">git revert &lt;commit id&gt; or git reset –soft &lt;commit id&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Git Rebase:</span><span class=\"c8\">&nbsp;naam pe dhyaan do -&gt; re-base (change base of the feature branch to the latest commit of the main branch)</span></p>",
                "<p class=\"c1\"><span class=\"c11\">Ref: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3D0chZFIZLR_0&amp;sa=D&amp;source=editors&amp;ust=1707022712831174&amp;usg=AOvVaw1NwrkWVOQqoit3hFEBUaCp\">https://www.youtube.com/watch?v=0chZFIZLR_0</a></span></p>",
                "<p class=\"c1\"><span class=\"c30 c2\">git merge vs git rebase: </span></p>",
                "<ol class=\"c10 lst-kix_dsclaz4niv2u-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">git merge: </span><span class=\"c11\">git merge combines the changes from one branch into another branch, creating a new \"merge commit\" that has two parent commits. </span><span class=\"c53 c2 c37\">git merge &lt;source-branch&gt;</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">git rebase:</span><span class=\"c11\">&nbsp;git rebase moves or combines a sequence of commits to a new base commit. It essentially rewrites the commit history.</span><span class=\"c2 c37\">&nbsp;git rebase &lt;target-branch&gt;</span></li></ol>"
            ],
            "Debugging": [
                "<p class=\"c13\"><span class=\"c30 c2\">Steps involved in Debugging</span></p>",
                "<ol class=\"c10 lst-kix_kf3zgyqol2h4-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Reproducing the Error:</span><span class=\"c8\">&nbsp;Before you can debug an issue, you need to be able to reproduce it consistently. This involves understanding the conditions or inputs that lead to the problem.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Identify the Actual Error:</span><span class=\"c8\">&nbsp;Identifying an error in a wrong may result in the wastage of time. It is very obvious that the production errors reported by users are hard to interpret, and sometimes the information we receive is misleading. Thus, it is mandatory to identify the actual error.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Find the Error Location:</span><span class=\"c8\">&nbsp;Once the error is correctly discovered, you will be required to thoroughly review the code repeatedly to locate the position of the error. In general, this step focuses on finding the error rather than perceiving it.</span></li></ol>",
                "<ol class=\"c10 lst-kix_kf3zgyqol2h4-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Use Console Logs</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Set Breakpoints</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Step Through the Code</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Isolate the Problem: Narrow down the scope of the problem. Identify which part of the code is causing the issue. This may involve commenting out sections of code to see when the behaviour changes.</span></li></ol>",
                "<ol class=\"c10 lst-kix_kf3zgyqol2h4-0\" start=\"4\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Analyse the Error:</span><span class=\"c8\">&nbsp;The next step comprises error analysis, a bottom-up approach that starts from the location of the error followed by analysing the code. This step makes it easier to comprehend the errors. Mainly error analysis has two significant goals, i.e., evaluation of errors all over again to find existing bugs and postulating the uncertainty of incoming collateral damage in a fix.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Test Potential Solutions: </span><span class=\"c8\">Implement potential solutions one at a time and test to see if they resolve the issue. Be cautious and make small, reversible changes.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Document Your Findings:</span><span class=\"c8\">&nbsp;Keep track of what you've tried, what worked, and what didn't. This documentation can be valuable for future debugging or for team members.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Retest and Verify: </span><span class=\"c11\">After making changes, ensure that the issue is resolved and that it didn't introduce any new problems.</span></li></ol>"
            ],
            "SOLID Principles in OOP": [
                "<p class=\"c1\"><span class=\"c8\">The SOLID principles are a set of five design principles that are intended to guide software development in order to create maintainable, flexible, and scalable code. </span></p>",
                "<ol class=\"c10 lst-kix_3u32e4rkoy3e-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Single Responsibility Principle (SRP):</span><span class=\"c8\">&nbsp;Given class should have only 1 responsibility.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Open-Closed Principle (OCP):</span><span class=\"c24\">&nbsp;</span><span class=\"c8\">Software entities (classes, modules, functions) should be open for extension but closed for modification, meaning new functionality can be added to the system without altering existing code.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Liskov Substitution Principle (LSP):</span><span class=\"c8\">&nbsp;Objects of a subclass should be able to replace Objects of superclass without affecting the correctness of the program.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Interface Segregation Principle (ISP):</span><span class=\"c8\">&nbsp;Breaking large interfaces into smaller, specific interfaces Instead of having monolithic interfaces.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Dependency Inversion Principle (DIP):</span><span class=\"c11\">&nbsp;High-level modules should not depend on low-level modules, but both should depend on abstractions (interfaces or abstract classes).</span></li></ol>"
            ],
            "Design Patterns": [
                "<p class=\"c13\"><span class=\"c11\">ref: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3Dtv-_1er1mWI&amp;sa=D&amp;source=editors&amp;ust=1707022712832778&amp;usg=AOvVaw2X2ZclMT0U42hnxiKYyKpe\">https://www.youtube.com/watch?v=tv-_1er1mWI</a></span></p>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Creational Design Patterns:</span><span class=\"c8\">&nbsp;how objects are created</span></li></ul>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Singleton</span><span class=\"c8\">: It guarantees a single instance of an object. Imagine you have a magical treasure chest. The Singleton pattern ensures that you always use the same chest throughout your journey, no matter how many times you need it.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Factory</span><span class=\"c8\">: Defines an interface for creating an object but lets subclasses alter the type of objects that will be created. Think of a car factory. The Factory pattern is like an assembly line that produces cars. Instead of building a car from scratch each time, you have a factory that churns out cars with consistent features.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Builder</span><span class=\"c8\">: Separates the construction of a complex object from its representation. Let's imagine you're building a fancy house. The Builder Pattern is like having a skilled team of builders who follow a blueprint to construct your dream home, step by step. Each builder has a specific role, and they work together to create a house that meets your requirements.</span></li></ul>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Structural Design Patterns:</span><span class=\"c8\">&nbsp;how objects relate to each other</span></li></ul>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Decorator</span><span class=\"c8\">: Attaches additional responsibilities to an object dynamically. Consider a plain cake. The Decorator pattern is like adding layers of frosting, fruits, or chocolate to make the cake fancy. You enhance an object's functionality by wrapping it with additional features.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Module</span><span class=\"c8\">: Organises code into separate modules, similar to having different compartments in a toolbox for organising tools.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Adapter</span><span class=\"c8\">: Allows objects with incompatible interfaces to work together. Imagine you have a collection of old, vintage vinyl records that you want to play. However, your fancy new sound system only supports the latest digital music formats. This is where the adapter comes in. The adapter is like a magical device that you plug into your sound system. It knows how to translate the signals from your old vinyl records into a format that the new sound system can understand.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Facade</span><span class=\"c8\">: Provides a simplified interface to a complex system of classes. Imagine you have a complex gadget, like a high-tech coffee maker with many buttons, switches, and settings. Making a cup of coffee might involve a series of steps and configurations. Now, not everyone is a barista or interested in all the technical details of the coffee maker. Some just want a quick and easy way to get their coffee. The facade is like a simplified control panel on the coffee maker that provides easy buttons like \"Start,\" \"Brew,\" or \"Cappuccino.\" It hides the complexity of the inner workings of the coffee maker.</span></li></ul>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Behavioural Design Patterns</span><span class=\"c8\">: how objects communicate with each other</span></li></ul>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Observer</span><span class=\"c8\">: Defines a one-to-many dependency between objects, so that when one object changes state, all its dependents are notified and updated automatically. Picture a weather station. The Observer pattern is like having many weather apps on your phone. Whenever the weather changes, all the apps get updated simultaneously. It's a way for multiple parts of your program to stay in sync.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Mediator</span><span class=\"c8\">: Reduces direct connections between objects by introducing a central mediator object.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Command</span><span class=\"c8\">: Turns a request into a stand-alone object, encapsulating all the information about the request. Encapsulates a request as an object, allowing you to parameterize clients with queues, requests, and operations, like giving commands to a robot that executes them later.</span></li></ul>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Architectural Patterns</span><span class=\"c8\">:</span></li></ul>",
                "<ul class=\"c10 lst-kix_w0hqh8eqxkcy-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">MVC (Model-View-Controller):</span><span class=\"c8\">&nbsp;Separates an application into three interconnected components: Model (data), View (user interface), and Controller (handles user input). Consider a restaurant. The MVC pattern separates the kitchen (Model), where the food is prepared, the dining area (View), where customers see and enjoy the food, and the waiter (Controller), who takes orders and communicates between the kitchen and dining area.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">MVVM (Model-View-ViewModel):</span><span class=\"c8\">&nbsp;MVVM is like building a house where you have a blueprint (Model), the actual house (View), and an interior decorator (ViewModel) making sure everything looks good inside based on the plan</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Flux</span><span class=\"c8\">: An architecture for managing the flow of data in a web application, often used with React.</span></li></ul>"
            ],
            "Difference between Controller (of MVC) and ViewModel (of MVVM)": [
                "<p class=\"c1\"><span class=\"c8\">While both the Controller and ViewModel play roles in connecting the Model and View, the Controller often handles the overall application flow and user input, while the ViewModel is more focused on organising and presenting data in a way that is suitable for the user interface.</span></p>"
            ],
            "Agile Methodology": [],
            "How would you ensure that your team is adhering to established coding standards to keep consistency in the codebase?": [
                "<p class=\"c1\"><span class=\"c8\">To ensure that our team follows the established coding standards, we can follow these strategies:</span></p>",
                "<ul class=\"c10 lst-kix_rpo48hbqny2m-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Coding Guidelines Document:</span><span class=\"c7\">&nbsp;We can create a document for defining a set of coding standards and rules to adhere while writing code.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Keeping the custom defined code formatter file for multiple IDEs in the repo: </span><span class=\"c7\">We can keep the code formatter file in the repo itself (like settings.json in .vscode folder for vscode), which automatically formats the code on saving the file.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Using linter on pre-commit:</span><span class=\"c7\">&nbsp;We can use linter, which checks and highlights the variation from the defined coding standards before pushing it to git repo.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Setting Up linter in CI/CD pipeline:</span><span class=\"c7\">&nbsp;We can add linter in the CI/CD pipeline of the repo. So on each push, linter will analyse the code and highlight the coding format issues</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Defining Code Review Guidelines &amp; following them while doing Code Reviews: </span><span class=\"c7\">Similar to the Coding Guidelines Document, we can also create a Code Review Guidelines Document and follow them while doing code reviews. We can comment at the line, where we found any breach of defined coding standards, while doing the code review or our peer’s PR.</span></li></ul>",
                "<p class=\"c1 c4\"><span class=\"c7\"></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>"
            ]
        },
        "Browser & Web Optimisation": {
            "What does <!DOCTYPE html> mean?": [
                "<p class=\"c1\"><span class=\"c11\">&lt;!DOCTYPE html&gt; is a declaration at the beginning of an HTML document that defines the document type and version of HTML being used. By including &lt;!DOCTYPE html&gt;, we signal the browser to use the latest standard mode, which helps ensure consistent rendering and behaviour across different browsers.</span></p>"
            ],
            "HTML Semantic": [
                "<p class=\"c1\"><span class=\"c8\">Instead of using divs everywhere, using correct html element to convey the meaning of the element like header, nav, main, section article, aside, footer, figure, figcaption, details, summary, etc</span></p>",
                "<p class=\"c1\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 147.40px; height: 174.20px;\"><img alt=\"\" src=\"images/image9.png\" style=\"width: 147.40px; height: 174.20px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>"
            ],
            "HTML manifest attribute": [
                "<p class=\"c1\"><span class=\"c11\">The </span><span class=\"c11 c37\">manifest</span><span class=\"c8\">&nbsp;attribute in HTML is used to specify the location of a web application's cache manifest file. The cache manifest file is a text file that lists the resources (like HTML files, CSS, JavaScript, images, etc) that should be cached by the browser when the user visits the site. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">&lt;html manifest=\"example.appcache\"&gt;&lt;/html&gt;</span></p>"
            ],
            "HTML Quirks Mode": [
                "<p class=\"c1\"><span class=\"c8\">Quirks mode is a way for browsers to maintain backward compatibility with older web pages that were designed before the widespread adoption of standardised HTML and CSS specifications.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Omitting the &lt;!DOCTYPE html&gt; declaration or using an outdated/incorrect &lt;!DOCTYPE&gt; can trigger quirks mode.</span></p>"
            ],
            "Iframe options": [
                "<ol class=\"c10 lst-kix_pb83xyg09c4c-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">src</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Width, height</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Loading - lazy, </span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Sandbox - allow-same-origin allow-scripts</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Allow - geolocation; microphone; camera</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">scrolling</span></li></ol>"
            ],
            "Event Delegation": [
                "<p class=\"c13\"><span class=\"c8\">Event delegation is the process of not adding event listeners to all the child elements but on parent only and then handling events from there, using Event Bubbling.</span></p>"
            ],
            "Benefit of Event Delegation": [
                "<ol class=\"c10 lst-kix_k4n78zhv831i-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Improved Performance: </span><span class=\"c8\">This reduces the total number of event listeners, which can lead to better performance, especially on large pages or in applications with many interactive elements.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Dynamic Elements: </span><span class=\"c8\">Event delegation works well with dynamically generated or added elements. Since the event listener is attached to a parent element that already exists in the DOM.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Reduced Memory Consumption: </span><span class=\"c8\">Attaching event listeners to individual elements can lead to memory leaks in certain situations, especially if elements are frequently created and destroyed. Event delegation can help in this.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Simplifies Event Management: </span><span class=\"c8\">Event delegation can lead to cleaner and more organised code, as you can handle events for similar elements in a single place.</span></li></ol>"
            ],
            "Event Bubbling: (bubble burst in outwards direction)": [
                "<p class=\"c13\"><span class=\"c11\">When the element and its parent container both have an onClick event handler defined, then on clicking on the child element, the event handler function of the element and its parent both(i</span><span class=\"c11 c37\">n sequence from child to parent</span><span class=\"c8\">) gets called/invoked, this phenomenon is k/n as event bubbling.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">i.e. in case of event bubbling, the event movement begins from the target to the outermost element in the file.</span></p>",
                "<p class=\"c87\"><span class=\"c2 c37\">event.stopPropagation() </span><span class=\"c8\">is used in child’s event handlers to stop/prevent this phenomenon.</span></p>"
            ],
            "Event Capturing": [
                "<p class=\"c13\"><span class=\"c8\">Event capturing is the same as event bubbling, only here an event moves from the outermost element to the target.</span></p>"
            ],
            "Attaching Event Listener to Dynamically created DOM Element": [
                "<p class=\"c13\"><span class=\"c8\">e.g. suppose we created a select element dynamically and attached change event listener to it, then it will not work</span></p>",
                "<p class=\"c13\"><span class=\"c8\">const selectEle = document.createElement(\"select\");</span></p>",
                "<p class=\"c13\"><span class=\"c8\">selectEle.dataset.selectFieldId = “mine”</span></p>",
                "<p class=\"c13\"><span class=\"c8\">// selectEle.addEventListener(\"change\", handleProductChange); // does not works</span></p>",
                "<p class=\"c13\"><span class=\"c11\">element.addEventListener(\"event\", handleEvent); </span><span class=\"c30 c2\">does not work for dynamically created elements </span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c11\">we need to </span><span class=\"c2\">attach change event listener to the nearest static parent element </span><span class=\"c8\">of the select element</span></p>",
                "<p class=\"c13\"><span class=\"c8\">suppose #content is the static div in our html file, where we are rendering DOM elements dynamically using javaScript, then we can attach eventListener to #content and use event delegation to handle change in our select element</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">const contentEle = document.getElementById(\"content\");</span></p>",
                "<p class=\"c13\"><span class=\"c8\">contentEle.addEventListener('change', handleChange);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function handleChange(e) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; const selectFieldId = e?.target?.dataset?.selectFieldId;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; if (selectFieldId === “mine”) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// do the work</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>"
            ],
            "Feature Detection vs User-Agent Sniffing": [
                "<p class=\"c1\"><span class=\"c8\">Feature detection and user agent sniffing are two different approaches used in web development to achieve cross-browser compatibility. They serve as techniques to determine the capabilities of a user's browser.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Feature detection</span><span class=\"c8\">&nbsp;involves checking if a specific feature or capability is supported by the browser before attempting to use it.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">if (typeof localStorage !== 'undefined') {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">// localStorage is supported, use it</span></p>",
                "<p class=\"c1\"><span class=\"c8\">} else {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">// Provide an alternative or fallback behaviour</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c2\">User agent sniffing</span><span class=\"c8\">&nbsp;(or browser sniffing) involves examining the User-Agent header sent by the browser in the HTTP request to identify the type and version of the browser being used.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">if (navigator.userAgent.indexOf('MSIE') !== -1) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Internet Explorer specific code</span></p>",
                "<p class=\"c1\"><span class=\"c8\">} else {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Code for other browsers</span></p>",
                "<p class=\"c1\"><span class=\"c11\">}</span></p>"
            ],
            "Web APIs": [
                "<p class=\"c13\"><span class=\"c8\">Browser has superpowers that are lent to JS engine to execute some tasks, these are Web APIs such as:</span></p>",
                "<ol class=\"c10 lst-kix_y9l0gp7k25k9-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">console (console.log())</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">location (location.href = “”)</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">DOM API (document.getElementById(“”))</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">setTimeout</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">fetch</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">local storage (localStorage.getItem(\"”))</span></li></ol>"
            ],
            "Local storage/Session storage/IndexedDB": [
                "<p class=\"c13\"><span class=\"c8\">All of them exist for the same origin and stores data on the client side.</span></p>",
                "<a id=\"t.05483fc709e54c5306ea591dc7e64df14e126431\"></a>",
                "<a id=\"t.2\"></a>",
                "<table class=\"c45\"><tbody><tr class=\"c44\"><td class=\"c36\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">sessionStorage</span></p></td><td class=\"c79\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">localStorage</span></p></td><td class=\"c74\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c30 c2\">indexedDB</span></p></td></tr><tr class=\"c59\"><td class=\"c36\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Maximum limit is 5 MB</span></p></td><td class=\"c79\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Maximum limit is 5 MB</span></p></td><td class=\"c74\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Maximum limit is 50 MB</span></p></td></tr><tr class=\"c86\"><td class=\"c36\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Data in the sessionStorage exists till the browser is open. If we close the browser then our data will also erase automatically from the sessionStorage.</span></p></td><td class=\"c79\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">localStorage has no expiration time, Data in the localStorage persist till the user manually delete it</span></p></td><td class=\"c74\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">same as localStorage</span></p></td></tr><tr class=\"c66\"><td class=\"c36\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">sessionStorage.setItem(“hi”, “”hello”)</span></p></td><td class=\"c79\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">localStorage.setItem(“hi”, “”hello”)</span></p></td><td class=\"c74\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">window.indexedDB.open(\"MyTestDatabase\", 3);</span></p></td></tr></tbody></table>"
            ],
            "Cookies (Maximum limit is 4 KB)": [
                "<p class=\"c13\"><span class=\"c8\">Cookies are small files which are stored on a user’s computer for a domain. They are used to hold a modest amount of data specific to a particular client and website and can be accessed either by the web server or by the user’s browser.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Only the same website that saves information to a cookie can access it.</span></p>"
            ],
            "Shadow DOM": [
                "<p class=\"c13\"><span class=\"c8\">Shadow DOM is used for building reusable and encapsulated web components, helping to prevent style and script conflicts between different parts of a web page. The Shadow DOM provides a way to encapsulate the structure, style, and behaviour of a component within a scoped and isolated container.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Benefits of using the Shadow DOM:</span></p>",
                "<ul class=\"c10 lst-kix_jdpkzr27vbdv-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Encapsulation</span><span class=\"c8\">: Components with Shadow DOM are self-contained and encapsulated.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Reusability:</span><span class=\"c8\">&nbsp;Shadow DOM enables developers to create reusable components that can be easily dropped into different parts of a web page or shared across projects.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Isolation:</span><span class=\"c8\">&nbsp;Shadow DOM provides isolation for both styling and scripting, making it possible to create complex components without worrying about interference from external styles or scripts.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Maintenance:</span><span class=\"c11\">&nbsp;Changes made within a shadow tree are less likely to affect other parts of the application, improving code maintenance and reducing unintended side effects.</span></li></ul>"
            ],
            "PWA (Progressive Web App)": [
                "<p class=\"c1\"><span class=\"c8\">Progressive Web Apps (PWAs) are a type of web application that delivers a native app-like experience to users while being built with web technologies (HTML, CSS, and JavaScript). They offer a range of benefits that combine the best of web and native app experiences.</span></p>",
                "<ol class=\"c10 lst-kix_t7upf7ygvy2e-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">App like experience</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Offline functionality</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Faster loading (because of cached resources)</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Push notification</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Background task</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Responsive</span></li></ol>"
            ],
            "Service Worker": [
                "<p class=\"c13\"><span class=\"c11\">A </span><span class=\"c2\">Service Worker</span><span class=\"c8\">&nbsp;is a JavaScript script that runs in the background of a web browser, independent of the web page, and enables advanced features like task execution in background, caching/offline support, push notifications, and background synchronisation.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">It is a key component of Progressive Web Apps (PWAs) and can significantly enhance the performance, reliability, and user experience of web applications, especially in offline or low-network conditions.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">The service worker life cycle</span></p>",
                "<ul class=\"c10 lst-kix_rpo48hbqny2m-0\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Registration</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Installation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Activation</span></li></ul>"
            ],
            "Difference b/w Service Worker and Web Worker": [
                "<p class=\"c1\"><span class=\"c8\">Service Worker is used for tasks related to network request, caching, offline functionality, while Web Worker is used to parallelize tasks like heavy computation or data processing independently from the main thread.</span></p>"
            ],
            "Difference b/w http cache and service worker cache": [
                "<p class=\"c1\"><span class=\"c8\">HTTP cache is browser-level caching controlled by HTTP headers, while Service Worker cache is a programmable JavaScript cache offering more control, offline capabilities, and persistence for web applications.</span></p>"
            ],
            "Different types of cache": [
                "<p class=\"c1\"><span class=\"c2\">Browser Cache</span><span class=\"c8\">: browser-level cache done using http headers, Stores static files locally, reducing the need to re-download them on subsequent visits.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Content Delivery Network (CDN) Cache:</span><span class=\"c8\">&nbsp;Distributes static content globally to reduce latency and improve load times.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Database Cache: </span><span class=\"c8\">Stores frequently accessed database query results in memory for faster retrieval.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Object Cache: </span><span class=\"c8\">Caches results of expensive function calls or calculations for reuse.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Memory Cache: </span><span class=\"c8\">Stores data in the server's memory for quick access and improved performance.</span></p>"
            ],
            "Process of Browser Caching": [
                "<ul class=\"c10 lst-kix_krzj95ya19hx-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">The browser loads the resource for the first time, the server returns 200, and the browser downloads the resource file from the server, and caches the resource file and response header for comparison and to use in the next load.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">The next time when the client requests to load the resource, the time difference between the current time and the last return of 200 responses is first compared. If it does not exceed the </span><span class=\"c11 c37\">max-age</span><span class=\"c11\">&nbsp;set by cache-control, it will hit the cache and load resources locally. If the browser does not support HTTP 1.1, it uses the </span><span class=\"c11 c37\">expires</span><span class=\"c8\">&nbsp;header to determine whether it has expired.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">If the resource has expired, it means that the cached resource may no longer be valid, and a request with If-None-Match and If-Modified-Since section is sent to the server.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">After the server receives the request, it first validates whether the requested resource has been modified based on the </span><span class=\"c11 c37\">Etag</span><span class=\"c8\">&nbsp;value. If the Etag value is the same, there is no modification; 304 is returned; if E-tag value is inconsistent which means there is a change, the new resource will be directly returned with a new Etag and status code 200. </span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">If the request received by the server does not have an Etag value, it will compare </span><span class=\"c11 c37\">If-Modified-Since</span><span class=\"c8\">&nbsp;with the last modification time of the requested resource. If it has not changed, server will return 304; if they are inconsistent, server will return the response header with new last-modified, resource and return status code 200.</span></li></ul>"
            ],
            "Communication Across Browser Tabs": [
                "<p class=\"c13\"><span class=\"c11\">ref:</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://dev.to/weifengnusceg/browser-concepts-the-one-and-only-guide-you-need-3bni&amp;sa=D&amp;source=editors&amp;ust=1707022712843141&amp;usg=AOvVaw1Ap7-i6uIs_TVH42H7rZt0\">&nbsp;</a></span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://dev.to/weifengnusceg/browser-concepts-the-one-and-only-guide-you-need-3bni&amp;sa=D&amp;source=editors&amp;ust=1707022712843236&amp;usg=AOvVaw1Stfq9g_NxN_-gHwhK0xre\">https://dev.to/weifengnusceg/browser-concepts-the-one-and-only-guide-you-need-3bni</a></span></p>",
                "<ul class=\"c10 lst-kix_vanmwiylts25-0 start\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Window.postMessage():</span></li></ul>",
                "<ul class=\"c10 lst-kix_vanmwiylts25-1 start\"><li class=\"c18 li-bullet-0\"><span class=\"c11\">The </span><span class=\"c2\">postMessage()</span><span class=\"c8\">&nbsp;method allows you to send messages between different windows or tabs that share the same origin (same domain).</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">One window can send a message to another window/tab by specifying the target window's reference and the data to be sent.<br><br> &nbsp; &nbsp;targetWindow.postMessage(“your message”, targetOrigin) &nbsp; <br> &nbsp; &nbsp; window.addEventListener(\"message\", (event) =&gt; {</span></li></ul>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (event.origin !== \"http://localhost:8080\") return;</span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Do something</span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; }, false);</span></p>",
                "<ul class=\"c10 lst-kix_2galkdjrg0r4-0 start\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">LocalStorage and SessionStorage:</span></li></ul>",
                "<ul class=\"c10 lst-kix_2galkdjrg0r4-1 start\"><li class=\"c18 li-bullet-0\"><span class=\"c11\">Both </span><span class=\"c2\">localStorage</span><span class=\"c11\">&nbsp;and </span><span class=\"c2\">sessionStorage</span><span class=\"c8\">&nbsp;are storage mechanisms that allow you to store data on the client side.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">They can be used to share data between tabs from the same origin.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">However, they don't provide a built-in way to listen for changes across tabs, so you might need to implement a mechanism to detect changes manually.</span></li></ul>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp;window.localStorage.setItem(\"loggedIn\", \"true\");</span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp;window.addEventListener('storage', (event) =&gt; {</span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (event.storageArea != localStorage) return;</span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (event.key === 'loggedIn') {</span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Do something with event.newValue</span></p>",
                "<p class=\"c13 c20\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>",
                "<p class=\"c13 c28 c22\"><span class=\"c8\">&nbsp;});</span></p>",
                "<ul class=\"c10 lst-kix_pql4ggbcsome-0 start\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Broadcast Channel API:</span></li></ul>",
                "<ul class=\"c10 lst-kix_pql4ggbcsome-1 start\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">The Broadcast Channel API allows you to create named channels through which you can send messages to other tabs/windows that share the same origin.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Tabs/windows listening to the same channel will receive messages.</span></li></ul>",
                "<p class=\"c13 c28\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const channel = new BroadcastChannel('app-data');</span></p>",
                "<p class=\"c13 c28\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;channel.postMessage(data);</span></p>",
                "<p class=\"c13 c28\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;channel.addEventListener ('message', (event) =&gt; {</span></p>",
                "<p class=\"c13 c28\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(event.data);</span></p>",
                "<p class=\"c13 c28\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</span></p>"
            ],
            "DOM": [
                "<p class=\"c13\"><span class=\"c8\">The Document Object Model (DOM) is a hierarchical tree-like representation of the structure and content of a web page.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">It allows us to interact with and manipulate the HTML and XML content of a web page dynamically using JS.</span></p>"
            ],
            "How a HTML Page Renders": [
                "<ol class=\"c10 lst-kix_hyrm017en8xi-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Start to </span><span class=\"c2\">parse</span><span class=\"c11\">&nbsp;the </span><span class=\"c2\">HTML</span><span class=\"c11\">&nbsp;to build </span><span class=\"c30 c2\">DOM</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Fetch the </span><span class=\"c30 c2\">external resources</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Parse</span><span class=\"c11\">&nbsp;the </span><span class=\"c2\">CSS</span><span class=\"c11\">&nbsp;and build the </span><span class=\"c30 c2\">CSSOM</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Execute the </span><span class=\"c30 c2\">JavaScript</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Merge </span><span class=\"c11\">DOM</span><span class=\"c11\">&nbsp;and </span><span class=\"c11\">CSSOM</span><span class=\"c11\">&nbsp;to construct the </span><span class=\"c30 c2\">Render Tree</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Calculate the </span><span class=\"c30 c2\">layout and paint</span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">When the browser encounters an </span><span class=\"c2\">external resource (like an image or video) </span><span class=\"c11\">while parsing HTML, it typically starts fetching that resource in </span><span class=\"c2\">parallel with continuing to parse</span><span class=\"c8\">&nbsp;and render the HTML. This is k/n as asynchronous loading.</span></p>",
                "<ol class=\"c10 lst-kix_lxagvslr12ej-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">JS: Block Parsing unless defer or async</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">CSS: Block Rendering</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Other resources: No blocking</span></li></ol>",
                "<p class=\"c1\"><span class=\"c8\">In a web page, when multiple synchronous scripts are encountered, they are typically executed in the order in which they appear in the HTML</span></p>",
                "<p class=\"c13\"><span class=\"c11\">ref:</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://starkie.dev/blog/how-a-browser-renders-a-web-page&amp;sa=D&amp;source=editors&amp;ust=1707022712845607&amp;usg=AOvVaw0sJbeQvOo7XvAuiEWwZJlH\">&nbsp;</a></span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://starkie.dev/blog/how-a-browser-renders-a-web-page&amp;sa=D&amp;source=editors&amp;ust=1707022712845691&amp;usg=AOvVaw0XLBgJ2g4AetjvXjh5gN99\">https://starkie.dev/blog/how-a-browser-renders-a-web-page</a></span></p>"
            ],
            "Async vs Defer": [
                "<p class=\"c13\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 401.70px; height: 289.09px;\"><img alt=\"\" src=\"images/image5.png\" style=\"width: 401.70px; height: 289.09px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>"
            ],
            "Critical Rendering Path (CRP)": [
                "<p class=\"c13\"><span class=\"c8\">The Critical Rendering Path is the sequence of steps the browser goes through, to convert the HTML, CSS, and JavaScript into pixels on the screen.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Optimising the critical render path improves render performance.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">The document object model(DOM) is created as the HTML is parsed. The HTML may request JavaScript, which may, in turn, alter the DOM. The HTML includes or makes requests for styles, which in turn builds the CSS object model (CSSOM). The browser engine combines the two to create the Render Tree. Layout determines the size and location of everything on the page. Once layout is determined, pixels are painted to the screen.</span></p>"
            ],
            "Optimising for CRP": [
                "<p class=\"c13\"><span class=\"c8\">Improve page load speed by prioritising which resources get loaded, controlling the order in which they are loaded, and reducing the file sizes of those resources. Performance tips include:</span></p>",
                "<ol class=\"c10 lst-kix_e4zhwuz0arki-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">minimising the number of critical resources by deferring non-critical ones' download, marking them as async, or eliminating them altogether</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">optimising the file size of each request</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">optimising the order in which critical resources are loaded by prioritising the downloading of critical assets, thereby shortening the critical path length.</span></li></ol>"
            ],
            "Critical Section of a page": [
                "<p class=\"c92\"><span class=\"c8\">The critical section of a web page refers to the part of the page that is immediately visible to the user upon the initial page load, without requiring additional scrolling or interaction.</span></p>",
                "<p class=\"c92\"><span class=\"c8\">Way to optimise critical section</span></p>",
                "<ol class=\"c10 lst-kix_fp17ge3od417-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Displaying perception: loader, error, etc</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Optimise CRP</span></li></ol>",
                "<ol class=\"c10 lst-kix_fp17ge3od417-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Identify &amp; Prioritise critical resources</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Minimise number of critical resources</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Decrease/optimise size of resources</span></li></ol>",
                "<ol class=\"c10 lst-kix_fp17ge3od417-0\" start=\"3\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Optimise/compress resources</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Decrease network calls</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Load non critical/important resources later</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">SSR</span></li></ol>"
            ],
            "Code Obfuscation": [
                "<p class=\"c1\"><span class=\"c8\">Code obfuscation is a technique used to make source code more difficult to understand or reverse engineer. It involves transforming the code in a way that it remains functional but becomes harder for humans to read and comprehend. This is often done to protect intellectual property, prevent unauthorised modifications, or enhance security.</span></p>",
                "<p class=\"c1\"><span class=\"c11\">Some common obfuscation techniques: variable &amp; function renaming, string encryption, code jumbling, dummy code insertion (inserting meaningless or redundant code), code splitting, minification, etc.</span></p>"
            ],
            "Tree Shaking": [
                "<p class=\"c13\"><span class=\"c11\">ref:</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://benestudio.co/building-a-tree-shaking-friendly-javascript-package/&amp;sa=D&amp;source=editors&amp;ust=1707022712847198&amp;usg=AOvVaw3lKkZ_kLiRajHD6vv-kWtM\">&nbsp;</a></span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://benestudio.co/building-a-tree-shaking-friendly-javascript-package/&amp;sa=D&amp;source=editors&amp;ust=1707022712847283&amp;usg=AOvVaw0FA-QBWXWjQ2aOsD_QHJ8M\">https://benestudio.co/building-a-tree-shaking-friendly-javascript-package/</a></span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Glossary/Tree_shaking&amp;sa=D&amp;source=editors&amp;ust=1707022712847394&amp;usg=AOvVaw3DaMCpXBZWo98vJi4mq0Dp\">Tree shaking</a></span><span class=\"c11\">&nbsp;is a dead-code (unused code) elimination process. It relies on the static structure of </span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/&amp;sa=D&amp;source=editors&amp;ust=1707022712847488&amp;usg=AOvVaw2LNLSLGI7tQJD-7CAg8bOh\">ES modules</a></span><span class=\"c11\">&nbsp;(import and export). So CommonJS modules (require) can’t be shaken off directly because of their dynamic nature. So the bundlers we are using, like </span><span class=\"c11 c50\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://webpack.js.org/guides/tree-shaking/&amp;sa=D&amp;source=editors&amp;ust=1707022712847571&amp;usg=AOvVaw0d4ukvHvBLpKh5efm5merR\">Webpack</a></span><span class=\"c11\">&nbsp;and </span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://rollupjs.org/guide/en/%23tree-shaking&amp;sa=D&amp;source=editors&amp;ust=1707022712847641&amp;usg=AOvVaw2wbXyWcVhh2WTXVk-w1ObZ\">Rollup</a></span><span class=\"c8\">, automatically tree shake our code for us.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">To achieve this, we need to mark your library as </span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://webpack.js.org/guides/tree-shaking/%23mark-the-file-as-side-effect-free&amp;sa=D&amp;source=editors&amp;ust=1707022712847764&amp;usg=AOvVaw3S-pB6k98Uu3mO251M5LIG\">side-effect-free</a></span><span class=\"c8\">&nbsp;in our library’s “package.json”. Add:</span></p>",
                "<p class=\"c13\"><span class=\"c11 c37\">\"</span><span class=\"c53 c2 c37\">sideEffects\": false</span></p>",
                "<p class=\"c13 c4\"><span class=\"c53 c11 c37 c81\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">To build a tree shaking friendly package we need to</span></p>",
                "<ul class=\"c10 lst-kix_uao9o37k91jq-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Use ES modules. Make sure the final output of your package is using ES modules, not CommonJS or AMD.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Config side effects properly in package.json file to help bundlers. i.e. \"sideEffects\": false</span></li></ul>"
            ],
            "window.onload vs DOMContentLoad": [
                "<ol class=\"c10 lst-kix_ne3l79fz7p2q-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c58 c77\">window.onload</span></li></ol>",
                "<ol class=\"c10 lst-kix_ne3l79fz7p2q-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c30 c31\">It get triggered when the complete web page is loaded</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It is used when we need to execute JS code that relies on the complete availability of the web page</span></li></ol>",
                "<ol class=\"c10 lst-kix_ne3l79fz7p2q-0\" start=\"2\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">DOMContentLoad</span></li></ol>",
                "<ol class=\"c10 lst-kix_ne3l79fz7p2q-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It gets triggered when the browser is done parsing and loading the html document into DOM.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It is often used when we want to execute JavaScript code as soon as the DOM hierarchy is ready</span></li></ol>"
            ],
            "Hydration": [
                "<p class=\"c13\"><span class=\"c8\">Hydration in JavaScript, is the process of attaching event handlers to the DOM elements.</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Hydration</span><span class=\"c11\">&nbsp;or </span><span class=\"c2\">Rehydration</span><span class=\"c11\">&nbsp;is a technique in which client-side</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://en.wikipedia.org/wiki/JavaScript&amp;sa=D&amp;source=editors&amp;ust=1707022712848644&amp;usg=AOvVaw3udA4QjbhPgfgQ3SIkg6gZ\">&nbsp;JavaScript</a></span><span class=\"c11\">&nbsp;converts a static</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://en.wikipedia.org/wiki/HTML&amp;sa=D&amp;source=editors&amp;ust=1707022712848714&amp;usg=AOvVaw0cadlq7ug8jpCLJvfS5NoF\">&nbsp;HTML</a></span><span class=\"c11\">&nbsp;web page (delivered either through static hosting or</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://en.wikipedia.org/wiki/Server-side_rendering&amp;sa=D&amp;source=editors&amp;ust=1707022712848807&amp;usg=AOvVaw0msggK3jZ1OQqq4hMkPRgW\">&nbsp;server-side rendering</a></span><span class=\"c11\">), into a</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://en.wikipedia.org/wiki/Dynamic_web_page&amp;sa=D&amp;source=editors&amp;ust=1707022712848877&amp;usg=AOvVaw2q4cVngNmyOzGCJUME4My1\">&nbsp;dynamic web page</a></span><span class=\"c8\">&nbsp;by attaching event handlers to the HTML elements, sets up interactivity and make the page fully functional. </span></p>",
                "<p class=\"c13\"><span class=\"c8\">This helps improve the initial loading performance and user experience of web applications.</span></p>"
            ],
            "Selective Hydration": [
                "<p class=\"c1\"><span class=\"c8\">Selective/Partial hydration, is a concept in web development that refers to the practice of dynamically loading and rendering specific parts of a web page based on user interaction or other conditions.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">The goal of selective hydration is to optimise the initial page load by sending only the essential HTML, CSS, and JavaScript needed to render the initial view. Then, as the user interacts with the page, additional content and functionality are loaded and rendered dynamically.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Selective hydration can be achieved using techniques like:</span></p>",
                "<ol class=\"c10 lst-kix_bb4fw6xhv0zc-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Conditional Rendering</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Client-side Routing</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Lazy loading component</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Using Suspense in react</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Data-fetching on demand</span></li></ol>"
            ],
            "Progressive Rendering": [
                "<p class=\"c1\"><span class=\"c8\">Progressive rendering is a technique used in web dev to improve the perceived performance and user experience by displaying content to users ASAP, even if the entire page or all assets haven't fully loaded. Instead of waiting for the entire webpage to load before rendering anything, progressive rendering prioritises and displays the content incrementally.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here are some common strategies associated with progressive rendering:</span></p>",
                "<ul class=\"c10 lst-kix_te59tcmdwqso-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Prioritising Critical Rendering Path: </span><span class=\"c8\">Identify and prioritise the most important content, such as text and images above the fold, to be loaded and displayed first. This ensures that users see meaningful content quickly.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Lazy Loading: </span><span class=\"c8\">Defer the loading of non-critical resources (such as images below the fold or scripts) until they are needed. Lazy loading helps to prioritise the loading of essential content first.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Streaming Content: </span><span class=\"c8\">Send the content in chunks or streams rather than waiting for the entire page to be fully processed. This allows the browser to start rendering and displaying content as soon as it's received.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Asynchronous Loading: </span><span class=\"c8\">Load resources asynchronously to prevent one slow-loading resource from blocking the rendering of other page elements. For example, scripts can be loaded asynchronously so that they don't block the rendering of the rest of the page.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Placeholder Elements: </span><span class=\"c8\">Use placeholder elements or low-resolution images initially and replace them with higher-resolution or fully loaded content as it becomes available. This gives users a sense of progress and prevents a blank or incomplete page from being displayed.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Optimised Delivery: </span><span class=\"c11\">Optimise the delivery of assets, such as compressing images and minifying CSS and JavaScript, to reduce download times.</span></li></ul>"
            ],
            "Web Vitals": [
                "<p class=\"c1\"><span class=\"c8\">Web Vitals are a set of metrics used to measure and improve performance, speed and interactivity of a web page.</span></p>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">First Contentful Paint (FCP):</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">First Contentful Paint (FCP) measures the time taken to render the first piece of content of a web page</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It indicates how quickly users perceive that the page is loading and becoming usable.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">To Reduce FCP:</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">We need to decrease resources size (images, css, js, etc) or minimise render blocking resources (lazy loading for images, async loading for non-critical script)</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">Prioritise Critical Resources: Use the &lt;link rel=\"preload\"&gt; and &lt;link rel=\"prefetch\"&gt; tags to instruct the browser to fetch critical resources early and similarly for critical JS.</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">Minimise Network Requests &amp; Server Response Time: fast CDN &amp; caching can be used</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1\" start=\"4\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">A good FCP score is typically under 1 second.</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-0\" start=\"2\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Largest Contentful Paint (LCP): </span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Largest Contentful Paint, measures the time taken to render the largest visible element (such as an image or text block) of a web page.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">LCP is an important metric for understanding when the main content of a page becomes visible to users.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">A good LCP score is typically under 2.5 seconds.</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-0\" start=\"3\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Total Blocking Time (TBT):</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Total Blocking Time (TBT) measures the amount of time during which the main thread of a web page is blocked and unable to respond to user input. </span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">TBT is concerned with how quickly a page can start responding to user input (first interaction)</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">To reduce TBT, we can optimise JS execution and minimise the impact of long tasks using web-worker</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">A good TBT score is typically under 300 milliseconds.</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-0\" start=\"4\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Time to Interactive (TTI):</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Time to Interactive (TTI) measures the time it takes for a web page to become fully interactive for users.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">TTI is concerned with when the page becomes fully interactive.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">To improve TTI, we need to optimise critical resources (load critical js, responsible for interactivity, first).</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">A good TTI score is typically under 5 seconds.</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-0\" start=\"5\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Cumulative Layout Shift (CLS):</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c11\">CLS</span><span class=\"c8\">, measures the visual stability of a page by tracking unexpected layout shifts in the loading process.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">CLS helps ensure that page content doesn't unexpectedly shift while users are interacting with it.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">To reduce CLS:</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">Give width, height attribute to image/video elements</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">Ensure new content/element does not shift any existing content/element</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">Allocate space for content which will be loaded asynchronous</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1\" start=\"4\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">A good CLS score is typically under 0.1.</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-0\" start=\"6\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Speed Index (SI):</span></li></ol>",
                "<ol class=\"c10 lst-kix_9p9rgms4tx95-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Time taken to load entire web-page</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c11\">It</span><span class=\"c8\">&nbsp;measures how quickly the content of a web page is visually displayed during the entire loading process.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It takes into account the progression of content loading over time and provides a score based on the visual completeness of the page at different points during loading.</span></li></ol>"
            ],
            "Waterfall": [
                "<p class=\"c1\"><span class=\"c8\">Waterfall refers to a graphical representation of the various resources (like HTML, CSS, JavaScript, images, etc.) that a web page loads, and the order in which they are loaded. It's a tool used for visualising the loading process of a web page.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">The waterfall chart displays a timeline on the x-axis and the different resources on the y-axis. Each resource is represented as a horizontal bar, with the position on the y-axis indicating when it starts to load and the length of the bar representing how long it takes to load. The resources are loaded in the order they are requested by the browser.</span></p>"
            ],
            "Does font affect rendering and layout phases? If yes, how to minimise the effect?": [
                "<ol class=\"c10 lst-kix_aoizbortasa8-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Rendering Phase:</span><span class=\"c8\">&nbsp;The time it takes to download a font can impact the rendering phase. If a font is large or takes a long time to download, it may delay the rendering of the associated text content.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Layout Phase: </span><span class=\"c8\">The browser needs to measure the size of text elements for layout calculations. The size of the text is influenced by the font metrics, including the font size, line height, and character spacing.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">For minimising its impact</span></li></ol>",
                "<ol class=\"c10 lst-kix_aoizbortasa8-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Use optimised/compressed font file type like WOFF2</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Lazy loading fonts: For non-critical fonts, load them asynchronously after the critical section is loaded</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Use fallback fonts</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Preloading: Preload fonts using the &lt;link rel=\"preload\"&gt; tag to initiate the font download earlier in the page loading process.</span></li></ol>"
            ],
            "How to achieve max frame rate (60fps) with JS animations": [
                "<ol class=\"c10 lst-kix_1gu90e6m2kfl-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Use RequestAnimationFrame:</span><span class=\"c8\">&nbsp;Use the requestAnimationFrame function for scheduling your animation loop. It is optimised for animations and synchronises with the browser's repaint cycle.<br>function animate() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Update animation logic here <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requestAnimationFrame(animate); <br>}<br>animate(); // Start the animation loop</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Minimise Paint Area:</span><span class=\"c8\">Only update the parts of the DOM that are necessary for the animation.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Use GPU Acceleration: </span><span class=\"c8\">Transformations like translations, rotations, and scaling are hardware-accelerated on the GPU. Utilise CSS properties like transform and opacity for animations.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Avoid Layout Thrashing: </span><span class=\"c8\">Minimise operations that trigger layout recalculations (e.g., changing element dimensions). Batch such operations together to reduce unnecessary reflows.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Optimise DOM Manipulations: </span><span class=\"c8\">Minimise DOM updates by using document fragments or manipulating elements offline before adding them to the live DOM.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Use Web Workers: </span><span class=\"c8\">Web Workers allow you to perform computations in a separate thread, reducing the load on the main thread and improving animation performance.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Optimise Image and Video Assets: </span><span class=\"c8\">Compress images and videos to reduce file size. Consider using modern image formats like WebP, and serve appropriately sized assets based on device resolution.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Limit the Number of Active Elements:</span><span class=\"c8\">&nbsp;Reduce the number of animated elements on the screen at any given time to minimise the amount of work the browser needs to do.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Profile and Optimise Code: </span><span class=\"c8\">Use browser developer tools to profile your code and identify performance bottlenecks. Optimise critical sections for better performance.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Use Object Pooling:</span><span class=\"c8\">&nbsp;Reuse objects instead of creating new ones in each animation frame to reduce garbage collection overhead.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Avoid Memory Leaks: </span><span class=\"c11\">Ensure that event listeners and other resources are properly cleaned up to prevent memory leaks, which can degrade performance over time.</span></li></ol>"
            ],
            "Server-Side Rendering": [
                "<p class=\"c13\"><span class=\"c8\">In (SSR), a web page is rendered on the server (where the wep app is deployed) and then sends the fully rendered HTML page to the client (browser). </span></p>",
                "<p class=\"c13\"><span class=\"c8\">Advantages of Server-Side Rendering:</span></p>",
                "<ul class=\"c10 lst-kix_s9gs4cayh6nx-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">SEO Benefits: </span><span class=\"c8\">Search engines have an easier time crawling and indexing content in HTML files. With SSR, search engines can quickly access the fully-rendered content, which can improve search engine rankings.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Improved Initial Page Load Time</span><span class=\"c8\">: Since the server sends a fully-rendered page to the client, the user can see the content sooner. This can lead to better perceived performance, especially on slower networks.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Better Social Sharing</span><span class=\"c8\">: When you share a link on social media platforms, the platform often fetches a preview of the page. With SSR, the platform can easily access the fully-rendered HTML, ensuring accurate previews.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Accessibility and Performance on Low-Powered Devices</span><span class=\"c8\">: Devices with limited processing power, like older smartphones or IoT devices, may struggle with heavy client-side rendering. SSR can provide a better user experience on such devices.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Avoidance of Flash of Unstyled Content (FOUC)</span><span class=\"c8\">: With client-side rendering, there's a brief moment where the page might appear unstyled until the JavaScript loads and applies the styles. SSR helps avoid this FOUC.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Easier Caching and CDN Integration</span><span class=\"c8\">: Fully-rendered HTML can be easily cached, which improves performance and reduces the load on servers. CDNs can also cache the HTML content.</span></li></ul>"
            ],
            "Client-Side Rendering": [
                "<p class=\"c13\"><span class=\"c8\">In CSR, the server sends a basic HTML file along with a JavaScript bundle. The JavaScript code is responsible for generating the content and rendering it in the browser (client).</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Advantages of Client-Side Rendering:</span></p>",
                "<ul class=\"c10 lst-kix_7a5k4k13sa4l-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Fast Initial Load: </span><span class=\"c8\">CSR can provide a fast initial load time, especially for smaller applications. Only essential HTML, CSS, and JavaScript are sent from the server.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Smooth User Experience</span><span class=\"c8\">: Once the initial load is complete, interactions are fast and smooth. Changes in the UI can happen instantly without requiring full page reloads because of SPA.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Rich Interactivity</span><span class=\"c8\">: CSR allows for highly interactive web applications with dynamic content updates based on user actions.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Better for Web Applications</span><span class=\"c8\">: CSR is well-suited for web applications where a lot of the content and interactivity is generated dynamically based on user input or API calls.</span></li></ul>",
                "<p class=\"c13\"><span class=\"c8\">In practice, many applications use a combination of both Server-Side Rendering and Client-Side Rendering (CSR) for the best of both worlds. This is sometimes referred to as \"Hybrid Rendering\" or \"Universal Rendering\". </span></p>",
                "<p class=\"c13\"><span class=\"c8\">SSR is often used for the initial page load, while client-side rendering takes over for subsequent interactions, providing a more interactive experience.</span></p>"
            ],
            "How will you select between SSR and CSR for your application? What parameters will you consider?": [
                "<p class=\"c1\"><span class=\"c8\">If I am working on a marketing page, or static web pages like a blog type of website where we need good SEO, social sharing, fast initial page load, and support on old devices, I will use SSR.<br>If I am working on any web app which is very dynamic and interactive, then I will consider CSR.</span></p>"
            ],
            "Why is CSR good for high dynamic and interactive web apps?": [
                "<ol class=\"c10 lst-kix_eu5zhw6huhrv-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">SPA (Single Page Applications):</span><span class=\"c8\">&nbsp;CSR can be used to build SPAs, where everything runs on a single page (index.html). This eliminates the need for complete page reloads, providing a smooth and fluid user experience.</span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>"
            ]
        },
        "Next.js": {
            "getStaticPaths": [
                "<p class=\"c1\"><span class=\"c11\">getStaticPaths is a method in Next.js that allows you to specify which paths should be pre-rendered at build time when using </span><span class=\"c2\">Static Site Generation (SSG).</span></p>"
            ],
            "getStaticProps, getServerSideProps, getInitialProps": [
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">getStaticProps</span><span class=\"c8\">:</span></li></ol>",
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Usage</span><span class=\"c8\">: Used in a page component to fetch data at build time.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Execution</span><span class=\"c8\">: Runs at build time, not in the client-side JavaScript bundle.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2 c37\">revalidate</span><span class=\"c2\">&nbsp;in getStaticProps</span><span class=\"c8\">: revalidate in getStaticProps, specifies how often Next.js should re-generate the static page.</span></li></ol>",
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-0\" start=\"2\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">getServerSideProps</span><span class=\"c8\">:</span></li></ol>",
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Usage</span><span class=\"c8\">: Used in a page component to fetch data on each request, on the server-side.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Execution</span><span class=\"c11\">: Runs on the server every time a request is made to the page.<br>export async function getServerSideProps / geStaticProps() { <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const response = await fetch('https://api.example.com/data'); // Fetch data from an API or database <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const data = await response.json(); <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return { <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;props: { data, }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br>}<br>The </span><span class=\"c11 c37\">getStaticProps &amp; getServerSideProps </span><span class=\"c11\">function must return an object with a </span><span class=\"c2 c37\">props</span><span class=\"c8\">&nbsp;key. The value of props will be passed as props to the page component.</span></li></ol>",
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-0\" start=\"3\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">getInitialProps:</span></li></ol>",
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Usage</span><span class=\"c8\">: Used in both page components and regular React components.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Execution</span><span class=\"c8\">:</span></li></ol>",
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-2 start\" start=\"1\"><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">In page components, it can run on both the server and the client. On the server, it runs during the initial request. On the client, it runs when navigating to the page using the client-side router.</span></li><li class=\"c1 c14 li-bullet-0\"><span class=\"c8\">In regular React components, it only runs on the client.</span></li></ol>",
                "<ol class=\"c10 lst-kix_xmwzhzkkqpce-1\" start=\"3\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">Return Value</span><span class=\"c8\">: Should return an object with the data that will be merged into the component's props.<br>MyComponent.getInitialProps = async () =&gt; { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const response = await fetch('https://api.example.com/data'); // Fetch data from an API<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const data = await response.json(); <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return { data }; <br>};</span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>"
            ]
        },
        "React.js": {
            "React": [
                "<p class=\"c13\"><span class=\"c8\">React.js is an open-source JavaScript library used for building user interfaces or UI components for web applications. React is particularly popular for creating interactive and dynamic user interfaces because it allows developers to efficiently update and render components as data changes. React is often described as a declarative library for building user interfaces. In a declarative approach, you specify what you want to achieve, and the library (React in this case) takes care of updating the DOM to match the desired state. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">Key features and concepts of React include:</span></p>",
                "<ol class=\"c10 lst-kix_8ljp0n2yek0a-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Component-Based Architecture:</span><span class=\"c8\">&nbsp;React applications are built using components, which are self-contained, reusable modules that encapsulate a specific piece of UI</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Reusable Components</span><span class=\"c8\">: Components in React are designed to be reusable, which promotes code modularity and maintainability.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Component Lifecycle</span><span class=\"c8\">: React components go through various lifecycle stages (mounting, updating, un-mounting), and one can hook into these stages to perform actions at specific points in a component's life.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Virtual DOM</span><span class=\"c8\">: React maintains a lightweight representation of the DOM, known as the virtual DOM. When data changes, React compares the new virtual DOM with the previous one to identify the minimal set of updates needed to reflect the changes in the actual DOM. This makes React very efficient in managing UI updates.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">JSX (JavaScript XML)</span><span class=\"c8\">: React uses JSX, a syntax extension for JavaScript, which allows developers to write HTML-like code directly within their JavaScript files. JSX makes it easier to visualise and build component hierarchies.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Unidirectional Data Flow</span><span class=\"c8\">: React follows a unidirectional data flow, which means that data in an application flows in a single direction. This makes it easier to track changes and debug code.</span></li></ol>"
            ],
            "Challenges with React": [
                "<ol class=\"c10 lst-kix_yuh024tl5ham-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">SEO</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Props drilling: passing props to deep down the component</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">State Management</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Unnecessary Re-renders: can be prevented using React.memo</span></li></ol>"
            ],
            "Virtual DOM": [
                "<p class=\"c13\"><span class=\"c8\">The Virtual DOM is a lightweight copy of the actual DOM. It's a JavaScript object that mirrors the structure of the actual DOM. It is a key concept in React that helps to efficiently update the actual DOM, making React highly performant.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here's a breakdown of how it works:</span></p>",
                "<ul class=\"c10 lst-kix_6bq63iqj1o6p-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Actual DOM:</span><span class=\"c8\">&nbsp;The DOM (Document Object Model) represents the structure of a web page. It's a tree-like structure where each element (e.g., div, p, span) is a node.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Virtual DOM</span><span class=\"c11\">: </span><span class=\"c8\">The Virtual DOM is a lightweight copy of the actual DOM. It's a JavaScript object that mirrors the structure of the actual DOM.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Reconciliation</span><span class=\"c8\">: When a component's state/props, context or parent component changes in React, a new virtual DOM tree is created to represent the updated state.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Diffing</span><span class=\"c8\">: React performs a process called \"diffing\" to compare the new virtual DOM tree with the previous one. It identifies the differences (or \"diffs\") between the two trees.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Minimal Updates</span><span class=\"c8\">: It identifies the minimal set of DOM operations (insertions, deletions, or updates) to update the actual DOM based on the diffs. It aims to minimise the number of actual DOM operations needed.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Batched Updates</span><span class=\"c8\">: React doesn't immediately update the actual DOM after each change. Instead, it batches these changes together.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Updating the Actual DOM</span><span class=\"c8\">: Finally, React applies the identified updates to the actual DOM. This is the step where the changes are reflected in the browser.</span></li></ul>"
            ],
            "Advantages of the Virtual DOM": [
                "<ul class=\"c10 lst-kix_yrpdsfljiveq-0 start\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Efficiency</span><span class=\"c8\">: By comparing virtual DOM trees rather than making direct changes to the real DOM, React can make intelligent decisions about how to update the UI with minimal performance impact.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Optimization</span><span class=\"c8\">: React optimises the update process to ensure that only the necessary parts of the DOM are modified, resulting in faster rendering times.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Cross-platform Consistency</span><span class=\"c8\">: The Virtual DOM allows React to work consistently across different platforms and browsers, abstracting away any inconsistencies or quirks in how different browsers handle the DOM.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Smoother User Experience</span><span class=\"c8\">: The efficient updating process of the Virtual DOM leads to a smoother and more responsive user experience, especially in complex applications with frequent updates.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Facilitates Reconciliation</span><span class=\"c8\">: The Virtual DOM enables React to efficiently reconcile changes in the component's state or props, ensuring that the UI accurately reflects the application's data.</span></li></ul>"
            ],
            "Key in React": [
                "<p class=\"c1\"><span class=\"c8\">In React, the key prop is a special attribute that is included when creating a list of elements. It helps React identify which items have changed, been added, or been removed.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Uniqueness</span><span class=\"c8\">: The key prop should be unique among siblings of the same parent. It helps React differentiate between components and efficiently update the virtual DOM.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Stability</span><span class=\"c8\">: The key should be stable across re-renders. Avoid using indexes as keys if the list can change, as it can lead to unexpected behaviour.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Performance</span><span class=\"c8\">: Providing a key helps React optimise the rendering process. Without keys, React might need to recreate the entire list when there are changes, which can be less efficient.</span></p>"
            ],
            "JSX (JavaScript XML)": [
                "<p class=\"c13\"><span class=\"c8\">JSX is a syntax extension for JavaScript often used with React. It allows us to write HTML-like code directly within JavaScript files. JSX provides a more readable and concise way to describe the structure of user interfaces.</span></p>"
            ],
            "React Component": [
                "<p class=\"c13\"><span class=\"c8\">A React component is a self-contained, reusable module that encapsulates a specific piece of UI. Components in React are designed to be reusable, which promotes code modularity and maintainability.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">In React, components can be thought of as JavaScript functions or classes that return elements, specifying what should be rendered on the screen. They can also maintain their own internal state and receive data through \"props\".</span></p>",
                "<p class=\"c13\"><span class=\"c8\">There are two main ways to define a React component: 1. Functional Components, 2. Class Components</span></p>"
            ],
            "Component State and Props": [
                "<h2 class=\"c60\" id=\"h.9eo62pnxkp96\"><span class=\"c30 c76\">Props (Properties):</span></h2>",
                "<p class=\"c13\"><span class=\"c8\">Props are inputs to a React component. They are passed down from a parent component to a child component. Props are read-only and cannot be modified within the component itself. They allow us to customise the behaviour or appearance of a component.</span></p>",
                "<h2 class=\"c60\" id=\"h.1ff8wbbulsok\"><span class=\"c30 c76\">State:</span></h2>",
                "<p class=\"c13\"><span class=\"c11\">State is a way for a component to keep track of information that may change over time. It represents the current state of the component and determines how it should render. Unlike props, state is managed within the component itself and can be updated using the </span><span class=\"c2\">setState</span><span class=\"c8\">&nbsp;method.</span></p>"
            ],
            "React.CreateElement": [
                "<p class=\"c1\"><span class=\"c8\">React.createElement is a method provided by the React library for creating React elements, which are the building blocks of React applications.</span></p>",
                "<p class=\"c1\"><span class=\"c53 c11 c37 c81\">const element = React.createElement(elementType, props, children);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const element = React.createElement('div', { className: 'my-class' }, 'Hello, World!');</span></p>",
                "<p class=\"c1\"><span class=\"c8\">i.e.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const element = &lt;div className=\"my-class\"&gt;Hello, World!&lt;/div&gt;;</span></p>"
            ],
            "Functional vs Class components": [
                "<a id=\"t.e3242eceff840811bf504759c7e14c3a89de3c62\"></a>",
                "<a id=\"t.3\"></a>",
                "<table class=\"c45\"><tbody><tr class=\"c44\"><td class=\"c54\" colspan=\"1\" rowspan=\"1\"><p class=\"c52\"><span class=\"c30 c2\">Functional</span></p></td><td class=\"c38\" colspan=\"1\" rowspan=\"1\"><p class=\"c52\"><span class=\"c30 c2\">Class</span></p></td></tr><tr class=\"c88\"><td class=\"c54\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Functional components are just JavaScript functions that take props as an argument and return React elements.</span></p></td><td class=\"c38\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">Class components are ES6 classes that extend </span><span class=\"c2\">React.Component</span><span class=\"c8\">.</span></p></td></tr><tr class=\"c41\"><td class=\"c54\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">With Hooks, functional components can use </span><span class=\"c2\">useState</span><span class=\"c8\">&nbsp;and other hooks to manage state.</span></p></td><td class=\"c38\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">Class components can manage their own local state using </span><span class=\"c2\">this.state</span><span class=\"c11\">&nbsp;and </span><span class=\"c2\">this.setState()</span><span class=\"c8\">.</span></p></td></tr><tr class=\"c91\"><td class=\"c54\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c2\">useEffect </span><span class=\"c8\">for life cycle methods</span></p></td><td class=\"c38\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c11\">Class components have access to lifecycle methods like </span><span class=\"c2\">componentDidMount</span><span class=\"c11\">, </span><span class=\"c2\">componentDidUpdate</span><span class=\"c11\">, and </span><span class=\"c30 c2\">componentWillUnmount</span></p></td></tr><tr class=\"c64\"><td class=\"c54\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Functional components are typically faster and more lightweight than class components. This is because they don't have the overhead associated with class instantiation and lifecycle methods.</span></p></td><td class=\"c38\" colspan=\"1\" rowspan=\"1\"><p class=\"c13 c4\"><span class=\"c30 c31\"></span></p></td></tr></tbody></table>"
            ],
            "React Life Cycle Methods": [
                "<p class=\"c13\"><span class=\"c8\">React lifecycle methods are special functions that get called at different stages in a component's life. They allow us to hook into these different points to perform actions, such as setting up a component, updating it, or cleaning it up. As of React 16.3, some lifecycle methods have been deprecated in favour of safer alternatives called \"lifecycle hooks\" which are used with functional components and React Hooks.</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Class Component</span><span class=\"c8\">: componentDidMount, componentDidUpdate, and componentWillUnmount</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Functional Component</span><span class=\"c8\">: useState, useEffect, useRef, useContext, useReducer</span></p>"
            ],
            "React Hooks": [
                "<p class=\"c13\"><span class=\"c8\">React Hooks are functions that allow us to use state and other React features in functional components. They were </span></p>",
                "<p class=\"c13\"><span class=\"c8\">e.g. useState, useEffect, useRef, useContext, useReducer</span></p>"
            ],
            "Custom Hooks": [
                "<p class=\"c13\"><span class=\"c8\">A custom hook in React is a JavaScript function that uses one or more built-in hooks. It helps us to encapsulate, separate complex logic and reuse stateful logic across multiple components.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Custom hooks must always start with the word \"use”, it helps React to recognise them as hooks.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Features of custom hooks:</span></p>",
                "<ol class=\"c10 lst-kix_9jgx3e2yvtni-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Reusing Logic:</span><span class=\"c8\">&nbsp;Custom hooks allows us to extract and reuse stateful logic that may be used in multiple components. This can include state management, side effects, subscriptions, and more.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Separation of Concerns:</span><span class=\"c8\">&nbsp;Custom hooks promote separation of concerns. They allow us to keep our components focused on rendering and user interactions, while moving complex logic into hooks.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Composable: </span><span class=\"c8\">Custom hooks can be composed together. Multiple custom hooks can be used in a single component, allowing us to reuse different pieces of logic independently.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Manage State and Side Effects:</span><span class=\"c11\">&nbsp;Custom hooks can use built-in hooks like </span><span class=\"c2\">useState</span><span class=\"c11\">, </span><span class=\"c2\">useEffect</span><span class=\"c11\">, </span><span class=\"c11\">etc</span><span class=\"c8\">. This enables us to manage component state and perform side effects within the custom hook.</span></li></ol>"
            ],
            "Stateful Logic": [
                "<p class=\"c13\"><span class=\"c8\">Any program's logic that depends on or interacts with the current state of the component. It involves managing and updating the state of the component based on user interactions, data changes, or other events.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Examples of stateful logic in a React application might include:</span></p>",
                "<ul class=\"c10 lst-kix_26gfxcq4kxkp-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Managing form input values and validation.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Controlling the visibility or behaviour of UI elements based on user actions.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Handling data fetching and updates from an API.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Implementing conditional rendering based on the current state.</span></li></ul>"
            ],
            "Side Effect": [
                "<p class=\"c13\"><span class=\"c8\">In React, a side effect refers to any code that affects something outside the scope of the current component. Side effects are often asynchronous operations that don't happen immediately.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Common examples of side effects in React components include:</span></p>",
                "<ul class=\"c10 lst-kix_1nvlc6gaax4n-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Data Fetching:</span><span class=\"c8\">&nbsp;Making API requests to get data for a component.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Event Listeners &amp; Subscriptions</span><span class=\"c8\">: Setting up and tearing down event listeners or subscriptions.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Manual DOM Manipulation</span><span class=\"c11\">: Directly interacting with the DOM using methods like </span><span class=\"c2\">getElementById</span><span class=\"c11\">, etc.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Timers</span><span class=\"c8\">: Setting and clearing intervals or timeouts.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Updating State Based on Props</span><span class=\"c11\">: Using </span><span class=\"c2\">useEffect</span><span class=\"c8\">&nbsp;to update component state based on changes in props.</span></li></ul>",
                "<p class=\"c13\"><span class=\"c11\">The primary way to manage side effects in functional components is through the </span><span class=\"c2\">useEffect</span><span class=\"c8\">&nbsp;hook.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">useEffect(() =&gt; {</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Side effect code here</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return () =&gt; {</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Cleanup code (optional)</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</span></p>",
                "<p class=\"c13\"><span class=\"c8\">}, [/* dependencies */]);</span></p>"
            ],
            "Synthetic Events": [
                "<p class=\"c13\"><span class=\"c8\">Synthetic events are a cross-browser wrapper around the native browser events. They provide a consistent interface for handling events across different browsers.</span></p>",
                "<p class=\"c13\"><span class=\"c2\">Event Pooling:</span><span class=\"c11\">&nbsp;React reuses synthetic event objects. This means that the event object is nullified after the event callback has been called. If you need to access event properties asynchronously, you should call </span><span class=\"c2\">event.persist()</span><span class=\"c8\">.<br><br> function handleClick(event) {<br> &nbsp; &nbsp; event.persist(); // This allows you to access event properties later<br><br> &nbsp; &nbsp; setTimeout(() =&gt; {<br> &nbsp; &nbsp; &nbsp; &nbsp; console.log(event.type); // This will work now // without event.persist(), event will be null here<br> &nbsp; &nbsp; }, 100);<br> }</span></p>"
            ],
            "Error Handling in React Application": [
                "<ol class=\"c10 lst-kix_jb5t5f10zh8a-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">Try Catch Statement: </span><span class=\"c7\">We can use try catch at places/code logic (react side-effects) where we think that something might fail, and display meaningful messages to users when code goes to catch.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">then/catch for promises: </span><span class=\"c7\">We can also display meaningful messages to user when code goes to catch while using then/catch for promises</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2 c34\">React Error Boundary:</span><span class=\"c34 c11\">&nbsp;It is used to gracefully handle errors in React Apps. It helps us prevent the full app crash and let us define a fallback UI when an error is detected in our Application. It is generally wrapped at the top level of the app so that errors at any of the children components can be detected by our error boundary.</span></li></ol>"
            ],
            "What triggers a react functional component re-render and what is happening after the rerender?": [
                "<ol class=\"c10 lst-kix_42rw3tdgd0k0-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c7\">A react functional component can re-render if:</span></li></ol>",
                "<ol class=\"c10 lst-kix_42rw3tdgd0k0-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c7\">Its state changes</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c7\">Its props changes</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c7\">Its parents component re-renders</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c7\">context changes (if the component consumes any context and any value in the context get changed)</span></li></ol>",
                "<p class=\"c1\"><span class=\"c34 c11\">After rerendering, React compares the new Virtual DOM with the previous one, and finds the most optimised way (minimum number of operations - add/delete/modify) to update the actual DOM.</span></p>"
            ],
            "HOC": [
                "<p class=\"c13\"><span class=\"c8\">Higher-Order Component is basically a component in react that takes a component as an argument and returns a new component with additional props or functionality.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">It is used to enhance the functionality of a component by wrapping it with another component. HOCs are a way to reuse code logic and add additional features to a component without modifying the component itself.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c11\">e.g. HOCs are commonly used for tasks like authentication and authorization. They can check if a user is authenticated and conditionally render components based on their authentication status.</span></p>"
            ],
            "Suspense": [
                "<p class=\"c1\"><span class=\"c8\">React Suspense is a feature that allows components to \"suspend\" rendering while they wait for some data to load. This is especially useful for handling asynchronous operations like dynamic import of components using lazy loading.</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">const LandingPage = lazy(() =&gt; import('./pages/LandingPage'));</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&lt;Suspense fallback={&lt;div&gt;Loading...&lt;/div&gt;}&gt;</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">&lt;LandingPage /&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c11\">&lt;/Suspense&gt;</span></p>"
            ],
            "Routing in React": [
                "<p class=\"c13\"><span class=\"c8\">Routing in React is the process of managing the navigation of a web app by dynamically rendering different components based on the URL. This allows users to move between different parts of the app without the need for a full page refresh.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">To implement routing in React, we typically use a library called </span><span class=\"c2\">react-router</span><span class=\"c8\">.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">npm install react-router-dom</span></p>"
            ],
            "React Pure Component": [
                "<p class=\"c1\"><span class=\"c11\">PureComponent is similar to</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://react.dev/reference/react/Component&amp;sa=D&amp;source=editors&amp;ust=1707022712864594&amp;usg=AOvVaw0TuQN6gOviw2qHhqgtLqck\">&nbsp;Component</a></span><span class=\"c11\">&nbsp;but it skips re-renders for the same props and state. To skip re-rendering a class component for the same props and state, extend PureComponent instead of</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://react.dev/reference/react/Component&amp;sa=D&amp;source=editors&amp;ust=1707022712864711&amp;usg=AOvVaw13N5T-Tramxf9JSXBaSihz\">&nbsp;Component</a></span><span class=\"c8\">. </span></p>",
                "<p class=\"c1\"><span class=\"c11\">React.PureComponent provides a default implementation of the </span><span class=\"c2\">shouldComponentUpdate</span><span class=\"c8\">&nbsp;method that performs a shallow comparison of the current and next props and state. It helps to optimise the rendering performance by preventing unnecessary re-renders when the props and state are unchanged.</span></p>"
            ],
            "Stateless Component": [
                "<p class=\"c1\"><span class=\"c8\">Stateless components typically refer to components in a user interface that do not manage their own state.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Stateless components receive data through their props (properties) and render it in a certain way, but they don't have their own internal state. This means that their behaviour is purely based on the data they receive, and they don't have the ability to modify that data directly.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g. button, loader, etc</span></p>"
            ],
            "Controlled Component": [
                "<p class=\"c1\"><span class=\"c8\">A controlled component is a form element (like an input, select, or textarea) whose value is controlled by the state of the React component. This means that the value of the form element is determined by the component's state and can only be changed by updating the state.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function ControlledComponent() { </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">const [inputValue, setInputValue] = useState('');</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">function handleChange(event) { </span></p>",
                "<p class=\"c1 c28 c22\"><span class=\"c8\">setInputValue(event.target.value); </span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">} </span></p>",
                "<p class=\"c1 c4 c28\"><span class=\"c8\"></span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">return (</span></p>",
                "<p class=\"c1 c28 c22\"><span class=\"c8\">&lt;input type=\"text\" value={inputValue} onChange={handleChange} /&gt;</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp;}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">If we add defaultValue attribute to the input field, then it will throw a warning, that it contains both defaultValue and value. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)</span></p>"
            ],
            "React Memo": [
                "<p class=\"c13\"><span class=\"c8\">React memo is used to stop re-rendering of a component if its props have not changed.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">import { memo } from \"react\";</span></p>",
                "<p class=\"c13\"><span class=\"c8\">const Todos = ({ todos }) =&gt; {</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; console.log(\"child render\");</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; return (</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; &lt;&gt;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &lt;h2&gt;My Todos&lt;/h2&gt;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; {todos.map((todo, index) =&gt; {</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &nbsp; return &lt;p key={index}&gt;{todo}&lt;/p&gt;;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; })}</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; &lt;/&gt;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; );</span></p>",
                "<p class=\"c13\"><span class=\"c8\">};</span></p>",
                "<p class=\"c13\"><span class=\"c8\">export default memo(Todos);</span></p>",
                "<p class=\"c13\"><span class=\"c8\">There are two ways to prevent child components from re-rendering.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; - wrapping them in `memo`</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&nbsp; &nbsp; - passing them as `children` prop</span></p>"
            ],
            "useReducer": [
                "<p class=\"c1\"><span class=\"c8\">It is an alternative to using useState when the state logic involves multiple sub-values or when the next state depends on the previous one.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">The useReducer hook takes two arguments: a reducer function and an initial state. It returns an array with two elements: the current state and a dispatch function. The reducer function is responsible for specifying how the state should change in response to dispatched actions.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">import React, { useReducer } from 'react';</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">// Reducer function</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const reducer = (state, action) =&gt; {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; switch (action.type) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; case 'INCREMENT':</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; return { count: state.count + 1 };</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; case 'DECREMENT':</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; return { count: state.count - 1 };</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; default:</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; return state;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">};</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">// Component using useReducer</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const Counter = () =&gt; {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; // Initial state</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; const initialState = { count: 0 };</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; // useReducer returns [state, dispatch]</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; const [state, dispatch] = useReducer(reducer, initialState);</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; return (</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &lt;div&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &lt;p&gt;Count: {state.count}&lt;/p&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &lt;button onClick={() =&gt; dispatch({ type: 'INCREMENT' })}&gt;Increment&lt;/button&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; &lt;button onClick={() =&gt; dispatch({ type: 'DECREMENT' })}&gt;Decrement&lt;/button&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &lt;/div&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; );</span></p>",
                "<p class=\"c1\"><span class=\"c8\">};</span></p>"
            ],
            "useMemo vs useCallback": [
                "<p class=\"c1\"><span class=\"c30 c58 c77\">useMemo:</span></p>",
                "<p class=\"c1\"><span class=\"c8\">The useMemo hook is used to memoize a value, such as a computed result or an object. It takes a function and an array of dependencies. The value returned by the function will only be recomputed if one of the dependencies has changed.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const MyComponent = ({ data }) =&gt; {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">const memoizedValue = useMemo(() =&gt; {</span></p>",
                "<p class=\"c1 c28 c22\"><span class=\"c8\">return computeExpensiveValue(data)</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">}, [data]);</span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">&nbsp;</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">return &lt;div&gt;{memoizedValue}&lt;/div&gt;; </span></p>",
                "<p class=\"c1\"><span class=\"c8\">};</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c30 c2\">useCallback:</span></p>",
                "<p class=\"c1\"><span class=\"c8\">The useCallback hook is used to memorise a callback function. It also takes a function and an array of dependencies. The memoized callback will only change if one of the dependencies has changed.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Every time ParentComponent renders, a new handleClick function is created. This can lead to unnecessary re-renders of ChildComponent because it receives a new function reference each time, even if the function logic is the same, which can be optimised using useCallback</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">const MyComponent = ({ onClick }) =&gt; { </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">const memoizedCallback = useCallback(() =&gt; { </span></p>",
                "<p class=\"c1 c28 c22\"><span class=\"c8\">// callback logic </span></p>",
                "<p class=\"c1 c28\"><span class=\"c8\">}, [/* dependencies */]); </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">return &lt;childComponent onClick={memoizedCallback}&gt;Click me&lt;/childComponent&gt;; </span></p>",
                "<p class=\"c1\"><span class=\"c8\">};</span></p>"
            ],
            "Adding Style in React": [
                "<ol class=\"c10 lst-kix_m8csd4jzrety-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Inline Styles:</span><span class=\"c8\">&nbsp;style={}</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">External Stylesheets:</span><span class=\"c8\">&nbsp;import './MyComponent.css';</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">CSS Modules:</span><span class=\"c8\">&nbsp;import styles from './MyComponent.module.css'; CSS Modules are a way to locally scope your CSS by default. Each component gets its own CSS file, and the class names are scoped to that component. </span></li><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Styled Components (Library): </span></li></ol>",
                "<ol class=\"c10 lst-kix_m8csd4jzrety-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">npm install styled-components</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">import styled from 'styled-components';</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">const StyledDiv = styled.div`<br> &nbsp; &nbsp; color: blue;<br> &nbsp; &nbsp; font-size: 20px;<br> `;</span></li></ol>"
            ],
            "Data Flow (Flux Architecture)": [
                "<p class=\"c13\"><span class=\"c8\">Flux is an architectural pattern that helps manage the flow of data in a React application.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Flux follows unidirectional data flow which increases predictability of application code.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">The Flux pattern consists of the following parts:</span></p>",
                "<ul class=\"c10 lst-kix_u32vby5s6203-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Actions</span><span class=\"c11\">: </span><span class=\"c2\">Actions are plain JavaScript objects</span><span class=\"c8\">&nbsp;that describe something that has happened in the application. They are dispatched by components or other parts of the application to notify the store about what has occurred.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Dispatcher</span><span class=\"c8\">: The Dispatcher is responsible for distributing actions to the stores. It acts as a central hub for all actions in the application. There is typically only one dispatcher in a Flux application.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Stores</span><span class=\"c8\">: Stores are responsible for managing the state of the application. They listen for actions dispatched by the dispatcher and update their state accordingly. Stores are essentially containers for the application's state.</span></li></ul>"
            ],
            "Redux": [
                "<p class=\"c13\"><span class=\"c8\">Redux is a popular library that implements the Flux architecture with some modifications. Redux provides a predictable and manageable way to handle the state of a React application. Redux simplifies the flow of data by unifying the state management in a single, immutable store.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Redux has the following key components:</span></p>",
                "<ul class=\"c10 lst-kix_p9jz2nybrroi-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Store</span><span class=\"c8\">: The store is a single source of truth that holds the entire state of the application. It is read-only, and the only way to change its state is by dispatching actions.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Actions</span><span class=\"c11\">: Actions are plain JavaScript objects that describe what happened in the application. They must have a </span><span class=\"c2\">type</span><span class=\"c11\">&nbsp;property to indicate the type of action, and they can optionally carry additional data (payload). </span><span class=\"c30 c2\">You can think of an action as an event that describes something that happened in the application.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Reducers</span><span class=\"c8\">: Reducers are pure functions that specify how the application's state changes in response to actions. They take the current state and an action, and return to the new state.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Dispatch</span><span class=\"c8\">: Dispatching an action is the process of sending an action to the Redux store. This is how you trigger a state change.</span></li></ul>",
                "<p class=\"c1\"><span class=\"c8\">Data Flow in Redux:</span></p>",
                "<ul class=\"c10 lst-kix_z225upm2g1rd-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Component Triggers Action: </span><span class=\"c8\">A React comp. dispatches an action when an event occurs (e.g. a btn is clicked).</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Action is Dispatched</span><span class=\"c8\">: The action is dispatched to the Redux store.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Reducer Updates State</span><span class=\"c11\">: </span><span class=\"c8\">The reducer processes the action and updates the state in the Redux store based on the action type.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Store Notifies Subscribers</span><span class=\"c8\">: The store notifies all subscribed components that the state has changed.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Components Re-render</span><span class=\"c8\">: React components that are connected to the store receive the updated state as props and re-render with the new data.</span></li></ul>"
            ],
            "Reducer": [
                "<p class=\"c13\"><span class=\"c11\">Reducers are a pure function that is used to modify redux </span><span class=\"c11\">store</span><span class=\"c8\">. it takes the previous state and the action being dispatched as argument returns the new state.</span></p>"
            ],
            "React Context API": [
                "<p class=\"c13\"><span class=\"c8\">The React Context API is a way to pass data deep down the nested comp without having to manually pass props through every level of comp (prop drilling). It provides a way to share data between comps. that are not directly connected.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">It is mainly used to pass global data, such as theme information, user authentication, or language preferences, etc.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here's an overview of how the Context API works:</span></p>",
                "<ul class=\"c10 lst-kix_dxd7kboicrv0-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Creating a Context:</span><span class=\"c11\">&nbsp;First, you need to create a context using </span><span class=\"c2\">createContext()</span><span class=\"c8\">. This function returns an object with a Provider and a Consumer.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Provider Component</span><span class=\"c11\">: The </span><span class=\"c2\">Provider</span><span class=\"c8\">&nbsp;component is used to wrap the part of the component tree where we want to make the context available.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Consume the Context:</span><span class=\"c11\">&nbsp;</span><span class=\"c2\">useContext</span><span class=\"c8\">&nbsp;hook is used to consume the context.</span></li></ul>"
            ],
            "Redux vs React Context": [
                "<a id=\"t.161f727ae65add311436649ee17e66772c521bde\"></a>",
                "<a id=\"t.4\"></a>",
                "<table class=\"c45\"><tbody><tr class=\"c44\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c52\"><span class=\"c30 c2\">useContext</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c52\"><span class=\"c30 c2\">Redux</span></p></td></tr><tr class=\"c59\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">useContext is a hook.</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Redux is a state management library.</span></p></td></tr><tr class=\"c66\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Specifically designed for static data, that is not often refreshed or updated</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Works like a charm with both static and dynamic data</span></p></td></tr><tr class=\"c66\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">no support for middlewares</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">support many middlewares, which makes it very powerful</span></p></td></tr><tr class=\"c66\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Debugging can be hard in highly nested React Component Structure even with Dev Tool</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Incredibly powerful Redux Dev Tools to ease debugging</span></p></td></tr><tr class=\"c66\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">UI logic and State Management Logic are in the same component</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">Better code organisation with separate UI logic and State Management Logic</span></p></td></tr><tr class=\"c59\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">It is better to use with small applications.</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">It is perfect for larger applications.</span></p></td></tr><tr class=\"c59\"><td class=\"c75\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">It is easy to understand and requires less code.</span></p></td><td class=\"c65\" colspan=\"1\" rowspan=\"1\"><p class=\"c13\"><span class=\"c8\">It is quite complex to understand</span></p></td></tr></tbody></table>"
            ],
            "Redux Side Effect Manager": [
                "<p class=\"c13\"><span class=\"c8\">The normal Redux flow is: action dispatched, then some state is changed. However, a Redux app won’t be very useful if the only function is changing state.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">Actions like talking to the server, accessing local storage, and recording analytics events require reaching out to the outside world. Anything that occurs outside of the Redux normal flow is considered a</span><span class=\"c2\">&nbsp;Redux </span><span class=\"c53 c2 c37\">side-effect.</span></p>"
            ],
            "Redux Saga": [
                "<p class=\"c13\"><span class=\"c11 c37\">Redux-saga</span><span class=\"c8\">&nbsp;is a Redux side effect manager library that aims to manage application side effects (i.e. asynchronous things like data fetching and impure things like accessing the browser cache) easier to manage, more efficient to execute, easy to test, and better at handling failures.</span></p>"
            ],
            "How can we fetch API data without using the useEffect": [
                "<ol class=\"c10 lst-kix_5uqjm18qkxyy-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">useState</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Custom useFetch hook</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">useQuery hook of react-query 3rd party library</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">HOC</span></li></ol>"
            ],
            "What are the different ways to improve React Applications?": [
                "<ol class=\"c10 lst-kix_vw2la694r5u9-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Lazy loading components/routes</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Avoid unnecessary re-renders: React memo</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Creating Reusable components</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Writing modular code</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Memoization - useMemo, useCallback</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Avoid nesting too many components</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Bundle Splitting</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Code Obfuscation - code minifying</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Debounce/throttle</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Perception - use Loader, error</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Pagination / Infinite Scrolling / Virtualisation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Optimising Web Vitals</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">src-set for images, loading images lazily</span></li></ol>"
            ],
            "Jest & React Testing library ": [
                "<p class=\"c13\"><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://jestjs.io/&amp;sa=D&amp;source=editors&amp;ust=1707022712874705&amp;usg=AOvVaw3Wz3ZUhQUtXgRuThz32blq\">Jest</a></span><span class=\"c11\">&nbsp;and</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://testing-library.com/docs/react-testing-library/intro&amp;sa=D&amp;source=editors&amp;ust=1707022712874828&amp;usg=AOvVaw2Y8BTM29G8KdcutM7jcjyR\">&nbsp;React Testing Library</a></span><span class=\"c8\">&nbsp;are popular JavaScript testing libraries used in the React ecosystem for writing unit tests.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">React Testing Library and Jest are often used together for testing React comps. Jest provides the testing framework and the ability to run tests, while React Testing Library provides utilities for rendering components and interacting with them.</span></p>"
            ],
            "Jest": [
                "<p class=\"c13\"><span class=\"c8\">Jest is a zero-config, all-in-one testing framework for JavaScript. It's widely used for testing JavaScript code, including React applications. Key features of Jest include:</span></p>",
                "<ul class=\"c10 lst-kix_e39stvfyz0s6-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Snapshot Testing:</span><span class=\"c8\">&nbsp;Jest can capture a \"snapshot\" of the rendered output of a component. It allows you to detect unintended changes to the UI.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Mocking Functions and Modules</span><span class=\"c8\">: Jest provides built-in mechanisms for mocking functions and modules, allowing you to isolate components for testing.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Asynchronous Testing Support</span><span class=\"c8\">: Jest has built-in support for testing asynchronous code, making it easy to test components that rely on promises or callbacks.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Test Coverage Reporting</span><span class=\"c8\">: Jest can generate detailed reports on code coverage, helping you identify areas that may need more thorough testing.</span></li></ul>"
            ],
            "React Testing Library": [
                "<p class=\"c13\"><span class=\"c8\">React Testing Library is a set of utility functions designed to make testing React components more intuitive and user-centric. It encourages writing tests that closely resemble how users interact with your application. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">Key features of React Testing Library include:</span></p>",
                "<ul class=\"c10 lst-kix_ywdos338q0le-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Querying the DOM by Accessibility:</span><span class=\"c8\">&nbsp;Instead of querying the DOM using implementation details (like class names or element types), IT encourages querying by accessibility roles, labels, and text content.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Rendering Components</span><span class=\"c8\">: React Testing Library provides utilities for rendering components into a virtual DOM environment, allowing you to interact with them in a controlled manner.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Fire Events</span><span class=\"c8\">: It provides utilities to simulate user interactions, such as clicks, typing, and submitting forms.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Support for Async Code</span><span class=\"c8\">: React Testing Library is designed to work seamlessly with asynchronous code, making it easy to test components that rely on data fetching.</span></li></ul>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>"
            ]
        },
        "System Design": {
            "Things to consider in Frontend System Design interviews": [
                "<p class=\"c13\"><span class=\"c11\">Tutorial:</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3D5vyKhm2NTfw%26list%3DPLI9W87-Dqn7j_x6QtR6sUjycJR7nQLBqT&amp;sa=D&amp;source=editors&amp;ust=1707022712876047&amp;usg=AOvVaw0IIO8YMKglqov5aTkkjy6s\">&nbsp;</a></span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3D5vyKhm2NTfw%26list%3DPLI9W87-Dqn7j_x6QtR6sUjycJR7nQLBqT&amp;sa=D&amp;source=editors&amp;ust=1707022712876134&amp;usg=AOvVaw0iFR3nbsPSSx22FKGAdBd5\">https://www.youtube.com/watch?v=5vyKhm2NTfw&amp;list=PLI9W87-Dqn7j_x6QtR6sUjycJR7nQLBqT</a></span></p>",
                "<p class=\"c13\"><span class=\"c11\">RADIO - Requirements, Architecture, Data Models, Implementation, Optimisation</span></p>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Requirements - gather all requirements</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Functional requirements</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Module Wise</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-3 start\" start=\"1\"><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Authentication &amp; User Management</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Product Listing</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Pricing &amp; Subscription</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Payment Gateway</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Cart</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Account Management</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-2\" start=\"2\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Feature Wise</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-3 start\" start=\"1\"><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Search</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Filter</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Details</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Product Review</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Add/remove items to cart</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Video Streaming - Dash.js, Shaka Player</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-1\" start=\"2\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Non-Functional Requirements</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Devices - Mobile/Desktop/Tablets</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Responsive/Adaptive</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Accessibility - support for disabled people, international people in local language</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Assets Optimisation</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Performance - Web Vitals, CSR/SSR</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Security</span></li><li class=\"c14 c23 li-bullet-0\"><span class=\"c8\">Caching</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Offline Support</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Logging &amp; monitoring</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Testing</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-0\" start=\"2\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Scope - Prioritisation - what least to build, Minimum Viable Product (MVP)</span></li><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Tech Choices</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Library/Framework</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">State Management</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Caching &amp; Storage</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Offline Support / PWA</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Design System / theming</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Folder Structure</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Packages</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Build Tools - webpack, rollup</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-0\" start=\"4\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Component Architecture</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Routes / Component Diagram</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Component Hierarchy / Component API</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Dependency Tree / Data Sharing</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-0\" start=\"5\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Data Models, API, Component API/State/Props</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Data Models</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">url format</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">method</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">request - body, query param</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">response structure - data, error</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">status code</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-1\" start=\"2\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Component API</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">state/props</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">event handling</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">customisation - theming</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Reusability</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Data source</span></li></ol>",
                "<ol class=\"c10 lst-kix_hsc2k7z7i3t-0\" start=\"6\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Optimisation &amp; Performance</span></li><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Accessibility</span></li><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Security</span></li></ol>"
            ],
            "Common HLD Components": [
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Architectural Patterns</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Monolith Frontend</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Micro Frontend</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c11\">The idea behind Micro Frontends is to think about a website or web app as </span><span class=\"c2\">a composition of features</span><span class=\"c11\">&nbsp;which are owned by </span><span class=\"c2\">independent teams</span><span class=\"c11\">. Each team has a </span><span class=\"c2\">distinct area of business</span><span class=\"c11\">&nbsp;or </span><span class=\"c2\">mission</span><span class=\"c8\">&nbsp;it cares about and specialises in.</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">using iframe, window.postMessage(), window.addEventListener(‘message’, function(){ })</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">web components (html+css+js encapsulated components which can be used anywhere, any js library) - shadowDOM</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">npm package (can be used in particularly that js library)</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"2\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Communication Protocols</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c2\">HTTP Request</span><span class=\"c8\">&nbsp;- client makes the request and server sends the response</span></li><li class=\"c18 li-bullet-0\"><span class=\"c2\">HTTP Long Polling</span><span class=\"c8\">&nbsp;- client keep asking to server until all demands are met</span></li><li class=\"c18 li-bullet-0\"><span class=\"c2\">Web-Socket</span><span class=\"c8\">&nbsp;- server sends response whenever any update/new data comes</span></li><li class=\"c18 li-bullet-0\"><span class=\"c2\">Server Sent Events(SSE)</span><span class=\"c8\">&nbsp;- client need to make request only once, server keep sending data</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"3\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Availability (offline support)</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">service worker (PWA)</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"4\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Accessibility</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Responsive - Device support</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">keyboard accessibility</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">html5 semantics: using correct html element to convey the meaning of the element, header, nav, article, section, figure, figcaption, main, footer, etc</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">aria attributes</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">screen reader (aria-live)</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">internationalisation</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"5\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Consistency: </span><span class=\"c11\">should have same behaviour / look on all browsers</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">js polyfills</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">design system (material ui, atlassian design system, etc) / theming</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"6\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Credibility &amp; Trust</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">SEO (Search Engine Optimisation)</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">On Page</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-3 start\" start=\"1\"><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">title, description, meta, content</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">Semantic HTML</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2\" start=\"2\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Off Page</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-3 start\" start=\"1\"><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">backlinks</span></li><li class=\"c23 c12 li-bullet-0\"><span class=\"c8\">ads</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"7\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Logging &amp; Monitoring</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c2\">Error Logging</span><span class=\"c8\">: sentry, datadog</span></li><li class=\"c18 li-bullet-0\"><span class=\"c2\">User Monitoring</span><span class=\"c8\">: RUM(Real User Monitoring): user tracking (types of users, how much time they spend)</span></li><li class=\"c18 li-bullet-0\"><span class=\"c2\">Performance Monitoring</span><span class=\"c8\">: Application Performance Monitoring (APM): datadog</span></li><li class=\"c18 li-bullet-0\"><span class=\"c2\">Application Monitoring</span><span class=\"c8\">: capacity/traffic monitoring (Google Analytics)</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"8\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Storage &amp; Database</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">State Management - Redux, React Context</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Local Storage, Session Storage, IndexedDB, Cookies</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"9\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Performance &amp; Optimisation</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c30 c2\">Network Performance</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Caching resources</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Debouncing/Throttling</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Widget/Component Result Cache (Memoization)</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1\" start=\"2\"><li class=\"c18 li-bullet-0\"><span class=\"c30 c2\">Assets Performance</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Assets resources caching</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">webP Images (smaller in size, can be compressed without losing quality, support animation like gifs)</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">compress/resize media</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c11\">image smaller in size, use </span><span class=\"c11\">src-set</span><span class=\"c11\">: </span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://html.com/attributes/img-srcset/%23ixzz7cyKsZPJ5&amp;sa=D&amp;source=editors&amp;ust=1707022712881070&amp;usg=AOvVaw1WIgXe0xGsMj4p63DGJMR-\">&nbsp;</a></span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://html.com/attributes/img-srcset/%23ixzz7cyKsZPJ5&amp;sa=D&amp;source=editors&amp;ust=1707022712881167&amp;usg=AOvVaw2CeSliDyTS_Z_zfIYIs2Sh\">https://html.com/attributes/img-srcset/#ixzz7cyKsZPJ5</a></span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-3 start\" start=\"1\"><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">The src-set attribute is an HTML attribute used in the &lt;img&gt; element to provide multiple sources (and optionally their sizes) for an image. This helps browsers to choose the most appropriate version of an image based on the device's screen size and resolution. It's particularly useful for responsive web design to optimise for various devices and network conditions.</span></li><li class=\"c1 c12 li-bullet-0\"><span class=\"c8\">&lt;img <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src=\"image-800.jpg\" <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srcset=\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image-400.jpg 400w, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image-800.jpg 800w, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image-1200.jpg 1200w, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image-1600.jpg 1600w<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sizes=\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(max-width: 400px) 400px,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(max-width: 800px) 800px,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(max-width: 1200px) 1200px, 1600px<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alt=\"Description of the image\" <br>/&gt;</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2\" start=\"5\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Lazy Loading</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1\" start=\"3\"><li class=\"c18 li-bullet-0\"><span class=\"c30 c2\">JS Performance</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2 start\" start=\"1\"><li class=\"c61 c14 li-bullet-0\"><span class=\"c8\">Minify code</span></li><li class=\"c61 c14 li-bullet-0\"><span class=\"c8\">remove unused/repeated code (tree-shaking)</span></li><li class=\"c14 c61 li-bullet-0\"><span class=\"c8\">Loading JS Asynchronously (defer)</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Event Delegation</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Use Web Worker for high weight tasks</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Bundle Splitting</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Memoization</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1\" start=\"4\"><li class=\"c18 li-bullet-0\"><span class=\"c30 c2\">Rendering Performance</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c11\">Load Non-critical stuff later (analytics script, non-critical styles) - by using defer for non-critical scripts or loading scripts asynchronously using JS, by using media=”print” for non-critical css or loading css asynchronously using JS<br></span><span class=\"c8\">&lt;link rel=\"stylesheet\" href=\"non-critical.css\" media=\"print\"&gt;<br>document.addEventListener('DOMContentLoaded', function() { <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var link = document.createElement('link'); <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link.rel = 'stylesheet'; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link.href = 'non-critical.css'; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.head.appendChild(link);<br>});</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Perception - Loader, Skeleton, Placeholder</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Delivery Option (Pagination, Infinite Scroll, Virtualisation)</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">SSR</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c8\">Prefer CSS animation</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1\" start=\"5\"><li class=\"c18 li-bullet-0\"><span class=\"c2\">Web Vitals - </span><span class=\"c8\">FCP, LCP, TBT, TTI, CLS</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Keep a connection state in ur app, so that u will not make network request knowing that it will fail</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"10\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Security</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">.env variables</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Authentication &amp; Authorisation</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Content Security Policy (CSP)</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">CORS</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">CSRF</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-0\" start=\"11\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">Testing</span></li></ol>",
                "<ol class=\"c10 lst-kix_8aglx6o4qf2n-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Unit Testing (Individual Testing), e.g Jest, React Testing Library, Chai</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">Integration Testing </span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">End-to-end Testing (E2E Testing), e.g. Selenium, Cypress, Playwright</span></li></ol>",
                "<p class=\"c23 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 718.11px; height: 512.00px;\"><img alt=\"\" src=\"images/image2.png\" style=\"width: 718.11px; height: 512.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>",
                "<p class=\"c13\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.youtube.com/watch?v%3D9JDlZxR8gVw&amp;sa=D&amp;source=editors&amp;ust=1707022712882578&amp;usg=AOvVaw0hBu0IPkLmB1udvke3EE2I\">https://www.youtube.com/watch?v=9JDlZxR8gVw</a></span></p>"
            ],
            "How can we make a web app scalable": [
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Optimise Frontend Performance:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Network Performance</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">JS Performance</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Assets Performance</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Rendering Performance</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"2\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Caching:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Browser Caching</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">CDN Caching</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Service Worker Caching</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"3\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Load Balancing:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Distribute incoming traffic across multiple servers using load balancers.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Load balancing helps evenly distribute user requests and prevents any single server from becoming a bottleneck.</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"4\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Horizontal Scaling:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Add more servers or resources to your infrastructure to handle increased load.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Use containerization and orchestration tools like Docker and Kubernetes for efficient scaling.</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"5\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Content Delivery Network (CDN):</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Employ a CDN to cache and serve static content from servers located strategically around the world.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">CDNs reduce latency and offload traffic from your main servers.</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"6\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Asynchronous Processing:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c1 c20 c27 li-bullet-0\"><span class=\"c8\">Move time-consuming tasks to background jobs or queues.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Use message queues or job schedulers to handle asynchronous tasks like kafka, SQS, etc</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"7\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Optimise Code and Assets:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Minify and compress CSS, JavaScript, and HTML files.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Use efficient coding practices to reduce the overall size of your codebase.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Employ techniques like lazy loading for non-essential resources.</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"8\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Responsive Design:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Ensure the website is responsive and works well on various devices and screen sizes.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Responsive design improves user experience and accommodates a diverse user base.</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"9\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Monitoring and Analytics:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Implement monitoring tools to identify performance bottlenecks and issues like datadog APM</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"10\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Security Best Practices:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Implement security measures to protect against common vulnerabilities like CSP, CSRF, CORS</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"11\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Micro Service Architecture:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Consider a microservices architecture to break down the application into smaller, independent services.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Each service can be developed, deployed, and scaled independently.</span></li></ul>",
                "<ol class=\"c10 lst-kix_k3t1j6swa1rl-0\" start=\"12\"><li class=\"c27 c1 c28 li-bullet-0\"><span class=\"c30 c2\">Content and Database Caching:</span></li></ol>",
                "<ul class=\"c10 lst-kix_k3t1j6swa1rl-1 start\"><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Cache frequently requested content and database queries to reduce the load on your servers.</span></li><li class=\"c27 c1 c20 li-bullet-0\"><span class=\"c8\">Use caching mechanisms to serve pre-generated content when possible.</span></li></ul>"
            ],
            "What are the security measures which should be considered during development?": [
                "<ol class=\"c10 lst-kix_39tyn07fy8wf-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Using .env variable for secret keys and credentials</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Input validation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">CSP Policy</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">CORS</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">CSRF: csrf token, same-site</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Proper error handling</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Authentication - auth token</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Access Control</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Storing encrypted data in browser storage</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Encrypted password</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Encrypted url</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Code obfuscation - minification, uglification</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Logging &amp; Monitoring</span></li></ol>"
            ],
            "What are the A11y issues? How do you handle it?": [
                "<p class=\"c1\"><span class=\"c8\">A11y is short form of accessibility</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Some common accessibility issues are:</span></p>",
                "<ol class=\"c10 lst-kix_v8agge3bdi5c-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Lack of keyboard navigation/shortcuts</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Missing alt for image</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Colour contrast issues</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Missing label of form elements</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Unstructured content</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Not following semantic html</span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">To handle it we can do:</span></p>",
                "<ol class=\"c10 lst-kix_8azhl0pciuad-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Use semantic html</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Keyboard accessibility</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">alt attribute for images</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Use accessibility testing tools like pagespeed.web.dev, lighthouse</span></li></ol>",
                "<p class=\"c1 c4 c28\"><span class=\"c30 c31\"></span></p>"
            ]
        },
        "Networking & Security": {
            "What happens when you type a URL in the web browser and hit enter?": [
                "<ol class=\"c10 lst-kix_hm45fxk5bo5o-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">Parse URL</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Look for IP address of the domain in DNS</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Establish TCP connection with the server</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Make HTTP request</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Severs send the HTTP response, browser parse the response and display the content<br></span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Parsing the URL:</span><span class=\"c11\">&nbsp;Browser parses the URL to extract various components such as the protocol (HTTP, HTTPS), domain name (e.g.,</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=http://www.example.com/&amp;sa=D&amp;source=editors&amp;ust=1707022712886300&amp;usg=AOvVaw2AuB2t-7vW4MkFMfwgOdRl\">&nbsp;</a></span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=http://www.example.com/&amp;sa=D&amp;source=editors&amp;ust=1707022712886361&amp;usg=AOvVaw26Fho7lD1dTLmml0pHhRbF\">www.example.com</a></span><span class=\"c8\">), path, query parameters, and any fragments.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">The browser looks for the IP address of the domain name (locate the server hosting the website) in the DNS(Domain Name Server)</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">DNS is a list of URLs and their corresponding IP address (like a telephone book). We can access the website directly by typing the IP address but imagine remembering a group of numbers to visit any site.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">The DNS checks at the following places for the IP address.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-2 start\" start=\"1\"><li class=\"c23 c14 li-bullet-0\"><span class=\"c2\">Check Browser Cache</span><span class=\"c8\">: The browser maintains a cache of the DNS records for some fixed amount of time.</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c2\">Check OS Cache</span><span class=\"c8\">: If the browser doesn't contain the cache then it requests to the Operating System as the OS also maintains a cache of the DNS records.</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c2\">Router Cache</span><span class=\"c8\">: If your computer doesn't have the cache, then it searches in the router cache of the DNS records.</span></li><li class=\"c23 c14 li-bullet-0\"><span class=\"c2\">ISP(Internet Service Provider) Cache</span><span class=\"c11\">: If the IP address is not found till this then it is searched at the cache that ISP maintains of the DNS records. If not found here also, then ISP’s </span><span class=\"c2\">DNS recursive search</span><span class=\"c11\">&nbsp;is done. In \"</span><span class=\"c11 c37\">DNS recursive search</span><span class=\"c8\">\", a DNS server initiates a DNS query that communicates with several other DNS servers to find the IP address.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-0\" start=\"3\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">The Browser initiates a TCP connection with the server.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">When the browser receives the IP address, it will build a connection between the browser and the server using the internet protocol. The most common protocol used is TCP protocol. The connection is established using a three-way handshake.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-0\" start=\"4\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">The browser sends an HTTP request to the server.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c11\">Once the TCP connection is established with the server, actual request i.e GET |</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=http://www.google.com./&amp;sa=D&amp;source=editors&amp;ust=1707022712887103&amp;usg=AOvVaw1050QcW1Yf5qRuOQUGTlk2\">&nbsp;</a></span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=http://www.google.com./&amp;sa=D&amp;source=editors&amp;ust=1707022712887157&amp;usg=AOvVaw3eQPZ3ZZ4vgCgo63pXbmlM\">http://www.google.com</a></span><span class=\"c8\">&nbsp;is sent.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-0\" start=\"5\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">The server handles the incoming request and sends an HTTP response.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">The server processes the request and prepares the response in client requested format i.e. HTML, JSON, XML, etc &amp; adds other details like response status, etc. Once the server is ready with the response, it will be sent back to the client over the established TCP connection.</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-0\" start=\"6\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Browser’s</span><span class=\"c11\">&nbsp;</span><span class=\"c30 c2\">Receiving and Parsing the Response and then Rendering and Displaying Content:</span></li></ol>",
                "<ol class=\"c10 lst-kix_fnegvve9y3vo-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c11\">Once the client receives the response from the server, the browser checks the</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&amp;sa=D&amp;source=editors&amp;ust=1707022712887486&amp;usg=AOvVaw123ZbokwWKIY6z3A35nmdW\">&nbsp;</a></span><span class=\"c50 c2 c37\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&amp;sa=D&amp;source=editors&amp;ust=1707022712887566&amp;usg=AOvVaw2FwjwktzgPtoOAYusOS-KD\">response status code</a></span><span class=\"c8\">&nbsp;i.e 2xx(success response), 3xx(redirecting request),4xx(client error) 5xx(server error), etc.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">The browser will try to translate the response based on the received response type. In our case it is HTML, so it will display the html page. If the response is cacheable is will store the response in the browser cache.</span></li></ol>"
            ],
            "Crawls, indexing and its ways": [
                "<p class=\"c1\"><span class=\"c8\">Crawlers, also known as spiders or bots, are automated programs used by search engines to discover and index web pages on the internet. The process of crawling involves systematically visiting web pages, following links, and extracting information for further processing.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Crawlers follow these steps</span></p>",
                "<ol class=\"c10 lst-kix_d8k90rlgs5c8-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Discovery:</span><span class=\"c8\">&nbsp;Crawlers start by visiting a list of known URLs, often provided by a sitemap or seed list</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Fetching:</span><span class=\"c8\">&nbsp;After getting a URL, the crawler sends a request to the server hosting the page to retrieve its content. </span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Parsing:</span><span class=\"c8\">&nbsp;Once the content is retrieved, the crawler analyses the HTML, CSS, and JavaScript to extract relevant information like text content, links, metadata, and more.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Indexing:</span><span class=\"c8\">&nbsp;The extracted information is then processed and stored in a searchable index. This index is like a database that allows search engines to quickly retrieve relevant results when a user performs a search.</span></li></ol>",
                "<p class=\"c1\"><span class=\"c30 c2\">Ways in which a page can be indexed:</span></p>",
                "<ol class=\"c10 lst-kix_fb02jz9vkdlq-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">HTML Content:</span><span class=\"c8\">&nbsp;The main textual content of a page, including headings, paragraphs, lists, and other HTML elements, is crucial for indexing. Crawlers rely on this content to understand the topic and relevance of a page.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Meta Tags</span><span class=\"c8\">: Meta tags, such as the &lt;title&gt;, &lt;meta description&gt;, and other meta tags in the &lt;head&gt; section of a page, provide additional information about the content.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Links:</span><span class=\"c8\">&nbsp;Crawlers follow links from one page to another. They use this information to discover new pages and establish relationships between different pages on the internet. </span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Images and Multimedia:</span><span class=\"c8\">&nbsp;Crawlers can also index images and multimedia content. This is done by analysing attributes like alt text, captions, and surrounding text.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Structured Data Markup:</span><span class=\"c8\">&nbsp;This involves using special tags (e.g Schema.org markup) to provide structured information about specific elements on a page, such as reviews, events, recipes, etc.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">XML Sitemaps:</span><span class=\"c8\">&nbsp;Websites can provide XML sitemaps to search engines. These sitemaps list all the URLs that the website owner wants the search engine to crawl and index.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Robots.txt and Meta Robots Tags:</span><span class=\"c11\">&nbsp;These are used to instruct crawlers about which pages should not be crawled or indexed.</span></li></ol>"
            ],
            "How can we do 200 network request (download 200 images) in a web page": [
                "<p class=\"c1\"><span class=\"c8\">We can batch them in chunks (suppose the size of the chunk/no of items in a chunk is 10) and process chunks one-by-one, and in a chunk all items will run concurrently / parallelly. So at any moment, at most the size of the chunk network requests are going on.</span></p>",
                "<ol class=\"c10 lst-kix_1rj8c99rc5n3-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">If we have </span><span class=\"c2\">domain sharding</span><span class=\"c8\">&nbsp;implemented then we can decide any size for a chunk.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">No domain sharding: </span><span class=\"c11\">then we can have maximum of 6 items in a chunk, so the total no of chunks will be 200/6 = 34</span></li></ol>"
            ],
            "Webhook": [
                "<p class=\"c1\"><span class=\"c8\">A webhook is a mechanism that allows one system (or application) to send real-time data to another system as soon as a specific event occurs. Webhooks are commonly used in web development and integration scenarios to enable communication between different applications or services. Webhooks operate asynchronously, allowing near-real-time communication between systems. The sender does not wait for a response from the receiver, making it a lightweight and efficient way to notify other systems about events.</span></p>"
            ],
            "Difference between Server Sent Events(SSE) and Webhook": [
                "<ul class=\"c10 lst-kix_dbx7lnnpjgzp-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Webhook</span><span class=\"c8\">: Notifies you about specific events and sends detailed information when those events occur.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">SSE</span><span class=\"c8\">: Provides a continuous stream of updates from the server in real-time, keeping the application constantly updated without manual requests.</span></li></ul>",
                "<p class=\"c1\"><span class=\"c11\">In summary, Webhooks are event-driven notifications triggered by specific events, whereas SSE is a continuous stream of updates sent from the server to the client without the need for the client to repeatedly request information.</span></p>"
            ],
            "What is pub/sub (publish/subscribe)": [
                "<p class=\"c1\"><span class=\"c8\">Imagine you have a bunch of friends who love getting updates about your life. Instead of calling each friend individually every time you have something new to share, you decide to put a notice on a community board. Now, whenever you have something interesting to tell, you just put a note on that board.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Your friends know to check the board regularly. When they see a new note, they read it and get the latest news about you. They don't have to wait for your call or be available at the same time you're sharing news.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">In this analogy:</span></p>",
                "<ul class=\"c10 lst-kix_xdotddw317s1-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">You</span><span class=\"c11\">&nbsp;are the </span><span class=\"c2\">publisher</span><span class=\"c8\">.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">The community board</span><span class=\"c11\">&nbsp;is the message broker (the </span><span class=\"c2\">'pub-sub' system</span><span class=\"c8\">).</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Your friends</span><span class=\"c11\">&nbsp;are the </span><span class=\"c2\">subscribers</span><span class=\"c8\">.</span></li></ul>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">Pub/Sub is a messaging system used to facilitate communication between different services of a software.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">It is an asynchronous and scalable messaging system that decouples services producing messages from services consuming those messages. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">Instead of communicating directly, publishers send their messages to a central broker (pub-sub system). This broker is responsible for managing the subscriptions and distributing the messages to the appropriate subscribers.</span></p>"
            ],
            "What is CI/CD": [
                "<p class=\"c1\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 718.11px; height: 433.33px;\"><img alt=\"\" src=\"images/image10.png\" style=\"width: 718.11px; height: 433.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">Code Commit -&gt; build -&gt; test -&gt; deploy</span></p>",
                "<p class=\"c1\"><span class=\"c8\">CI/CD automates the process of integrating and deploying code, leading to faster development cycles.</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">CI: Continuous Integration</span></p>",
                "<ul class=\"c10 lst-kix_cpt2h1mepz1k-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Integration of Code Changes</span><span class=\"c8\">: CI involves automatically integrating code changes from multiple contributors into a shared repository multiple times a day.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Automated Testing</span><span class=\"c8\">: After code is integrated, automated tests are run to ensure that the new code doesn't break existing functionality.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Version Control</span><span class=\"c11\">: It heavily relies on version control systems like Git to manage code changes.</span></li></ul>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">CD: Continuous Deployment/Delivery</span></p>",
                "<ul class=\"c10 lst-kix_pdokhtynwt8a-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Continuous Deployment</span><span class=\"c8\">: This is the practice of automatically deploying every code change that passes automated tests to a production environment. This means that every time a new piece of code is added, it's automatically deployed for users.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Continuous Delivery</span><span class=\"c11\">: This is similar to continuous deployment, but with an additional step. In continuous delivery, the code is automatically pushed to a staging or pre-production environment. It's then up to the team to decide when and if to deploy it to production.</span></li></ul>",
                "<p class=\"c1\"><span class=\"c11\">E.g. Jenkins, github actions, gitlab ci/cd</span></p>"
            ],
            "What is load balancer": [
                "<p class=\"c1\"><span class=\"c8\">A load balancer is a networking device or software application used in distributing incoming network traffic across multiple servers or computing resources in a way that optimises resource utilisation, ensures high availability, and enhances the performance of applications or websites.</span></p>",
                "<ul class=\"c10 lst-kix_dvqd4ygf8wmk-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Client Sends a Request: </span><span class=\"c8\">A client (such as a web browser) sends a request to access a website or application. This request is directed towards the load balancer.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Load Balancer Receives the Request: </span><span class=\"c8\">The load balancer is the first point of contact for the client. It intercepts the request before it reaches the backend servers.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Load Balancer Evaluates Servers: </span><span class=\"c8\">The load balancer maintains a pool of backend servers (also known as nodes or instances) that are capable of handling the incoming requests. These servers could be physical machines, virtual machines, or containers.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Load Balancer Chooses a Server: </span><span class=\"c8\">The load balancer uses a variety of algorithms to determine which server should handle the request. Common algorithms include:</span></li></ul>",
                "<ul class=\"c10 lst-kix_dvqd4ygf8wmk-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Round Robin: Requests are distributed equally among servers in a cyclic manner.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">Least Connections: The request is sent to the server with the fewest active connections.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">IP Hash: The client's IP address is used to determine which server should handle the request. This ensures that a particular client's requests are consistently sent to the same server.</span></li></ul>",
                "<ul class=\"c10 lst-kix_dvqd4ygf8wmk-0\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Load Balancer Forwards the Request to the selected server:</span></li><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Server Processes the Request:</span></li><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">Server Sends Response to Load Balancer:</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Load Balancer Sends Response to Client: </span><span class=\"c11\">The load balancer, acting as a reverse proxy, receives the response from the server. It then forwards the response to the client that initially made the request.</span></li></ul>"
            ],
            "What is domain sharding": [
                "<p class=\"c1\"><span class=\"c8\">There is a limit of the maximum number of concurrent requests a browser can make to a single origin.</span></p>",
                "<ol class=\"c10 lst-kix_smq31i7jmisn-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Chrome, Firefox, Edge: 6</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Safari: 10</span></li></ol>",
                "<p class=\"c1\"><span class=\"c8\">So to overcome this, domain sharding come into picture</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Domain sharding is a technique used to overcome the limitations on the number of concurrent connections a web browser can make to a single domain. It involves spreading resources (like images, scripts, stylesheets, etc.) across multiple subdomains of the main domain.</span></p>"
            ],
            "What is CDN": [
                "<p class=\"c13\"><span class=\"c8\">CDN stands for Content Delivery Network. It is a distributed network of servers present at multiple locations which is responsible for serving web resources (like images, videos, scripts, stylesheets, etc.) to users in a faster and more reliable manner. e.g. Akamai Technologies:, cloudflare, Amazon CloudFront, Google Cloud CDN, etc.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here's how a CDN works:</span></p>",
                "<ul class=\"c10 lst-kix_faiwqfc1xskd-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Content Replication: </span><span class=\"c8\">The content of a website (e.g., images, videos, scripts) is replicated and stored on multiple servers across the CDN's network.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Edge Servers</span><span class=\"c8\">: These replicated servers are known as edge servers. They are strategically placed at different geographic locations, closer to the end-users.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">User Requests</span><span class=\"c8\">: When a user requests content from a website, the CDN automatically redirects the request to the nearest edge server that has a copy of the content.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Faster Delivery</span><span class=\"c8\">: Since the content is served from a server closer to the user, it reduces the distance the data has to travel, resulting in faster load times.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Load Balancing and Failover</span><span class=\"c8\">: CDNs use load balancing algorithms to distribute the requests evenly among edge servers. If one server fails, the requests are automatically redirected to another available server.<br></span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Scalable Video Streaming:</span><span class=\"c8\">&nbsp;CDNs equipped with video delivery capabilities can efficiently stream video content to users, adjusting quality based on their network conditions.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Support for Secure Connections (HTTPS):</span><span class=\"c8\">&nbsp;CDNs can help manage SSL/TLS certificates and provide secure connections for websites, making it easier to implement and maintain HTTPS.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Content Optimization:</span><span class=\"c8\">&nbsp;CDNs often offer features like image optimization, minification of scripts and stylesheets, and GZIP compression, which can further improve website performance.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Content Caching and Persistence:</span><span class=\"c8\">&nbsp;CDNs cache static content like images, scripts, and stylesheets. This reduces the need for repeated requests to the origin server, further improving load times.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Service Continuity:</span><span class=\"c11\">&nbsp;Even if the origin server experiences downtime, a CDN can continue to serve cached content, providing a fallback option for users.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Security</span><span class=\"c8\">: CDNs often provide security features like DDoS protection, XSS, SQL injection, CSP, SSL encryption, and web application firewalls.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Domain Sharding: &nbsp;</span><span class=\"c11\">CDNs often have the capability to distribute content across multiple subdomains. The CDN provider sets up the necessary subdomains (e.g. cdn1.example.com, cdn2.example.com) on their infra. When content is uploaded to the CDN, it can automatically distribute the files across its network of subdomains. This is sometimes done automatically by the CDN, but in some cases, developers may need to configure this behaviour.</span></li></ul>"
            ],
            "Middleware": [
                "<p class=\"c1\"><span class=\"c11\">Middleware is a software component that acts as a bridge between different parts of a software application. It enables communication, data processing, and interactions between different modules or components in a system.</span></p>"
            ],
            "three-way handshake of TCP": [
                "<p class=\"c13\"><span class=\"c8\">TCP (Transmission Control Protocol), is a protocol used by devices/systems to communicate over a network.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">The three-way handshake is a fundamental process in the establishment of a TCP (Transmission Control Protocol) connection between two devices, typically a client (initiating device) and a server (responding device). This process ensures that both devices are ready to send and receive data in a reliable manner.</span></p>",
                "<ol class=\"c10 lst-kix_tkt5g8ptxuf2-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c2\">SYN (Synchronise) - Client to Server:</span></li></ol>",
                "<ol class=\"c10 lst-kix_tkt5g8ptxuf2-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">The client sends a TCP segment with the SYN flag (SYN = 1, ACK = 0) set to the server.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">This segment indicates that the client wants to establish a connection and is ready to synchronise sequence numbers.</span></li></ol>",
                "<ol class=\"c10 lst-kix_tkt5g8ptxuf2-0\" start=\"2\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">SYN-ACK (Synchronise, Acknowledge) - Server to Client:</span></li></ol>",
                "<ol class=\"c10 lst-kix_tkt5g8ptxuf2-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">The server receives the SYN segment from the client and acknowledges it by sending a TCP segment with both the SYN and ACK flags set (SYN = 1, ACK = 1).</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">The server also generates its own initial sequence number (ISN) for this connection.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">This segment confirms the client's request to establish a connection and also synchronises the server's sequence numbers.</span></li></ol>",
                "<ol class=\"c10 lst-kix_tkt5g8ptxuf2-0\" start=\"3\"><li class=\"c16 li-bullet-0\"><span class=\"c30 c2\">ACK (Acknowledge) - Client to Server:</span></li></ol>",
                "<ol class=\"c10 lst-kix_tkt5g8ptxuf2-1 start\" start=\"1\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Upon receiving the SYN-ACK segment from the server, the client acknowledges it by sending a TCP segment with the ACK flag set and its own initial sequence number (ISN) incremented by one.</span></li><li class=\"c18 li-bullet-0\"><span class=\"c8\">This segment acknowledges the server's readiness to establish the connection and confirms synchronisation of sequence numbers.</span></li></ol>"
            ],
            "Browser Same Origin Policy": [
                "<p class=\"c13\"><span class=\"c8\">A security mechanism that restricts how a resource loaded by one origin can interact with a resource from another origin.</span></p>"
            ],
            "CORS": [
                "<p class=\"c13\"><span class=\"c8\">CORS (Cross-Origin Resource Sharing) is a mechanism by which data or any other resource from different origins (different domain/subdomain/port/protocol) could be shared intentionally.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">A </span><span class=\"c2\">preflight request</span><span class=\"c8\">&nbsp;is a specific type of HTTP request that is sent by a web browser to a server as part of the Cross-Origin Resource Sharing (CORS) mechanism. </span></p>",
                "<ol class=\"c10 lst-kix_sy1c8pxuxjs8-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">do preflight/options request, in order to check that the server will permit the actual request. In that preflight request, the browser sends headers that indicate the HTTP method and headers of the actual request.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">responding to preflight, the server sends back additional headers(would contain the Allowed methods, Allowed origin details about the target site), which is then together with the original header used in the actual request.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">After deciding whether the target site could return the requested information based on this response, the actual request is sent by the browser.</span></li></ol>"
            ],
            "HTTP Methods": [
                "<ul class=\"c10 lst-kix_heddeq49wuws-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">GET</span><span class=\"c8\">:</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">The GET method is used to retrieve data from the server. It is a safe method, meaning it should not have any side effects on the server's state.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">GET requests can be cached, bookmarked, and shared, as they do not change the server's state.</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">POST</span><span class=\"c8\">:</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">The POST method is used to submit data to be processed to a specified resource.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c11\">It is </span><span class=\"c2\">not idempotent</span><span class=\"c8\">, meaning multiple identical POST requests may have different effects on the server (e.g., creating multiple records).</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">PUT</span><span class=\"c8\">:</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">The PUT method is used to update a resource on the server or create it if it doesn't exist.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c11\">It is </span><span class=\"c2\">idempotent</span><span class=\"c8\">, meaning multiple identical PUT requests should have the same effect on the server as a single request.</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">DELETE</span><span class=\"c8\">:</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">The DELETE method is used to delete a specified resource.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c11\">It is </span><span class=\"c2\">idempotent</span><span class=\"c8\">, meaning multiple identical DELETE requests should have the same effect on the server as a single request.</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">HEAD</span><span class=\"c8\">:</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">The HEAD method is similar to a GET request, but it only retrieves the headers of the response without the actual content.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It is often used to check the status of a resource without requesting the entire content.</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-0\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">OPTIONS</span><span class=\"c8\">:</span></li></ul>",
                "<ul class=\"c10 lst-kix_heddeq49wuws-1 start\"><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">The OPTIONS method is used to describe the communication options for the target resource.</span></li><li class=\"c1 c20 c40 li-bullet-0\"><span class=\"c8\">It can be used to determine which HTTP methods and headers are allowed by a server for a particular resource.</span></li></ul>"
            ],
            "http 1/2 and httpS": [
                "<p class=\"c1\"><span class=\"c2\">Http 1.1:</span><span class=\"c8\">&nbsp;HTTP/1.1 processes requests and responses sequentially. This means that if a browser wants to load multiple resources (like HTML, CSS, JavaScript, images) from a server, it sends one request at a time and waits for each response before sending the next request.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Http 2:</span><span class=\"c8\">&nbsp;One of the biggest improvements in HTTP/2 is the ability to send multiple requests and receive multiple responses over a single TCP connection. This eliminates the problem of head-of-line blocking.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c30 c2\"></span></p>",
                "<p class=\"c13\"><span class=\"c2\">HTTP</span><span class=\"c8\">&nbsp;- A protocol used by clients (e.g. web browsers) to request resources from servers (e.g. web servers).</span></p>",
                "<p class=\"c13\"><span class=\"c2\">HTTPS</span><span class=\"c8\">&nbsp;- A way of encrypting HTTP. It basically wraps HTTP messages up in an encrypted format using SSL/TLS. </span></p>"
            ],
            "XMLHttpRequest (XHR)": [
                "<p class=\"c13\"><span class=\"c8\">XHR objects are used to interact with servers. Using XHR we can retrieve data from a URL without having to do a full page refresh. This enables a web page to update just part of a page without disrupting what the user is doing.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">XMLHttpRequest is used heavily in</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX&amp;sa=D&amp;source=editors&amp;ust=1707022712895567&amp;usg=AOvVaw3c-EJiKNZ_IS9EmjT2WO0-\">&nbsp;</a></span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX&amp;sa=D&amp;source=editors&amp;ust=1707022712895652&amp;usg=AOvVaw11g90ORoSmam0hAZZEjhMF\">AJAX</a></span><span class=\"c8\">&nbsp;programming.</span></p>"
            ],
            "AJAX (Asynchronous JavaScript and XML)": [
                "<p class=\"c13\"><span class=\"c8\">using AJAX web applications can do API calls and are able to make quick, incremental updates to the user interface without reloading the entire browser page. This makes the application faster and more responsive to user actions.</span></p>"
            ],
            "JWT (JSON Web Token)": [
                "<p class=\"c1\"><span class=\"c8\">JWT is a standard for securely transmitting information between parties as a JSON object. It is commonly used for authentication in web applications. In simple terms, a JWT is like a secret message in a special envelope that only certain people can open because they have the right key. It's a secure way to share information over the internet.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here's how authentication works with JWT:</span></p>",
                "<ul class=\"c10 lst-kix_ug74jzuu7bj3-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">User Authentication: </span><span class=\"c8\">When a user logs in to a web application, the server checks the provided credentials (e.g. username and password) against the stored user data (usually in a database).</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Token Creation: </span><span class=\"c8\">If the provided credentials are valid, the server generates a JWT. This JWT is composed of three parts: a header, a payload, and a signature. The header typically specifies the type of token and the signing algorithm, while the payload contains claims (pieces of information) about the user.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Token Signing: </span><span class=\"c8\">The server takes the header, payload, and a secret key and signs the JWT. This creates the signature, which ensures that the token has not been tampered with.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Token Issuance: </span><span class=\"c8\">The server sends the JWT back to the client as part of the response to the login request. The client now has a token that represents the user's authentication status.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Token Storage: </span><span class=\"c8\">The client typically stores the JWT in the browser's local storage or a cookie. This allows the client to include the token in subsequent requests to the server.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Token Verification: </span><span class=\"c8\">When the client makes a request to a protected resource (e.g., an API endpoint), it includes the JWT in the request headers. The server receives the token.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Token Decoding: </span><span class=\"c8\">The server first verifies the token's signature using the secret key. If the signature is valid, the server proceeds to decode the JWT to access the information in the payload.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Claims Verification: </span><span class=\"c8\">The server checks the claims in the payload to ensure they meet the required criteria. For example, it may check the expiration time (exp claim) to ensure the token is still valid.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Access Granted or Denied: </span><span class=\"c8\">If the token is valid and the claims pass verification, the server grants access to the requested resource. If not, it denies access and may send an error response.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Token Refresh (Optional): </span><span class=\"c8\">If the JWT has an expiration time (exp claim), the client can request a new token before the current one expires. This can be done using a refresh token or by re-authenticating.<br></span></li></ul>",
                "<p class=\"c1\"><span class=\"c8\">In the digital world, JWTs are used for authentication. After we log in to a website, the server sends a JWT. This JWT contains our user ID (payload) and is locked with a secret key (signature). In our subsequent requests to the server, this JWT is included in the request. The server can then read the user ID from the JWT and know who we are without asking for our password every time.</span></p>"
            ],
            "Cross Site Scripting (XSS)": [
                "<p class=\"c13\"><span class=\"c8\">Cross Site Scripting (XSS) is a vulnerability in a web application that allows a third party to execute a script in the user’s browser on behalf of the web application. It allows the attacker to compromise the interactions that users have with a vulnerable app. It usually happens because the website does not filter malicious code, it is mixed with normal code, and the browser has no way to distinguish which scripts are trustworthy, which leads to the execution of malicious code.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Three types of XSS attack:</span></p>",
                "<ol class=\"c10 lst-kix_fv491rpi2s0x-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Reflected XSS</span><span class=\"c8\">: It arises when an application receives data in an HTTP request and includes that data within the immediate response in an unsafe way.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">DOM XSS: </span><span class=\"c8\">DOM-based XSS arises when an application contains some client-side JavaScript that processes data from an untrusted source in an unsafe way, usually by writing the data back to the DOM.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Stored XSS: </span><span class=\"c8\">Stored XSS (also known as persistent or second-order XSS) arises when an application receives data from an untrusted source and includes that data within its later HTTP responses in an unsafe way.</span></li></ol>",
                "<p class=\"c1\"><span class=\"c8\">Preventing XSS vulnerabilities is likely to involve a combination of the following measures:</span></p>",
                "<ul class=\"c10 lst-kix_tdg2iwvnfb18-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Filter input on arrival</span><span class=\"c8\">: At the point where user input is received, filter as strictly as possible based on what is expected or valid input.</span></li></ul>",
                "<ul class=\"c10 lst-kix_tdg2iwvnfb18-1 start\"><li class=\"c18 li-bullet-0\"><span class=\"c8\">Escape HTML Entities<br>function escapeHTML(input) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return input.replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;')<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.replace(/&amp;/g, '&amp;amp;').replace(/\"/g, '&amp;quot;').replace(/'/g, '&amp;#39;');<br>}</span></li></ul>",
                "<ul class=\"c10 lst-kix_tdg2iwvnfb18-0\"><li class=\"c16 li-bullet-0\"><span class=\"c2\">Encode data on output:</span><span class=\"c8\">&nbsp;At the point where user-controllable data is output in HTTP responses, encode the output to prevent it from being interpreted as active content. Depending on the output context, this might require applying combinations of HTML, URL, JavaScript, and CSS encoding.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Use appropriate response headers:</span><span class=\"c8\">&nbsp;To prevent XSS in HTTP responses that aren't intended to contain any HTML or JavaScript, you can use the Content-Type and X-Content-Type-Options headers to ensure that browsers interpret the responses in the way you intend. </span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">Content Security Policy:</span><span class=\"c11\">&nbsp;As a last line of defence, you can use Content Security Policy (CSP) to reduce the severity of any XSS vulnerabilities that still occur. To enable CSP, you need to configure your web server to return the</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&amp;sa=D&amp;source=editors&amp;ust=1707022712897359&amp;usg=AOvVaw1E2fvngJ-rz0qVhd7R2LWh\">&nbsp;</a></span><span class=\"c84 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&amp;sa=D&amp;source=editors&amp;ust=1707022712897435&amp;usg=AOvVaw0ol0OA88kWCExlQsgSrCpB\">Content-Security-Policy</a></span><span class=\"c11\">&nbsp;HTTP header. ref:</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&amp;sa=D&amp;source=editors&amp;ust=1707022712897528&amp;usg=AOvVaw1J4hYkZ0FpKgPGNGmD6Fs9\">&nbsp;</a></span><span class=\"c11 c84\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&amp;sa=D&amp;source=editors&amp;ust=1707022712897605&amp;usg=AOvVaw3HnxqYvlBW-GlcRddkVwyn\">https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP</a></span></li></ul>"
            ],
            "Content Security Policy": [
                "<p class=\"c13\"><span class=\"c8\">CSP allows us to define origins from where resources are allowed to be loaded and executed in our web page.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">Content Security Policy (CSP) is a security feature implemented by web browsers to mitigate the risks of cross-site scripting (XSS) attacks, data injection, and other code injection attacks that can compromise the security of a web app. </span></p>",
                "<p class=\"c13\"><span class=\"c11\">To enable CSP, we need to configure our web server to return the</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&amp;sa=D&amp;source=editors&amp;ust=1707022712897950&amp;usg=AOvVaw3i1PhxYsRUtpq1YWulq5JL\">&nbsp;</a></span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&amp;sa=D&amp;source=editors&amp;ust=1707022712898021&amp;usg=AOvVaw0NAkyWGw4tm4bOkbkN7Ymq\">Content-Security-Policy</a></span><span class=\"c8\">&nbsp;HTTP header.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">Alternatively, the</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&amp;sa=D&amp;source=editors&amp;ust=1707022712898132&amp;usg=AOvVaw3fzIkR9586VYgcEb2uHR_T\">&nbsp;</a></span><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&amp;sa=D&amp;source=editors&amp;ust=1707022712898197&amp;usg=AOvVaw2UZaTS5-2zQL7uxJ3Fu95u\">&lt;meta&gt;</a></span><span class=\"c8\">&nbsp;element can be used to configure a policy, for example:</span></p>",
                "<p class=\"c13\"><span class=\"c8\">&lt;meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; img-src https://*; child-src 'none';\" &nbsp;/&gt;</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">Directives</span></p>",
                "<ul class=\"c10 lst-kix_ion5x53jleda-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">default-src</span><span class=\"c8\">: Specifies the default source for resources if no other directive is matched.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">script-src</span><span class=\"c8\">: Controls the sources from which scripts can be loaded.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">style-src</span><span class=\"c8\">: Controls the sources from which styles can be loaded.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">img-src</span><span class=\"c8\">: Specifies allowed sources for images.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">font-src</span><span class=\"c8\">: Specifies allowed sources for fonts.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">connect-src</span><span class=\"c8\">: Defines the allowed sources for network requests like AJAX and WebSocket.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">frame-src</span><span class=\"c8\">: Specifies the origins from which frames can be loaded.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">media-src</span><span class=\"c11\">: Defines sources for media elements like </span><span class=\"c2\">&lt;audio&gt;</span><span class=\"c11\">&nbsp;and </span><span class=\"c2\">&lt;video&gt;</span><span class=\"c8\">.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c2\">object-src</span><span class=\"c8\">: Specifies sources for objects such as Flash content.</span></li></ul>"
            ],
            "Cross Site Request Forgery(CSRF)": [
                "<p class=\"c1\"><span class=\"c8\">It is a type of security vulnerability that occurs when a malicious website tricks a user's browser into making an unintended request to a different site on which the user is authenticated. This can lead to actions being taken on the user's behalf without their consent. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g. </span></p>",
                "<ol class=\"c10 lst-kix_xhc0hsvuvsfv-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Let's say you are logged into your online banking account in one browser tab.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">While still logged in, you visit a malicious website in another tab.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">The malicious website contains a hidden form that submits a request to your bank's website, using your authenticated session without your knowledge.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">This request might perform actions like transferring funds or changing account settings, since it's being made in the context of your authenticated session.</span></li></ol>",
                "<p class=\"c1\"><span class=\"c8\">To prevent CSRF attacks, web applications can implement measures like:</span></p>",
                "<ol class=\"c10 lst-kix_oqtdr7lqjdq-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">CSRF Tokens</span><span class=\"c8\">: Generating a unique token for each user session and requiring this token to be submitted with each request. This token is checked on the server side to verify the legitimacy of the request.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Same-Site Cookies</span><span class=\"c8\">: Setting cookies with the SameSite attribute to restrict when they are sent along with a request. This helps prevent cookies from being sent in cross-origin requests.</span></li></ol>"
            ],
            "Man In The Middle Attack (MITM)": [
                "<p class=\"c13\"><span class=\"c8\">MITM refers to the fact that the attacker establishes a unique connection with both ends of the communication, and exchanges the data they receive, so that both ends of the communication think they are passing through a private connection and a direct conversation with each other, but in fact the entire conversation is completely controlled by the attacker. In a MITM attack, the attacker can intercept the two-way communication and insert new content.</span></p>"
            ],
            "Subresource Integrity (SRI)": [
                "<p class=\"c1\"><span class=\"c11\">Subresource Integrity (SRI) is a security feature that enables browsers to verify that resources they fetch (for example, from a </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://developer.mozilla.org/en-US/docs/Glossary/CDN&amp;sa=D&amp;source=editors&amp;ust=1707022712899656&amp;usg=AOvVaw2olzbBCrMiDK2a90aq1BtV\">CDN</a></span><span class=\"c8\">) are delivered without unexpected manipulation. It works by allowing you to provide a cryptographic hash that a fetched resource must match.</span></p>"
            ],
            "Smart Contracts": [
                "<p class=\"c1\"><span class=\"c8\">Smart contracts are self-executing contracts with the terms and conditions written directly into code. They run on blockchain platforms, ensuring that the terms of the contract are automatically enforced, executed, and recorded without the need for intermediaries like banks or legal systems (external 3rd party). Smart contracts are often used to create and manage tokens or cryptocurrencies. </span></p>",
                "<p class=\"c1\"><span class=\"c2\">Decentralised</span><span class=\"c8\">: Smart contracts operate on blockchain networks, which are decentralised and distributed across many nodes (computers). This decentralisation ensures that no single entity has control over the contract.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Transparency</span><span class=\"c8\">: All transactions and operations performed by a smart contract are recorded on the blockchain and are transparent and publicly viewable.</span></p>"
            ],
            "Digital Signature": [
                "<p class=\"c13\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 660.00px; height: 283.00px;\"><img alt=\"\" src=\"images/image6.jpg\" style=\"width: 660.00px; height: 283.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>",
                "<p class=\"c13 c4\"><span class=\"c30 c31\"></span></p>"
            ]
        },
        "TypeScript": {
            "What is TypeScript?": [
                "<p class=\"c1\"><span class=\"c8\">TypeScript is a syntactic superset of JavaScript which adds static typing. This basically means that TypeScript adds syntax on top of JavaScript, allowing developers to add types. TypeScript allows specifying the types of data being passed around within the code, and has the ability to report errors when the types don't match.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Compiling TypeScript:</span><span class=\"c8\">&nbsp;tsc yourFileName.ts -&gt; it compile the TS file into a JS file</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Running the JavaScript:</span><span class=\"c8\">&nbsp;node yourFileName.js</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Using TypeScript with a Project:</span><span class=\"c11\">&nbsp;For larger projects, it's common to use a </span><span class=\"c2 c37\">tsconfig.json</span><span class=\"c8\">&nbsp;file to configure TypeScript settings. This file specifies compiler options, file globs, and other settings for the project.</span></p>"
            ],
            "Implicit & Explicit Typing": [
                "<p class=\"c1\"><span class=\"c2\">Implicit Typing:</span><span class=\"c8\">&nbsp;TypeScript will \"guess\" the type, based on the assigned value. </span></p>",
                "<p class=\"c1\"><span class=\"c11\">We can disable implicit variable type assignment by enabling the compiler option: </span><span class=\"c2 c37 c53\">noImplicitAny.</span></p>",
                "<p class=\"c1\"><span class=\"c11\">We can enable 'undefined' &amp; 'null' types to be accounted for by enabling the compiler option:</span><span class=\"c53 c2 c37\">&nbsp;strictNullChecks</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myString = \"Hello\"; // TypeScript infers the type as string</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myNumber = 42; // TypeScript infers the type as number</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function add(x, y) { </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">return x + y; // TypeScript infers x and y as any </span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c2\">Explicit Typing:</span><span class=\"c8\">&nbsp;Explicit typing involves explicitly stating the type of a variable, function parameter, return type, or any other part of your code where you want to be specific about the type.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myString: string = \"Hello\";</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myNumber: number = 42;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function add(x: number, y: number): number { </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">return x + y;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>"
            ],
            "typeScript Interfaces": [
                "<p class=\"c1\"><span class=\"c8\">Interfaces are used to define the structure of an object. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">interface Person {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">name: string;</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">age: number;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp;}</span></p>",
                "<p class=\"c1\"><span class=\"c11\">let person: Person = { name: \"John Doe\", age: 30 };</span></p>"
            ],
            "Generics": [
                "<p class=\"c1\"><span class=\"c8\">Generics in TypeScript provide a way to create reusable components and functions that can work with a variety of data types. They allow us to write code without committing to a specific type, making our code more flexible and reusable.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Generics can be assigned default values which apply if no other value is specified or inferred.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function echo&lt;T&gt;(arg: T): T {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">return arg;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myString: string = echo(\"Hello, TypeScript!\");</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myNumber: number = echo(42);</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">interface Pair&lt;K, V&gt; {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">key: K;</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">value: V;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">} </span></p>",
                "<p class=\"c1\"><span class=\"c8\">const pair1: Pair&lt;number, string&gt; = { key: 1, value: \"first\" };</span></p>",
                "<p class=\"c1\"><span class=\"c11\">const pair2: Pair&lt;string, boolean&gt; = { key: \"second\", value: true };</span></p>"
            ],
            "any & unknown": [
                "<p class=\"c1\"><span class=\"c11\">In TypeScript, </span><span class=\"c2 c37\">any</span><span class=\"c11\">&nbsp;and </span><span class=\"c2 c37\">unknown</span><span class=\"c8\">&nbsp;are two types that represent different levels of type flexibility. They are often used in situations where the type of a value is not known at compile time or when interacting with dynamic or external data.</span></p>",
                "<p class=\"c1\"><span class=\"c11\">The </span><span class=\"c2 c37\">unknown</span><span class=\"c11\">&nbsp;type is a safer alternative to </span><span class=\"c2 c37\">any</span><span class=\"c8\">. When a value is of type unknown, typeScript expects that we will perform some kind of type-check before we try to use it.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let userInput: unknown = \"Hello\";</span></p>",
                "<p class=\"c1\"><span class=\"c8\">// 'unknown' requires a type check before use </span></p>",
                "<p class=\"c1\"><span class=\"c8\">if (typeof userInput === \"string\") { </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">let myString: string = userInput; // Valid because we checked the type</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c30 c31\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">When to use any:</span></p>",
                "<ol class=\"c10 lst-kix_5dju7xhbxmgp-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Transitioning from JS</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Interacting with Dynamic or Unstructured Data</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Working with External Libraries</span></li></ol>",
                "<p class=\"c1\"><span class=\"c8\">When to use unknown:</span></p>",
                "<ol class=\"c10 lst-kix_d5ghq7w1j1jr-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Interacting with Dynamic Data Safely</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Library or API design</span></li></ol>"
            ],
            "Utility Types": [
                "<p class=\"c1\"><span class=\"c8\">Utility types in TypeScript are a set of predefined generic types that provide commonly used functionalities to work with and manipulate types. They can help simplify and improve the readability of complex type definitions. These utility types are built into TypeScript and can be used out of the box.</span></p>",
                "<ul class=\"c10 lst-kix_tjz3i6wjbhj-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c58\">Partial</span><span class=\"c30 c31\">&lt;T&gt;: Makes all properties of a type optional.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c58\">Readonly</span><span class=\"c30 c31\">&lt;T&gt;: Marks all properties of a type as read-only.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c58\">Record</span><span class=\"c30 c31\">&lt;K, T&gt;: Creates a type with keys of type K and values of type T.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c58\">Pick</span><span class=\"c30 c31\">&lt;T, K&gt;: Creates a type with selected properties K from the original type T.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c58\">Omit</span><span class=\"c30 c31\">&lt;T, K&gt;: Creates a type with all properties of T except for the ones specified in K.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c58\">Exclude</span><span class=\"c30 c31\">&lt;T, U&gt;: Excludes types from T that are assignable to U.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c58\">Extract</span><span class=\"c30 c31\">&lt;T, U&gt;: Extracts types from T that are assignable to U.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c58\">NonNullable</span><span class=\"c30 c31\">&lt;T&gt;: Excludes null and undefined from the type T.</span></li></ul>"
            ],
            "Tuple": [
                "<p class=\"c1\"><span class=\"c11\">A tuple is a typed </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/js/js_arrays.asp&amp;sa=D&amp;source=editors&amp;ust=1707022712903798&amp;usg=AOvVaw05GggLZviltnSXkC6ZYmdV\">array</a></span><span class=\"c8\">&nbsp;with a predefined length and types for each index.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">They allow each element in the array to be of known type and also they can be of different types.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Unlike arrays, which allow elements of the same type, tuples can contain elements of different types at specific indices.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let arr: string[] = [“yo”,”bro”,”nyc”,”pik”];</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let tuple: [string, boolean, number] = [“yo bro”, false, 123];</span></p>"
            ],
            "readonly": [
                "<p class=\"c1\"><span class=\"c2 c37\">readonly</span><span class=\"c8\">&nbsp;is used to make a variable immutable. Readonly variable is there simply to be read from and not modified.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let readOnlyTuple: readonly [string, number] = [\"Hello\", 42];</span></p>",
                "<p class=\"c1\"><span class=\"c8\">readOnlyTuple[0] = \"Hi\"; // Error: Cannot assign to '0' because it is a read-only property</span></p>"
            ],
            "Type aliases": [
                "<p class=\"c1\"><span class=\"c8\">Type aliases allow us to create a custom name for a type, making it easier to refer to complex or frequently-used types. Interfaces are similar to type aliases, but they are only for object types.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">type MyString = string; </span></p>",
                "<p class=\"c1\"><span class=\"c8\">type MyNumber = number; </span></p>",
                "<p class=\"c1\"><span class=\"c8\">type Coordinate = {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">x: number;</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">y: number;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">};</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myString: MyString = \"Hello\";</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let myNumber: MyNumber = 42;</span></p>",
                "<p class=\"c1\"><span class=\"c11\">let point: Coordinate = { x: 10, y: 20 };</span></p>"
            ],
            "Union": [
                "<p class=\"c1\"><span class=\"c8\">Union types are used when a value can be of more than a single type.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">function printStatusCode(code: string | number) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; console.log(`My status code is ${code}.`)</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">printStatusCode(404);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">printStatusCode('404');</span></p>"
            ],
            "Enums": [
                "<p class=\"c1\"><span class=\"c8\">An enum represents a group of constants (unchangeable variables). It comes in two flavours, string and numeric. By default, enums will initialise the first value to 0 and add 1 to each additional value.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">enum CardinalDirections {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; North, // 0</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; East, // 1</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; South, // 2</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; West // 3</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let currentDirection = CardinalDirections.North; // 0</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">enum CardinalDirections {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; North = 'North',</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; East = \"East\",</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; South = \"South\",</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; West = \"West\"</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let currentDirection = CardinalDirections.North; // North</span></p>"
            ],
            "keyof": [
                "<p class=\"c1\"><span class=\"c11 c37\">keyof</span><span class=\"c8\">&nbsp;is a TypeScript keyword that is used to create a union type of all the keys (property names) in a given type. It allows us to extract the keys from an object or interface.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">interface Person { </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">name: string; </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">age: number; </span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">email: string;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">type PersonKeys = keyof Person; // \"name\" | \"age\" | \"email\"</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">function getProperty(obj: Person, key: PersonKeys) {</span></p>",
                "<p class=\"c1 c22\"><span class=\"c8\">return obj[key];</span></p>",
                "<p class=\"c1\"><span class=\"c8\">} </span></p>",
                "<p class=\"c1\"><span class=\"c8\">let personName = getProperty(person, \"name\"); // \"John Doe\"</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let personAge = getProperty(person, \"age\"); // 30</span></p>"
            ],
            "Definitely Typed": [
                "<p class=\"c1\"><span class=\"c8\">Definitely Typed is a community-driven repository that provides TypeScript type definitions for popular JavaScript libraries and frameworks that were originally written in JS. It enables TS developers to use these libraries in a type-safe manner.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">npm install --save-dev @types/&lt;library name&gt;</span></p>"
            ],
            "TypeScript Casting": [
                "<p class=\"c1\"><span class=\"c8\">There are times when working with types where it's necessary to override the type of a variable, such as when incorrect types are provided by a library. Casting is the process of overriding a type.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">let x: unknown = 'hello';</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log((x as string).length);</span></p>"
            ],
            "Static Method of Class": [
                "<p class=\"c1\"><span class=\"c8\">Static methods of a class can be accessed directly without creating an object of that class.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">static methods of a class are accessed, like &lt;Class Name&gt;.&lt;static function name&gt;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">instead of &lt;Object of that Class&gt;.&lt;static function name&gt;</span></p>"
            ],
            "Access Modifier": [
                "<p class=\"c1\"><span class=\"c8\">Access modifiers are keywords that specify the level of access to class members (properties and methods) and constructors. They control how these members can be accessed from outside the class.</span></p>",
                "<ul class=\"c10 lst-kix_bs929npzdjst-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Public</span><span class=\"c8\">: Accessible from anywhere. (default)</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Protected</span><span class=\"c8\">: Accessible within the class and subclasses</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Private</span><span class=\"c8\">: Accessible only within the class</span></li></ul>",
                "<p class=\"c1\"><span class=\"c30 c31\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">class Person {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public isMale: boolean = true;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; protected age: number; = 25;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; private readonly name: string;</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public constructor(name: string) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; // name cannot be changed after this initial definition, which has to be either at its declaration or in the constructor.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; this.name = name;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public getName(): string {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; return this.name;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp;public getAge(): number {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; return this.age;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">const person = new Person(\"Jane\");</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(person.isMale); // true</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(person.age); // Error, as age is protected and can only be accessed within the class and subclasses</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(person.name); // Error, as age is private and can only be accessed within the class</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(person.getName());</span></p>"
            ],
            "Prototypal vs classical inheritance": [
                "<p class=\"c1\"><span class=\"c30 c2\">Prototypal Inheritance:</span></p>",
                "<ul class=\"c10 lst-kix_2c2kcrx7904m-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">JS</span><span class=\"c8\">&nbsp;is a prototype-based lang, which means that objects can inherit properties/methods directly from other objects.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Each object in JavaScript has a prototype. When a property or method is not found on an object, JavaScript looks up the prototype chain to find it in the object's prototypes.<br>let parent = { <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: 'John', <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sayHello: function() { <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(`Hello, my name is ${this.name}`); <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>}; <br><br>// Creating a new object that inherits from 'parent' <br>let child = Object.create(parent); <br>child.name = 'Jane';<br>child.sayHello(); // This will print: \"Hello, my name is Jane\"<br></span></li></ul>",
                "<p class=\"c1\"><span class=\"c2\">Classical Inheritance: </span><span class=\"c11\">below stuffs</span></p>"
            ],
            "Inheritance: implements": [
                "<p class=\"c1\"><span class=\"c8\">Interfaces can be used to define the type a class must follow through the implements keyword.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">interface Shape {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; getArea: () =&gt; number;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">class Rectangle implements Shape {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public constructor(protected readonly width: number, protected readonly height: number) {}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public getArea(): number {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; return this.width * this.height;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">const myRect = new Rectangle(10, 20);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(myRect.getArea()); // 200</span></p>"
            ],
            "Inheritance: extends": [
                "<p class=\"c1\"><span class=\"c8\">Classes can extend each other through the extends keyword. A class can only extend one other class.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">interface Shape {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; getArea: () =&gt; number;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; </span></p>",
                "<p class=\"c1\"><span class=\"c8\">class Rectangle implements Shape {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public constructor(protected readonly width: number, protected readonly height: number) {}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public getArea(): number {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; return this.width * this.height;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; &nbsp; </span></p>",
                "<p class=\"c1\"><span class=\"c8\">class Square extends Rectangle {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public constructor(width: number) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; super(width, width);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; // getArea gets inherited from Rectangle</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">const mySq = new Square(20);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(mySq.getArea()); // 400</span></p>"
            ],
            "Override": [
                "<p class=\"c1\"><span class=\"c8\">When a class extends another class, it can replace the members of the parent class with the same name.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Newer versions of TypeScript allow explicitly marking this with the override keyword.</span></p>"
            ],
            "Abstract Classes": [
                "<p class=\"c1\"><span class=\"c8\">Abstract classes serve as a template or blueprint that defines a common structure and behaviour for a group of related classes</span></p>",
                "<p class=\"c1\"><span class=\"c11\">Classes can be written in a way that allows them to be used as a base class for other classes without having to implement all the members. This is done by using the </span><span class=\"c2 c37\">abstract</span><span class=\"c8\">&nbsp;keyword.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Abstract classes can contain abstract methods, which are methods that are declared but not implemented in the abstract class. Subclasses that inherit from an abstract class must provide concrete implementations for the abstract methods.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">abstract class Polygon {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public abstract getArea(): number;</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public toString(): string {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; return `Polygon[area=${this.getArea()}]`;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">class Rectangle extends Polygon {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public constructor(protected readonly width: number, protected readonly height: number) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; super();</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; public getArea(): number {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; &nbsp; return this.width * this.height;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; }</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">const myRect = new Rectangle(10,20);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">console.log(myRect.getArea());</span></p>"
            ],
            "TypeScript Decorator": [
                "<p class=\"c1\"><span class=\"c8\">TypeScript decorators are a way to modify or enhance the behaviour of a class or its members (properties or methods).</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Here's a breakdown of how decorators work in TypeScript:</span></p>",
                "<ol class=\"c10 lst-kix_kttz1suje64h-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Declaration</span><span class=\"c8\">: A decorator is essentially a function that is prefixed with an @ symbol and placed immediately before the declaration of a class, or its members.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Metadata Injection</span><span class=\"c8\">: Decorators are called at runtime with information about the decorated declaration. They have the ability to observe, modify, or replace the decorated declaration. </span></li></ol>",
                "<p class=\"c1\"><span class=\"c8\">Decorators are like stickers we can put on different parts of our code, like classes or its members. These stickers give instructions to our code on how to do special things with those parts.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">For example, if you have a recipe book, you might put a sticker on a recipe that says \"make it spicy.\" Then, whenever you use that recipe, you know to add some extra spice.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">In coding, decorators are like those stickers. They help customise how our code works, making it do special things in certain situations. They're like little notes that tell our code to behave in specific ways.</span></p>",
                "<p class=\"c1 c4\"><span class=\"c30 c31\"></span></p>"
            ]
        },
        "CSS": {
            "Responsive vs Adaptive Design": [
                "<p class=\"c1\"><span class=\"c11\">Responsive design is making a page automatically adjust the layout and content of a web app based on the screen size and device characteristics (using flexible grids and layouts, along with media queries in CSS) while Adaptive design involves creating multiple versions of a website or application, each optimised for specific device types or screen sizes.</span></p>"
            ],
            "CSS Position: absolute vs fixed vs relative": [
                "<ol class=\"c10 lst-kix_kjp5op37g02k-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">absolute: </span><span class=\"c11\">An element with </span><span class=\"c2\">position: absolute</span><span class=\"c8\">&nbsp;is positioned relative to its nearest non-static ancestor (an ancestor that is not position: static, i.e it can be relative, absolute, fixed). If no positioned ancestor is found, the element is positioned relative to the initial containing block (usually the viewport).</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">fixed: </span><span class=\"c11\">An element with</span><span class=\"c2\">&nbsp;position: fixed </span><span class=\"c8\">is positioned relative to the viewport (the browser window) and stays in the same place even when the page is scrolled</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">relative</span><span class=\"c8\">: It positions an element relative to its normal position on the web page. When we use position: relative; we can then use the top, right, bottom, and left properties to offset the element from its normal position.</span></li></ol>"
            ],
            "CSS Padding vs Margin": [
                "<p class=\"c1\"><span class=\"c30 c31\">css margin can be negative, but padding can’t be negative</span></p>"
            ],
            "CSS letter-spacing vs word-spacing": [
                "<p class=\"c1\"><span class=\"c11\">word-spacing is used to configure the amount of space between words, while letter-spacing is for letters.</span></p>"
            ],
            "CSS box-sizing": [
                "<p class=\"c1\"><span class=\"c8\">box-sizing is a CSS property that defines how the total width and height of an element are calculated. It determines whether the specified width and height include padding and borders or not. </span></p>",
                "<p class=\"c1\"><span class=\"c8\">The property can take two values: content-box (the default) and border-box.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Border-box:</span><span class=\"c8\">&nbsp;In the border-box model, the specified width and height include padding and border. This is particularly useful when we want to set a specific width or height for an element and include padding and border within that space.</span></p>",
                "<p class=\"c1\"><span class=\"c2\">Content-box:</span><span class=\"c8\">&nbsp;In the default content-box model, the specified width and height of an element do not include the padding and border. They only apply to the content area.</span></p>"
            ],
            "CSS clamp()": [
                "<p class=\"c1\"><span class=\"c8\">clamp(min, val, max) &nbsp;e.g. clamp(16px, calc(100vw / 12.5), 32px)</span></p>",
                "<p class=\"c1\"><span class=\"c8\">clamp() for font sizes, allows us to set a font-size that grows with the size of the viewport, but doesn't go below a minimum font-size or above a maximum font-size.</span></p>"
            ],
            "CSS Pseudo-classes": [
                "<p class=\"c13\"><span class=\"c8\">A pseudo-class is used to define a special state of an element.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">For example, it can be used to:</span></p>",
                "<ul class=\"c10 lst-kix_4nktq4w61wnz-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Style an element when a user mouses over it</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Style visited and unvisited links differently</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Style an element when it gets focus</span></li></ul>",
                "<p class=\"c13\"><span class=\"c8\">e.g. :hover, :visited, :focus, :first-child, :nth-child(n)</span></p>"
            ],
            "CSS Pseudo Elements": [
                "<p class=\"c13\"><span class=\"c8\">A CSS pseudo-element is used to style specified parts of an element.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">For example, it can be used to:</span></p>",
                "<ul class=\"c10 lst-kix_xhaojehssolp-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Style the first letter, or line, of an element</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Insert content before, or after, the content of an element</span></li></ul>",
                "<p class=\"c13\"><span class=\"c8\">e.g. ::after, ::before, ::first-letter, ::first-line, ::marker, &nbsp;::selection</span></p>",
                "<p class=\"c13\"><span class=\"c8\">~ Selects every elements that is preceded by the current element</span></p>"
            ],
            "CSS Symbols": [
                "<ul class=\"c10 lst-kix_9c4nwcz9pl3m-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">&gt; selects direct children.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">space selects descendants.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">~ selects siblings that follow.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">+ selects the immediately following sibling.</span></li></ul>"
            ],
            "CSS Box Model": [
                "<p class=\"c13\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 243.00px; height: 187.00px;\"><img alt=\"\" src=\"images/image1.jpg\" style=\"width: 243.00px; height: 187.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>"
            ],
            "CSS Flexbox vs Grid": [
                "<p class=\"c1\"><span class=\"c80 c2 c34 c89\">Grid</span></p>",
                "<ol class=\"c10 lst-kix_p8iyo97tzvek-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c7\">Grid is used to create structured layouts in web pages.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c7\">It divides the web pages into rows and columns.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c7\">It is used to handle 2 Dimensional layouts in HTML, while flexbox can handle only 1D.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c7\">It takes a basis on layout, i.e. it does not get affected by content.</span></li></ol>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">Flexbox is made for one-dimensional(1D) layouts, and the Grid is made for two-dimensional(2D) layouts.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">It means flexbox can work on either rows or columns at a time, but Grids can work on both.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">Flexbox takes a basis in the content while Grid takes a basis in the layout.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">We should consider using grid layout when: </span></p>",
                "<ul class=\"c10 lst-kix_m6o90zuf12m9-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">We have a complex design to work with and want maintainable web pages</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">We want to add gaps over the block elements</span></li></ul>",
                "<p class=\"c1\"><span class=\"c8\">We should consider using flexbox when:</span></p>",
                "<ul class=\"c10 lst-kix_6qrj7dhmv89z-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">We have a small design to work with a few rows and columns</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">We need to align the element</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">We don’t know how your content will look on the page, and you want everything to fit in.</span></li></ul>"
            ],
            "CSS Media Queries": [
                "<p class=\"c13\"><span class=\"c8\">/* On screens that are 800px or less */</span></p>",
                "<p class=\"c13\"><span class=\"c8\">@media screen and (max-width: 800px) { }</span></p>"
            ],
            "CSS Pre-Processor": [
                "<p class=\"c13\"><span class=\"c8\">CSS is primitive and incomplete. Building a function, reusing a definition or inheritance are hard to achieve. For bigger projects, or complex systems, maintenance is a very big problem. This is where CSS Preprocessors come to the rescue.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span class=\"c8\">A CSS Preprocessor is a tool used to extend the basic functionality of default vanilla CSS through its own scripting language. It helps us to use complex logical syntax like – variables, functions, mixins, code nesting, and inheritance, etc. By using CSS Preprocessors, we can seamlessly automate menial tasks, build reusable code snippets, avoid code repetition and bloating and write nested code blocks that are well organised and easy to read.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">e.g SCSS (Sassy CSS), LESS (Leaner Style Sheets), Stylus</span></p>"
            ],
            "CSS Mixins": [
                "<p class=\"c1\"><span class=\"c8\">CSS mixins are a way to group together a set of CSS declarations and reuse them throughout the stylesheet. They're similar to functions, allowing us to define a block of styles and then include or \"mix in\" those styles wherever needed.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">e.g.</span></p>",
                "<p class=\"c13 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">/* Define a mixin */</span></p>",
                "<p class=\"c1\"><span class=\"c8\">@mixin border-radius($radius) {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; -webkit-border-radius: $radius;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; -moz-border-radius: $radius;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; -ms-border-radius: $radius;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; border-radius: $radius;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c8\">/* Use the mixin */</span></p>",
                "<p class=\"c1\"><span class=\"c8\">.button {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; @include border-radius(5px);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; background-color: #3498db;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; color: #ffffff;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; padding: 10px 20px;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; border: none;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; cursor: pointer;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>",
                "<p class=\"c1\"><span class=\"c8\">.box {</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; @include border-radius(10px);</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; border: 2px solid #ccc;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">&nbsp; padding: 20px;</span></p>",
                "<p class=\"c1\"><span class=\"c8\">}</span></p>"
            ],
            "CSS BEM": [
                "<p class=\"c13\"><span class=\"c11\">The </span><span class=\"c2\">Block, Element, Modifier</span><span class=\"c11\">&nbsp;methodology(BEM) is a popular </span><span class=\"c11 c37\">naming convention</span><span class=\"c8\">&nbsp;for classes in HTML and CSS. Its goal is to help developers better understand the relationship between the HTML and CSS in a given project.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c13\"><span class=\"c53 c11 c37 c81\">/* Block component */</span></p>",
                "<p class=\"c13\"><span class=\"c8\">.btn {}</span></p>",
                "<p class=\"c13\"><span class=\"c11 c37\">/* Element that depends upon the block */</span><span class=\"c8\">&nbsp;</span></p>",
                "<p class=\"c13\"><span class=\"c8\">.btn__price {}</span></p>",
                "<p class=\"c13\"><span class=\"c53 c11 c37 c81\">/* Modifier that changes the style of the block */</span></p>",
                "<p class=\"c13\"><span class=\"c8\">.btn--orange {} </span></p>",
                "<p class=\"c13\"><span class=\"c8\">.btn--big {}</span></p>"
            ],
            "CSS @import rule": [
                "<p class=\"c13\"><span class=\"c8\">The @import rule allows us to import a style sheet into another style sheet.</span></p>",
                "<p class=\"c13\"><span class=\"c11\">The @import rule must be at the top of the document (but after any</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.w3schools.com/csSref/pr_charset_rule.asp&amp;sa=D&amp;source=editors&amp;ust=1707022712916076&amp;usg=AOvVaw3hCSIWgDQk4xxTZIlD7qpe\">&nbsp;@charset</a></span><span class=\"c8\">&nbsp;declaration).</span></p>",
                "<p class=\"c13\"><span class=\"c8\">The @import rule also supports media queries, so we can allow the import to be media-dependent.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">e.g.</span></p>",
                "<p class=\"c13\"><span class=\"c8\">@import \"navigation.css\"; &nbsp; /* Using a string */</span></p>",
                "<p class=\"c13\"><span class=\"c8\">or</span></p>",
                "<p class=\"c13\"><span class=\"c8\">@import url(\"navigation.css\"); &nbsp; /* Using a url */</span></p>",
                "<p class=\"c1 c4\"><span class=\"c30 c31\"></span></p>"
            ]
        },
        "Web Tech Trends": {
            "ES2022 (EcmaScript 2022)": [
                "<ol class=\"c10 lst-kix_kjjaekeqlgqx-0 start\" start=\"1\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">Private Class Fields: variable/function starts with # e.g #name = “aditya”</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Static Class Fields</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Top Level await: await can be used directly without having inside a async function</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Array.at() function: can be use with negative index to access element from back of the array</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Object.hasOwn() Function</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">RegExp Match Indices</span></li></ol>"
            ],
            "LightWight Frameworks": [
                "<p class=\"c23\"><span class=\"c8\">e.g. svelte, solid.js, Remix, Astro, qwik</span></p>"
            ],
            "Remix: A JS framework": [
                "<p class=\"c23\"><span class=\"c8\">almost 0KB size, very less javascript</span></p>"
            ],
            "Astro: A JS framework": [
                "<p class=\"c1\"><span class=\"c8\">Component Islands: A new web architecture for building faster websites in which component js is fetched individually from the network when needed. Components only hydrate when they scroll into view. If you don't see it, Astro won't load it.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">Zero JS, by default: No JavaScript runtime overhead to slow you down.</span></p>",
                "<p class=\"c1\"><span class=\"c8\">UI-agnostic: Supports React, Preact, Svelte, Vue, Solid, Lit and more.</span></p>"
            ],
            "qwik: A JS Framework": [
                "<p class=\"c23\"><span class=\"c8\">syntax similar to react</span></p>",
                "<p class=\"c23\"><span class=\"c8\">No hydration, auto lazy-loading</span></p>",
                "<p class=\"c23\"><span class=\"c8\">javascript get loaded when user interact with the UI</span></p>"
            ],
            "preact signal": [
                "<p class=\"c23\"><span class=\"c8\">used for state management</span></p>",
                "<p class=\"c23\"><span class=\"c8\">What makes Signals unique is that state changes automatically update components and UI in the most efficient way possible</span></p>"
            ],
            "Headless UI": [
                "<p class=\"c23\"><span class=\"c8\">When we use UI components from any library like materialUI, or any other, it comes with its own look and feel and do not match with our project’s theme, then we need to write our css overrides to make it feel as per our project’s theme.</span></p>",
                "<p class=\"c23\"><span class=\"c8\">Headless UI (from tailwind css) is build to solve this problem</span></p>",
                "<p class=\"c23\"><span class=\"c50 c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://headlessui.dev/&amp;sa=D&amp;source=editors&amp;ust=1707022712917618&amp;usg=AOvVaw0HsVlo4STTVh1wU5E_onLH\">Headless UI</a></span><span class=\"c8\">&nbsp;is a set of completely un-styled, fully accessible UI components for React and Vue</span></p>"
            ],
            "Tauri": [
                "<ul class=\"c10 lst-kix_1k7b4qw2xpjl-0 start\"><li class=\"c16 li-bullet-0\"><span class=\"c8\">Tauri is an app construction toolkit that lets you build software for all major desktop operating systems using web technologies.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">It uses native renderer (like webkit for safari on mac) instead of embedding Chromium and Node.js</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Backend binding (like to access any native feature) language is Rust</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">app setup size is smaller because it uses native renderer instead of embedding Chromium and Node.js</span></li></ul>"
            ],
            "Electron.js": [
                "<ul class=\"c10 lst-kix_1k7b4qw2xpjl-0\"><li class=\"c16 li-bullet-0\"><span class=\"c11\">Electron is a framework for building desktop applications using JavaScript, HTML, and CSS. By embedding</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.chromium.org/&amp;sa=D&amp;source=editors&amp;ust=1707022712918039&amp;usg=AOvVaw2Po8bzJTeFT15AqEQ3CCk6\">&nbsp;</a></span><span class=\"c50 c2\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://www.chromium.org/&amp;sa=D&amp;source=editors&amp;ust=1707022712918087&amp;usg=AOvVaw3PiApXGkRVrG16x5RSu4gz\">Chromium</a></span><span class=\"c11\">&nbsp;and</span><span class=\"c11\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://nodejs.org/&amp;sa=D&amp;source=editors&amp;ust=1707022712918143&amp;usg=AOvVaw1Qvsrn80PGnhslODqnQQlN\">&nbsp;</a></span><span class=\"c50 c2\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://nodejs.org/&amp;sa=D&amp;source=editors&amp;ust=1707022712918182&amp;usg=AOvVaw17q3t7rXtp_UnrQnzfWrNl\">Node.js</a></span><span class=\"c8\">&nbsp;into its binary, Electron allows you to maintain one JavaScript codebase and create cross-platform apps that work on Windows, macOS, and Linux — no native development experience required.</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">vsCode, Slack, facebook messenger uses electron</span></li><li class=\"c16 li-bullet-0\"><span class=\"c8\">Backend binding (like to access any native feature) language is Node.js</span></li></ul>"
            ],
            "Satori": [
                "<p class=\"c23\"><span class=\"c8\">Vercel rolled out an awesome tool: Satori, an engine which converts your HTML to SVG!</span></p>"
            ],
            "Workerd": [
                "<p class=\"c23\"><span class=\"c8\">new Javascript Runtime(like node.js, deno) developed by cloudflare</span></p>"
            ],
            "AI Coding Tools": [
                "<p class=\"c23\"><span class=\"c8\">e.g. Github Copilot, tabnine</span></p>"
            ],
            "Web Assembly (wasm)": [
                "<p class=\"c23\"><span class=\"c8\">Build Application for Web in languages other than JS.</span></p>",
                "<p class=\"c23 c4 c28\"><span class=\"c8\"></span></p>",
                "<p class=\"c13\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 569.70px; height: 470.52px;\"><img alt=\"\" src=\"images/image7.png\" style=\"width: 569.70px; height: 470.52px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>",
                "<p class=\"c13 c4\"><span class=\"c30 c31\"></span></p>",
                "<p class=\"c13 c4\"><span class=\"c30 c31\"></span></p>"
            ]
        },
        "Machine Coding": {
            "Area Selector\nhttps://machine-coding.mngo.in/areaSelector": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/areaSelector/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712919213&amp;usg=AOvVaw0CdqqRukhG8nqbY65I3Rl2\">https://github.com/adityasuman2025/machineCoding/blob/main/areaSelector/index.html</a></span></p>"
            ],
            "Auto Complete\nhttps://machine-coding.mngo.in/autoComplete": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/autoComplete/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712919491&amp;usg=AOvVaw1zNNspdp0XzJFIV0efKO3t\">https://github.com/adityasuman2025/machineCoding/blob/main/autoComplete/index.html</a></span></p>"
            ],
            "Basic Calculator\nhttps://machine-coding.mngo.in/basicCalculator": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/basicCalculator/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712919756&amp;usg=AOvVaw2k1Mzezk-bD0ucocj_G57P\">https://github.com/adityasuman2025/machineCoding/blob/main/basicCalculator/index.html</a></span></p>"
            ],
            "Calendar\nhttps://machine-coding.mngo.in/calendar": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/calendar/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712920021&amp;usg=AOvVaw3nximS10owKy3B2cMkRW0H\">https://github.com/adityasuman2025/machineCoding/blob/main/calendar/index.html</a></span></p>"
            ],
            "Canvas\nhttps://machine-coding.mngo.in/canvas": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/canvas/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712920305&amp;usg=AOvVaw3iR2RoKCbatlqh0JDws37g\">https://github.com/adityasuman2025/machineCoding/blob/main/canvas/index.html</a></span></p>"
            ],
            "Carousel\nhttps://machine-coding.mngo.in/carousel": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/carousel/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712920584&amp;usg=AOvVaw2O-6jzPvBH46D8XJ0k9-_b\">https://github.com/adityasuman2025/machineCoding/blob/main/carousel/index.html</a></span></p>"
            ],
            "Chess Bishop\nhttps://machine-coding.mngo.in/chessBishop": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/chessBishop/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712920855&amp;usg=AOvVaw030rz7fLopUp1KHa7Mv7ll\">https://github.com/adityasuman2025/machineCoding/blob/main/chessBishop/index.html</a></span></p>"
            ],
            "Comments\nhttps://machine-coding.mngo.in/comments": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/comments/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712921133&amp;usg=AOvVaw1LWEgc9YAslzz9PQUqZDkH\">https://github.com/adityasuman2025/machineCoding/blob/main/comments/index.html</a></span></p>"
            ],
            "Countdown Timer\nhttps://machine-coding.mngo.in/countdownTimer": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/countdownTimer/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712921409&amp;usg=AOvVaw2bKeHwoIwNc5e6RCPmH4LL\">https://github.com/adityasuman2025/machineCoding/blob/main/countdownTimer/index.html</a></span></p>"
            ],
            "Counter\nhttps://machine-coding.mngo.in/counter": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/counter/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712921665&amp;usg=AOvVaw2l-6tsBxFjXHkfujp2QOEu\">https://github.com/adityasuman2025/machineCoding/blob/main/counter/index.html</a></span></p>"
            ],
            "Creative Creation\nhttps://machine-coding.mngo.in/creativeCreation": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/creativeCreation/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712921915&amp;usg=AOvVaw27xfUIkZju05PGUfVxF8AU\">https://github.com/adityasuman2025/machineCoding/blob/main/creativeCreation/index.html</a></span></p>"
            ],
            "Grid Pattern\nhttps://machine-coding.mngo.in/gridPattern": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/gridPattern/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712922162&amp;usg=AOvVaw3U9ECb1HYeZz0vAInDVPz6\">https://github.com/adityasuman2025/machineCoding/blob/main/gridPattern/index.html</a></span></p>"
            ],
            "Guess A Number\nhttps://machine-coding.mngo.in/guessANumber": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/guessANumber/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712922430&amp;usg=AOvVaw2iC6BxnVIbkt8osx8csZtG\">https://github.com/adityasuman2025/machineCoding/blob/main/guessANumber/index.html</a></span></p>"
            ],
            "Infinite Scroll\nhttps://machine-coding.mngo.in/infiniteScroll": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/infiniteScroll/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712922704&amp;usg=AOvVaw31teh3XpFfpdrWnovh8hWn\">https://github.com/adityasuman2025/machineCoding/blob/main/infiniteScroll/index.html</a></span></p>"
            ],
            "Mail Client\nhttps://machine-coding.mngo.in/mailClient": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/mailClient/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712922961&amp;usg=AOvVaw3nkFDpxnNBh6CkRVsyTQyK\">https://github.com/adityasuman2025/machineCoding/blob/main/mailClient/index.html</a></span></p>"
            ],
            "Nested Menu\nhttps://machine-coding.mngo.in/nestedMenu": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/nestedMenu/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712923201&amp;usg=AOvVaw1O33F5ZgFU2UuGtD9UpyzA\">https://github.com/adityasuman2025/machineCoding/blob/main/nestedMenu/index.html</a></span></p>"
            ],
            "OTP Input\nhttps://machine-coding.mngo.in/otpInput": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/otpInput/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712923455&amp;usg=AOvVaw1WLWMyH19cq2zzyjhRBICp\">https://github.com/adityasuman2025/machineCoding/blob/main/otpInput/index.html</a></span></p>"
            ],
            "Paginator\nhttps://machine-coding.mngo.in/paginator": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/paginator/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712923714&amp;usg=AOvVaw3G0pYtttwsRtPvCzQ1g5Vc\">https://github.com/adityasuman2025/machineCoding/blob/main/paginator/index.html</a></span></p>"
            ],
            "Password Generator\nhttps://machine-coding.mngo.in/passwordGenerator": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/passwordGenerator/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712923966&amp;usg=AOvVaw2Q0WOeN6jN-C_M_ZokIVod\">https://github.com/adityasuman2025/machineCoding/blob/main/passwordGenerator/index.html</a></span></p>"
            ],
            "Password Strength\nhttps://machine-coding.mngo.in/passwordStrength": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/passwordStrength/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712924215&amp;usg=AOvVaw2E3G5lItj29Pkh4AEhG9tP\">https://github.com/adityasuman2025/machineCoding/blob/main/passwordStrength/index.html</a></span></p>"
            ],
            "Product Compare\nhttps://machine-coding.mngo.in/productCompare": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/productCompare/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712924459&amp;usg=AOvVaw2py5Pw3F0DDNObMJmUGDcM\">https://github.com/adityasuman2025/machineCoding/blob/main/productCompare/index.html</a></span></p>"
            ],
            "Product Listing\nhttps://machine-coding.mngo.in/productListing": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/productListing/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712924710&amp;usg=AOvVaw2iVVOXqu38jEtfwJ_yyfjN\">https://github.com/adityasuman2025/machineCoding/blob/main/productListing/index.html</a></span></p>"
            ],
            "Progress Bar\nhttps://machine-coding.mngo.in/progressbar": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/progressbar/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712924963&amp;usg=AOvVaw09k2FnHjEtLI-hvIKuTtsB\">https://github.com/adityasuman2025/machineCoding/blob/main/progressbar/index.html</a></span></p>"
            ],
            "Ratings\nhttps://machine-coding.mngo.in/ratings": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/ratings/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712925224&amp;usg=AOvVaw0NYolFN46N4hoCzO5Ze0tt\">https://github.com/adityasuman2025/machineCoding/blob/main/ratings/index.html</a></span></p>"
            ],
            "Shadow DOM\nhttps://machine-coding.mngo.in/shadowDom": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/shadowDom/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712925463&amp;usg=AOvVaw3g_JlCXq6nEGNLW6Up3KDs\">https://github.com/adityasuman2025/machineCoding/blob/main/shadowDom/index.html</a></span></p>"
            ],
            "Skeleton Loader\nhttps://machine-coding.mngo.in/skeletonLoader": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/skeletonLoader/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712925711&amp;usg=AOvVaw2Tev-1TTpwUw9KryZLs-OU\">https://github.com/adityasuman2025/machineCoding/blob/main/skeletonLoader/index.html</a></span></p>"
            ],
            "Snake Game\nhttps://machine-coding.mngo.in/snakeGame": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/snakeGame/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712925964&amp;usg=AOvVaw2SzGObkXRnbuPMeVVJH1gq\">https://github.com/adityasuman2025/machineCoding/blob/main/snakeGame/index.html</a></span></p>"
            ],
            "Tagging\nhttps://machine-coding.mngo.in/tagging": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/tagging/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712926204&amp;usg=AOvVaw2MUDST7be7Ls9wOrE1hgph\">https://github.com/adityasuman2025/machineCoding/blob/main/tagging/index.html</a></span></p>"
            ],
            "Tasks\nhttps://machine-coding.mngo.in/tasks": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/tasks/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712926446&amp;usg=AOvVaw16rSMMAh9K1yns55fvP8cm\">https://github.com/adityasuman2025/machineCoding/blob/main/tasks/index.html</a></span></p>"
            ],
            "Telephone Formatter\nhttps://machine-coding.mngo.in/telephoneFormatter": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/telephoneFormatter/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712926700&amp;usg=AOvVaw0Tj00Sb_MY-vQ_VKvRQc7B\">https://github.com/adityasuman2025/machineCoding/blob/main/telephoneFormatter/index.html</a></span></p>"
            ],
            "ticTacToe Game\nhttps://machine-coding.mngo.in/ticTacToe": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/ticTacToe/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712926938&amp;usg=AOvVaw1UxxykqbTVFkOOnfNicJ2U\">https://github.com/adityasuman2025/machineCoding/blob/main/ticTacToe/index.html</a></span></p>"
            ],
            "Toast\nhttps://machine-coding.mngo.in/toast": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/toast/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712927170&amp;usg=AOvVaw3dihL3pEEy-pIv1k4eC-nW\">https://github.com/adityasuman2025/machineCoding/blob/main/toast/index.html</a></span></p>"
            ],
            "To Do’s\nhttps://machine-coding.mngo.in/todos": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/todos/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712927461&amp;usg=AOvVaw37Fu0vjLnYWTAHFuCFA_nE\">https://github.com/adityasuman2025/machineCoding/blob/main/todos/index.html</a></span></p>"
            ],
            "Triangle\nhttps://machine-coding.mngo.in/triangle": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/triangle/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712927843&amp;usg=AOvVaw2GlcuvYPu-BR6U2J8464J0\">https://github.com/adityasuman2025/machineCoding/blob/main/triangle/index.html</a></span></p>"
            ],
            "Typing Speed Test\nhttps://machine-coding.mngo.in/typingSpeedTest": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/typingSpeedTest/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712928181&amp;usg=AOvVaw02VRcpRiN8pEY0mYVeGSUT\">https://github.com/adityasuman2025/machineCoding/blob/main/typingSpeedTest/index.html</a></span></p>"
            ],
            "Virtualisation\nhttps://machine-coding.mngo.in/virtualisation": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/machineCoding/blob/main/virtualisation/index.html&amp;sa=D&amp;source=editors&amp;ust=1707022712928854&amp;usg=AOvVaw0MeZt2sbaJe6wMGlRFUmfV\">https://github.com/adityasuman2025/machineCoding/blob/main/virtualisation/index.html</a></span></p>"
            ]
        },
        "DSA": {
            "Binary Search": [
                "<ol class=\"c10 lst-kix_4gdxgsrdca57-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c30 c31\">Implementation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c30 c31\">Index of Closest To Target in Sorted Array</span></li><li class=\"c0 li-bullet-0\"><span>First Bad Version:</span><span class=\"c42\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/first-bad-version/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712929179&amp;usg=AOvVaw2d-GOkWtzdvT9_5jTSFu0u\">&nbsp;https://leetcode.com/problems/first-bad-version/description/</a></span></li><li class=\"c0 li-bullet-0\"><span>Peak Finder:</span><span class=\"c42\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/find-peak-element/&amp;sa=D&amp;source=editors&amp;ust=1707022712929295&amp;usg=AOvVaw30vLkr-khoiQcte0KzjQIm\">&nbsp;https://leetcode.com/problems/find-peak-element/</a></span></li><li class=\"c0 li-bullet-0\"><span>Search for a Range:</span><span class=\"c42\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/explore/interview/card/top-interview-questions-medium/110/sorting-and-searching/802/&amp;sa=D&amp;source=editors&amp;ust=1707022712929431&amp;usg=AOvVaw0eeSTwL9BFYkkGvLDvIn6f\">&nbsp;https://leetcode.com/explore/interview/card/top-interview-questions-medium/110/sorting-and-searching/802/</a></span></li><li class=\"c0 li-bullet-0\"><span>Search in Matrix:</span><span class=\"c42\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/search-a-2d-matrix/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712929564&amp;usg=AOvVaw01faI8teiB6xyJDlff0e9J\">&nbsp;https://leetcode.com/problems/search-a-2d-matrix/description/</a></span></li><li class=\"c0 li-bullet-0\"><span>Search in Rotated Sorted Array:</span><span class=\"c42\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/search-in-rotated-sorted-array/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712929699&amp;usg=AOvVaw1gLV1DmwZUb2b7IrcRFeo4\">&nbsp;https://leetcode.com/problems/search-in-rotated-sorted-array/description/</a></span></li><li class=\"c0 li-bullet-0\"><span>Eating Banana:</span><span class=\"c42\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/koko-eating-bananas/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712929814&amp;usg=AOvVaw31L_v6GgMrY1ub35fvyYNH\">&nbsp;https://leetcode.com/problems/koko-eating-bananas/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c30 c31\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/binarySearch&amp;sa=D&amp;source=editors&amp;ust=1707022712929972&amp;usg=AOvVaw388Cn0DBjtlerS6yapFBwl\">https://github.com/adityasuman2025/CP/tree/master/JS/binarySearch</a></span></p>"
            ],
            "Sorting Algos": [
                "<ol class=\"c10 lst-kix_1zso7x6na6f0-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Selection Sort</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Bubble Sort</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Merge Sort</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Quick Sort</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Insertion Sort</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Heap Sort</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Merge 2 Sorted Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/merge-sorted-array/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712930362&amp;usg=AOvVaw39hcti5tk_2mOF0izatL3V\">&nbsp;https://leetcode.com/problems/merge-sorted-array/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Merge N Sorted Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://bigfrontend.dev/problem/merge-sorted-arrays&amp;sa=D&amp;source=editors&amp;ust=1707022712930481&amp;usg=AOvVaw3-jbYvfOnJNEUBBX4reL7j\">&nbsp;https://bigfrontend.dev/problem/merge-sorted-arrays</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Top K Frequent Elements:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/top-k-frequent-elements/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712930610&amp;usg=AOvVaw0a18A1MZp-us3Njd7KVE-m\">&nbsp;https://leetcode.com/problems/top-k-frequent-elements/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/sorting&amp;sa=D&amp;source=editors&amp;ust=1707022712930764&amp;usg=AOvVaw0l7zb3DyJ424vRnBqV4klo\">https://github.com/adityasuman2025/CP/tree/master/JS/sorting</a></span></p>"
            ],
            "Array": [
                "<ol class=\"c10 lst-kix_itv654q1wv4y-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Set Matrix Zeros:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/set-matrix-zeroes/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712930994&amp;usg=AOvVaw0xb662_HYKxeKD21dHkH2k\">&nbsp;https://leetcode.com/problems/set-matrix-zeroes/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Remove Duplicates from Sorted Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/remove-duplicates-from-sorted-array/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712931139&amp;usg=AOvVaw32ONgtsKkllwilnqUXvXTq\">&nbsp;https://leetcode.com/problems/remove-duplicates-from-sorted-array/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Rotate Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/rotate-array/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712931257&amp;usg=AOvVaw2N-1l1A4K4ADF4pec-GLUH\">&nbsp;https://leetcode.com/problems/rotate-array/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Rotate Matrix:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/rotate-image/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712931373&amp;usg=AOvVaw0mIy9xqbVAnAyhwgqnbAPJ\">&nbsp;https://leetcode.com/problems/rotate-image/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Single Number:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/single-number/&amp;sa=D&amp;source=editors&amp;ust=1707022712931487&amp;usg=AOvVaw397IcTWVOfr3FreTTGAC0P\">&nbsp;https://leetcode.com/problems/single-number/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Find the Duplicate Number:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/find-the-duplicate-number/&amp;sa=D&amp;source=editors&amp;ust=1707022712931614&amp;usg=AOvVaw3yqRP6YdaNV3sJsYwde_3G\">&nbsp;https://leetcode.com/problems/find-the-duplicate-number/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">2 Sum in Unsorted Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/two-sum/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712931734&amp;usg=AOvVaw22x1Ekb3UPdidOL93wl_8V\">&nbsp;https://leetcode.com/problems/two-sum/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">4 Sum:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/4sum/description&amp;sa=D&amp;source=editors&amp;ust=1707022712931884&amp;usg=AOvVaw2NuAKC8WYsuu_26EVnp1gX\">&nbsp;https://leetcode.com/problems/4sum/description</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Maximum Sum Subarray:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/maximum-subarray/&amp;sa=D&amp;source=editors&amp;ust=1707022712932002&amp;usg=AOvVaw2pFXjf77fTOfvZ7PXLD5JE\">&nbsp;https://leetcode.com/problems/maximum-subarray/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Best Time to Buy Sell Stock 2:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&amp;sa=D&amp;source=editors&amp;ust=1707022712932128&amp;usg=AOvVaw2m9RrRc_NmEmGVQLTR91pu\">&nbsp;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Best Time to Buy Sell Stock 1:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/best-time-to-buy-and-sell-stock&amp;sa=D&amp;source=editors&amp;ust=1707022712932249&amp;usg=AOvVaw1sIuaERN_aYt4PrMpusRuo\">&nbsp;https://leetcode.com/problems/best-time-to-buy-and-sell-stock</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Next Permutation:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/next-permutation/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712932365&amp;usg=AOvVaw25eYZzVOhusQBBXCH7Ttbu\">&nbsp;https://leetcode.com/problems/next-permutation/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/array&amp;sa=D&amp;source=editors&amp;ust=1707022712932514&amp;usg=AOvVaw0DPdNIKX9eMnnXqTEQj0Gi\">https://github.com/adityasuman2025/CP/tree/master/JS/array</a></span></p>"
            ],
            "Linked List": [
                "<ol class=\"c10 lst-kix_dy65umkepo5f-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Implementation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Palindrome linked list:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/palindrome-linked-list/&amp;sa=D&amp;source=editors&amp;ust=1707022712932745&amp;usg=AOvVaw17brm5Jk7g7Gz5KxrGNbAl\">&nbsp;https://leetcode.com/problems/palindrome-linked-list/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Merge sorted linked list:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/merge-two-sorted-lists/submissions/&amp;sa=D&amp;source=editors&amp;ust=1707022712932875&amp;usg=AOvVaw3OM_xgqJ9NZasVnis78YBz\">&nbsp;https://leetcode.com/problems/merge-two-sorted-lists/submissions/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Odd/Even linked list:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/odd-even-linked-list/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712932996&amp;usg=AOvVaw2rKv3luByMSjpaRPo0BvpS\">&nbsp;https://leetcode.com/problems/odd-even-linked-list/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Killing in Circular Table:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/find-the-winner-of-the-circular-game/&amp;sa=D&amp;source=editors&amp;ust=1707022712933122&amp;usg=AOvVaw0aM0Pb8VvXaQajwcAaBmUV\">&nbsp;https://leetcode.com/problems/find-the-winner-of-the-circular-game/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Merge N Sorted linked list:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1&amp;sa=D&amp;source=editors&amp;ust=1707022712933249&amp;usg=AOvVaw3FHLx2b24plXTFaCc6BkB4\">&nbsp;https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/linkedList&amp;sa=D&amp;source=editors&amp;ust=1707022712933402&amp;usg=AOvVaw1q5fdwY1ex1HV3hga_C_Qy\">https://github.com/adityasuman2025/CP/tree/master/JS/linkedList</a></span></p>"
            ],
            "Stack": [
                "<ol class=\"c10 lst-kix_jsdczu4izvp6-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Implementation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Removing Star From String:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/removing-stars-from-a-string/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712933637&amp;usg=AOvVaw1dhL5TXOnF91pC5U0GEsWY\">&nbsp;https://leetcode.com/problems/removing-stars-from-a-string/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Valid Parentheses:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/valid-parentheses/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712933760&amp;usg=AOvVaw2BoS73ouM9O_OegeytBWjO\">&nbsp;https://leetcode.com/problems/valid-parentheses/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Longest Valid Parentheses:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/longest-valid-parentheses/&amp;sa=D&amp;source=editors&amp;ust=1707022712933896&amp;usg=AOvVaw2YtnfSsluRbdxESezT9aZX\">&nbsp;https://leetcode.com/problems/longest-valid-parentheses/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Asteroid Collision:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/asteroid-collision/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712934019&amp;usg=AOvVaw1h7US5Kr61i82nSXe36Dp9\">&nbsp;https://leetcode.com/problems/asteroid-collision/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Next Greater Element:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/next-larger-element-1587115620/1&amp;sa=D&amp;source=editors&amp;ust=1707022712934153&amp;usg=AOvVaw0BF9BEmTaPjDY9OHGUIhLw\">&nbsp;https://practice.geeksforgeeks.org/problems/next-larger-element-1587115620/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Next Greater Element 2:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/next-greater-element-ii/&amp;sa=D&amp;source=editors&amp;ust=1707022712934272&amp;usg=AOvVaw0B7cwWrhd9LHEfNIp7lPfP\">&nbsp;https://leetcode.com/problems/next-greater-element-ii/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Maximum Area in Matrix (Maximum Rectangle):</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/maximal-rectangle/&amp;sa=D&amp;source=editors&amp;ust=1707022712934388&amp;usg=AOvVaw3NQ3tMMxf8J3u4XKYmnpCx\">&nbsp;https://leetcode.com/problems/maximal-rectangle/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Infix To Postfix:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/basic-calculator/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712934510&amp;usg=AOvVaw3E1b9jv5MsDbbfWAaGj7Xf\">&nbsp;https://leetcode.com/problems/basic-calculator/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/stack&amp;sa=D&amp;source=editors&amp;ust=1707022712934673&amp;usg=AOvVaw3p0fJLTjHb5iA4RBY3zcpW\">https://github.com/adityasuman2025/CP/tree/master/JS/stack</a></span></p>"
            ],
            "Queue": [
                "<ol class=\"c10 lst-kix_5b4p5kwhysch-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Implementation</span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/Queue.js&amp;sa=D&amp;source=editors&amp;ust=1707022712934935&amp;usg=AOvVaw1I4fQjwdXNHReSaA2XeHYl\">https://github.com/adityasuman2025/CP/blob/master/JS/Queue.js</a></span></p>"
            ],
            "Tree": [
                "<ol class=\"c10 lst-kix_62j892fdwm64-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Binary Search Tree Implementation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Sorted Array to Binary Search Tree:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712935178&amp;usg=AOvVaw1ciYxGqT4TUdBk6_S3SfDE\">&nbsp;https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Kth Smallest Element in Binary Search Tree:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712935311&amp;usg=AOvVaw1XIIygB6iuPRPivLYlbOKR\">&nbsp;https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Root To Leaf Path Target Sum:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/path-sum/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712935426&amp;usg=AOvVaw3DiB6elu4hcf0ANsz0TGJ_\">&nbsp;https://leetcode.com/problems/path-sum/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Longest Zig Zag Path in Binary Tree:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712935557&amp;usg=AOvVaw2jq39kEqhzz-deTONHZgce\">&nbsp;https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Count Path Sum in Binary Tree:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/path-sum-iii/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712935673&amp;usg=AOvVaw2LkOZoLJu-i0jfNAjkSbUx\">&nbsp;https://leetcode.com/problems/path-sum-iii/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Lowest Common Ancestor:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712935800&amp;usg=AOvVaw0MwxMXZcF2KvcLMX6ev6sD\">&nbsp;https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Dirty Tree</span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/tree&amp;sa=D&amp;source=editors&amp;ust=1707022712935985&amp;usg=AOvVaw3J3U8TudWU7oO2p19JDdy3\">https://github.com/adityasuman2025/CP/tree/master/JS/tree</a></span></p>"
            ],
            "Heap": [
                "<ol class=\"c10 lst-kix_1g40yv7j9m8d-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Min Heap Implementation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Priority Queue Implementation</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Kth Largest Element in an Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/kth-largest-element-in-an-array/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712936257&amp;usg=AOvVaw1hWqfpLC3zZf3UpjYXGNFi\">&nbsp;https://leetcode.com/problems/kth-largest-element-in-an-array/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Kth Largest Element in Stream:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/kth-largest-element-in-a-stream/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712936389&amp;usg=AOvVaw0qCdJMliONMQyM4UzJennH\">&nbsp;https://leetcode.com/problems/kth-largest-element-in-a-stream/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Minimum Rope Cost:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes-1587115620/1&amp;sa=D&amp;source=editors&amp;ust=1707022712936522&amp;usg=AOvVaw1q7NVGVYQsCChAMMKc-vmY\">&nbsp;https://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes-1587115620/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">'K' Closest Points to Origin:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/k-closest-points-to-origin/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712936650&amp;usg=AOvVaw2TakVKXu4HzhGMLuP2WhEW\">&nbsp;https://leetcode.com/problems/k-closest-points-to-origin/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/heap&amp;sa=D&amp;source=editors&amp;ust=1707022712936796&amp;usg=AOvVaw004sFDcFHM3ve8OdkusSzc\">https://github.com/adityasuman2025/CP/tree/master/JS/heap</a></span></p>"
            ],
            "Two Pointers": [
                "<ol class=\"c10 lst-kix_xb6gn96mg6jt-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Move Zeros:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/move-zeroes/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712936976&amp;usg=AOvVaw0TaWFMOlE-i0VI8kJhm0XN\">&nbsp;https://leetcode.com/problems/move-zeroes/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">2 Sum in Sorted Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/&amp;sa=D&amp;source=editors&amp;ust=1707022712937096&amp;usg=AOvVaw3FmN8fx6DcbEwd5fe8inTz\">&nbsp;https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">3 Sum:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/3sum/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712937204&amp;usg=AOvVaw29TK_fLorXCBJni1wx0c73\">&nbsp;https://leetcode.com/problems/3sum/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">K Sum Pairs:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/max-number-of-k-sum-pairs/description&amp;sa=D&amp;source=editors&amp;ust=1707022712937325&amp;usg=AOvVaw0Y2Ldc1caAkJNZWLe8lei3\">&nbsp;https://leetcode.com/problems/max-number-of-k-sum-pairs/description</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Reverse Vowels of a String:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/reverse-vowels-of-a-string/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712937454&amp;usg=AOvVaw05cGoLI4JB80Bd97w_AveK\">&nbsp;https://leetcode.com/problems/reverse-vowels-of-a-string/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Square of Sorted Array:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/squares-of-a-sorted-array/&amp;sa=D&amp;source=editors&amp;ust=1707022712937578&amp;usg=AOvVaw0yjPk3w8AxQbZmuMSW30yc\">&nbsp;https://leetcode.com/problems/squares-of-a-sorted-array/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Container With Most Water:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/container-with-most-water/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712937710&amp;usg=AOvVaw0BcEua4vLQQZoYtLYPL_eJ\">&nbsp;https://leetcode.com/problems/container-with-most-water/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Trapping Rain Water:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/trapping-rain-water/&amp;sa=D&amp;source=editors&amp;ust=1707022712937835&amp;usg=AOvVaw0TZz2XMYeUIF6HrotoKDCh\">&nbsp;https://leetcode.com/problems/trapping-rain-water/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/twoPointers&amp;sa=D&amp;source=editors&amp;ust=1707022712937991&amp;usg=AOvVaw1QqgeAxvqETmRE0HGx6jPN\">https://github.com/adityasuman2025/CP/tree/master/JS/twoPointers</a></span></p>"
            ],
            "Sliding Window": [
                "<ol class=\"c10 lst-kix_o60wjb9kmz58-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Maximum No of Vowels In Substring:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712938192&amp;usg=AOvVaw23-X-eddiTyiao8OFh-bCC\">&nbsp;https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Maximum Average Subarray:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/maximum-average-subarray-i/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712938314&amp;usg=AOvVaw1O5akXxyDMH0mKLZFjPgmh\">&nbsp;https://leetcode.com/problems/maximum-average-subarray-i/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Maximum Consecutive Ones:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/max-consecutive-ones-iii/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712938445&amp;usg=AOvVaw0Zid-BJ5RbSyiXLSq8KdSN\">&nbsp;https://leetcode.com/problems/max-consecutive-ones-iii/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Longest SubString Without Repeating Characters:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/longest-substring-without-repeating-characters/&amp;sa=D&amp;source=editors&amp;ust=1707022712938581&amp;usg=AOvVaw21I7MyMKnY9qzkjVosrGic\">&nbsp;https://leetcode.com/problems/longest-substring-without-repeating-characters/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">str.indexOf:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712938752&amp;usg=AOvVaw0LPAE0Z4lGZUyR2Usmjbi4\">&nbsp;https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Minimum Window Substring:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/minimum-window-substring/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712938888&amp;usg=AOvVaw0P3rxrnXEVUbIzE76UJD3o\">&nbsp;https://leetcode.com/problems/minimum-window-substring/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/slidingWindow&amp;sa=D&amp;source=editors&amp;ust=1707022712939040&amp;usg=AOvVaw214Md4pmTxh6Tkm47WM4-O\">https://github.com/adityasuman2025/CP/tree/master/JS/slidingWindow</a></span></p>"
            ],
            "Backtracking": [
                "<ol class=\"c10 lst-kix_lm9jexykygd1-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Subsets</span><span class=\"c11\">:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/subsets/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712939231&amp;usg=AOvVaw2OvkcpXs2IWTUxlZRyyp_v\">&nbsp;https://leetcode.com/problems/subsets/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Combination Sum 1:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/combination-sum/&amp;sa=D&amp;source=editors&amp;ust=1707022712939342&amp;usg=AOvVaw38x5Rhdl7BQAaNbpLlRf4e\">&nbsp;https://leetcode.com/problems/combination-sum/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Combination Sum 2:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/combination-sum-ii/&amp;sa=D&amp;source=editors&amp;ust=1707022712939451&amp;usg=AOvVaw1r_5qYjJM0lBtI7uLManCu\">&nbsp;https://leetcode.com/problems/combination-sum-ii/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Combination Sum 3:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/combination-sum-iii/&amp;sa=D&amp;source=editors&amp;ust=1707022712939566&amp;usg=AOvVaw1VIsI_66ISc5vKo7KREctU\">&nbsp;https://leetcode.com/problems/combination-sum-iii/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Permutations:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/permutations/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712939679&amp;usg=AOvVaw35kMyYb_PvHMnWP0LPVroo\">&nbsp;https://leetcode.com/problems/permutations/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Letter Combinations:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/letter-combinations-of-a-phone-number/description&amp;sa=D&amp;source=editors&amp;ust=1707022712939806&amp;usg=AOvVaw2EnLipL3vOGfhfVUYh9Qmg\">&nbsp;https://leetcode.com/problems/letter-combinations-of-a-phone-number/description</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Generate Valid Parenthesis:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/generate-parentheses/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712939943&amp;usg=AOvVaw1aBbfXqMtTRN45Bqi5lZjJ\">&nbsp;https://leetcode.com/problems/generate-parentheses/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Word Search:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/word-search/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712940068&amp;usg=AOvVaw181T_hFoCdxGsZ3_Uy--8s\">&nbsp;https://leetcode.com/problems/word-search/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/backtracking&amp;sa=D&amp;source=editors&amp;ust=1707022712940227&amp;usg=AOvVaw02DGs7ZzuDa-UosDpi_7x3\">https://github.com/adityasuman2025/CP/tree/master/JS/backtracking</a></span></p>"
            ],
            "Graph": [
                "<ol class=\"c10 lst-kix_qpt8yfxzuiks-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Can Visit All Rooms:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/keys-and-rooms/&amp;sa=D&amp;source=editors&amp;ust=1707022712940411&amp;usg=AOvVaw1n3lV8Xw_jzAd2TOgUa1_Q\">&nbsp;https://leetcode.com/problems/keys-and-rooms/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Nearest Exit From Maze:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/nearest-exit-from-entrance-in-maze/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712940538&amp;usg=AOvVaw1Lga9nnGeHq7oHNaDd_3R_\">&nbsp;https://leetcode.com/problems/nearest-exit-from-entrance-in-maze/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Number of Provinces:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/number-of-provinces/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712940669&amp;usg=AOvVaw3BEybjeSSqOyL3P0bDRAIe\">&nbsp;https://leetcode.com/problems/number-of-provinces/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Biggest Island:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/max-area-of-island/&amp;sa=D&amp;source=editors&amp;ust=1707022712940791&amp;usg=AOvVaw13tKrNRefW0aV_d0nNE9qE\">&nbsp;https://leetcode.com/problems/max-area-of-island/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Flood Fill:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/flood-fill&amp;sa=D&amp;source=editors&amp;ust=1707022712940920&amp;usg=AOvVaw1DfrABmRt2_kttx7lYhlo3\">&nbsp;https://leetcode.com/problems/flood-fill</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Rotten Oranges:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/rotting-oranges/&amp;sa=D&amp;source=editors&amp;ust=1707022712941048&amp;usg=AOvVaw0cMpmhjv6G7oP3u4d0pvVp\">&nbsp;https://leetcode.com/problems/rotting-oranges/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Number of Islands:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/number-of-islands/&amp;sa=D&amp;source=editors&amp;ust=1707022712941178&amp;usg=AOvVaw1vCOojRDZ0ggrQu2TCJq1q\">&nbsp;https://leetcode.com/problems/number-of-islands/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/graph&amp;sa=D&amp;source=editors&amp;ust=1707022712941344&amp;usg=AOvVaw2p7L4H8OKQuIDda6ZHEWlW\">https://github.com/adityasuman2025/CP/tree/master/JS/graph</a></span></p>"
            ],
            "Dynamic Programming (DP)": [
                "<ol class=\"c10 lst-kix_4p7qsfid3lhi-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Min Cost Climbing Stairs:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/min-cost-climbing-stairs&amp;sa=D&amp;source=editors&amp;ust=1707022712941547&amp;usg=AOvVaw0IEV3Wu-rbzqedpqdfbTmt\">&nbsp;https://leetcode.com/problems/min-cost-climbing-stairs</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">House Robber:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/house-robber/description&amp;sa=D&amp;source=editors&amp;ust=1707022712941682&amp;usg=AOvVaw35bNUFIUzWIwi-GKofxdvq\">&nbsp;https://leetcode.com/problems/house-robber/description</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Longest Increasing Subsequence:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/longest-increasing-subsequence/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712941807&amp;usg=AOvVaw3bInb4dItyYpYw6c0SJgsA\">&nbsp;https://leetcode.com/problems/longest-increasing-subsequence/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Unique Paths:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/unique-paths/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712941930&amp;usg=AOvVaw0yccS4_4JP92BBeWNLCDJr\">&nbsp;https://leetcode.com/problems/unique-paths/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Longest Common SubSequence:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/longest-common-subsequence/&amp;sa=D&amp;source=editors&amp;ust=1707022712942051&amp;usg=AOvVaw1awB8okTX6aQkkcATpp6uv\">&nbsp;https://leetcode.com/problems/longest-common-subsequence/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/dp&amp;sa=D&amp;source=editors&amp;ust=1707022712942210&amp;usg=AOvVaw0tkfSa2zcyDaq5hlrGRNYb\">https://github.com/adityasuman2025/CP/tree/master/JS/dp</a></span></p>"
            ],
            "Greedy": [
                "<ol class=\"c10 lst-kix_ug1b9op6k5g4-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c11\">Fractional Knapsack:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1&amp;sa=D&amp;source=editors&amp;ust=1707022712942406&amp;usg=AOvVaw0x-W0mQ5nWiYWps0t-NMVS\">&nbsp;https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Activity Selection:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/activity-selection-1587115620/1&amp;sa=D&amp;source=editors&amp;ust=1707022712942557&amp;usg=AOvVaw17_EBVpJqoP-S_LSioTQdd\">&nbsp;https://practice.geeksforgeeks.org/problems/activity-selection-1587115620/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Coin Change:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/coin-change-ii/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712942678&amp;usg=AOvVaw3UlkK4oXnWOEHTOjXjGPBh\">&nbsp;https://leetcode.com/problems/coin-change-ii/description/</a></span><span class=\"c8\">, </span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Job Sequencing</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1&amp;sa=D&amp;source=editors&amp;ust=1707022712942820&amp;usg=AOvVaw1zjtYCEPDzgRwqmxxKnwi4\">&nbsp;https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Non-overlapping Intervals:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/non-overlapping-intervals&amp;sa=D&amp;source=editors&amp;ust=1707022712942944&amp;usg=AOvVaw2jfpGDwg_5YYF-8eMwxGov\">&nbsp;https://leetcode.com/problems/non-overlapping-intervals</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Minimum Jumps to Reach End:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/jump-game-ii/description&amp;sa=D&amp;source=editors&amp;ust=1707022712943062&amp;usg=AOvVaw1dHFoumotMHXjR9lEiamMI\">&nbsp;https://leetcode.com/problems/jump-game-ii/description</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Dijkstra Algorithm:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1&amp;sa=D&amp;source=editors&amp;ust=1707022712943193&amp;usg=AOvVaw2YpsobF0LTzoPMfz2O89TQ\">&nbsp;https://practice.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Minimum Coin Change:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/coin-change/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712943307&amp;usg=AOvVaw2-U3W_yruuCMEPB9DZ6eSW\">&nbsp;https://leetcode.com/problems/coin-change/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Minimum Platform:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1&amp;sa=D&amp;source=editors&amp;ust=1707022712943438&amp;usg=AOvVaw2k8T8sdWPxOWmfVX_M0Sfv\">&nbsp;https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Max Guests In Party:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/maximum-intervals-overlap5708/1&amp;sa=D&amp;source=editors&amp;ust=1707022712943569&amp;usg=AOvVaw2fxKBKwnm1VA_qJv3kksb6\">&nbsp;https://practice.geeksforgeeks.org/problems/maximum-intervals-overlap5708/1</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Minimum Number of Arrows to Burst Balloons:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons&amp;sa=D&amp;source=editors&amp;ust=1707022712943693&amp;usg=AOvVaw1uBq-Y8aPq2aT6IF4-nCYD\">&nbsp;https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Jump Game 1:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/jump-game/&amp;sa=D&amp;source=editors&amp;ust=1707022712943800&amp;usg=AOvVaw1v_1rs3_uuAfXABdyIr6zq\">&nbsp;https://leetcode.com/problems/jump-game/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/greedy&amp;sa=D&amp;source=editors&amp;ust=1707022712943955&amp;usg=AOvVaw2fP1wGsoScUZJidAltzDXd\">https://github.com/adityasuman2025/CP/tree/master/JS/greedy</a></span></p>"
            ],
            "Maths": [
                "<ol class=\"c10 lst-kix_k380ynl51wzg-0 start\" start=\"1\"><li class=\"c0 li-bullet-0\"><span class=\"c8\">Maths Formulas</span></li><li class=\"c0 li-bullet-0\"><span class=\"c8\">Decimal to Binary &amp; Vice Versa</span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Math.Pow(x, n):</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/powx-n/description&amp;sa=D&amp;source=editors&amp;ust=1707022712944211&amp;usg=AOvVaw12iOZZXbbfvzo9fEUVOdFi\">&nbsp;https://leetcode.com/problems/powx-n/description</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Math.sqrt(n):</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/sqrtx/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712944325&amp;usg=AOvVaw0011LxgE2LdG2J94dXsVSx\">&nbsp;https://leetcode.com/problems/sqrtx/description/</a></span></li><li class=\"c0 li-bullet-0\"><span class=\"c11\">Excel Sheet Column Number:</span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/excel-sheet-column-number/description/&amp;sa=D&amp;source=editors&amp;ust=1707022712944448&amp;usg=AOvVaw1usjCZ7LmwMuVAnjJNKCa4\">&nbsp;https://leetcode.com/problems/excel-sheet-column-number/description/</a></span></li></ol>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/tree/master/JS/maths&amp;sa=D&amp;source=editors&amp;ust=1707022712944629&amp;usg=AOvVaw2kZ7Dwv1tMkNXX1xQYt_z8\">https://github.com/adityasuman2025/CP/tree/master/JS/maths</a></span></p>"
            ],
            "LRU Cache": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/lru-cache/&amp;sa=D&amp;source=editors&amp;ust=1707022712944848&amp;usg=AOvVaw1UpwfuPIIlmaQXsXKfRHAG\">https://leetcode.com/problems/lru-cache/</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/LRUCache.js&amp;sa=D&amp;source=editors&amp;ust=1707022712945006&amp;usg=AOvVaw09RzLhxllC_qxlzAAjxO5c\">https://github.com/adityasuman2025/CP/blob/master/JS/LRUCache.js</a></span></p>"
            ],
            "Largest Subarray with 0 Sum": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://practice.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1&amp;sa=D&amp;source=editors&amp;ust=1707022712945195&amp;usg=AOvVaw0xCA1qH2NfUCZImGoYULOj\">https://practice.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c30 c31\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/largestSubArrWith0Sum.js&amp;sa=D&amp;source=editors&amp;ust=1707022712945368&amp;usg=AOvVaw1dszSng11g0OmS_Sw2tyfk\">https://github.com/adityasuman2025/CP/blob/master/JS/largestSubArrWith0Sum.js</a></span></p>"
            ],
            "All SubSequence of a String": [
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/allSubSeqOfString.js&amp;sa=D&amp;source=editors&amp;ust=1707022712945614&amp;usg=AOvVaw3a8POcsobutxTM5ZQaYNm4\">https://github.com/adityasuman2025/CP/blob/master/JS/allSubSeqOfString.js</a></span></p>"
            ],
            "All SubStrings of a String": [
                "<p class=\"c1\"><span class=\"c11\">Solution </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/allSubStrOfString.js&amp;sa=D&amp;source=editors&amp;ust=1707022712945831&amp;usg=AOvVaw0lIXXnCeOSSDNHIgAEMiEz\">https://github.com/adityasuman2025/CP/blob/master/JS/allSubStrOfString.js</a></span></p>"
            ],
            "Longest Consecutive Sequence": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/longest-consecutive-sequence/&amp;sa=D&amp;source=editors&amp;ust=1707022712946020&amp;usg=AOvVaw36JDw6Sv2dsIyPVSBIKQkm\">https://leetcode.com/problems/longest-consecutive-sequence/</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/longestConsecSeqInArr.js&amp;sa=D&amp;source=editors&amp;ust=1707022712946184&amp;usg=AOvVaw22DbNt7VpNYhE8J7T-TP11\">https://github.com/adityasuman2025/CP/blob/master/JS/longestConsecSeqInArr.js</a></span></p>"
            ],
            "Group Anagrams": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/group-anagrams/description&amp;sa=D&amp;source=editors&amp;ust=1707022712946362&amp;usg=AOvVaw1Em0-NrbFXEGalMkEpqlko\">https://leetcode.com/problems/group-anagrams/description</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/groupAnagrams.js&amp;sa=D&amp;source=editors&amp;ust=1707022712946520&amp;usg=AOvVaw0xVXAeO3keFmNVbzES8_uW\">https://github.com/adityasuman2025/CP/blob/master/JS/groupAnagrams.js</a></span></p>"
            ],
            "Overlapping Rectangle": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/rectangle-overlap/&amp;sa=D&amp;source=editors&amp;ust=1707022712946690&amp;usg=AOvVaw2foXM7fBKidNVr4slJGYe-\">https://leetcode.com/problems/rectangle-overlap/</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/overlappingRect.js&amp;sa=D&amp;source=editors&amp;ust=1707022712946856&amp;usg=AOvVaw1EtvpGJVeikKHXENgJpxas\">https://github.com/adityasuman2025/CP/blob/master/JS/overlappingRect.js</a></span></p>"
            ],
            "Reverse Array": [
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/reverseArray.js&amp;sa=D&amp;source=editors&amp;ust=1707022712947054&amp;usg=AOvVaw2uNJIiQnpHjkdWTgLuQPHb\">https://github.com/adityasuman2025/CP/blob/master/JS/reverseArray.js</a></span></p>"
            ],
            "3Sum Closest": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/3sum-closest/&amp;sa=D&amp;source=editors&amp;ust=1707022712947214&amp;usg=AOvVaw2m9GdC4-5jwPFm30v57CUC\">https://leetcode.com/problems/3sum-closest/</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/threeSumClosest.js&amp;sa=D&amp;source=editors&amp;ust=1707022712947365&amp;usg=AOvVaw2D1ZK_hDoyfiSEZKEqSsSI\">https://github.com/adityasuman2025/CP/blob/master/JS/threeSumClosest.js</a></span></p>"
            ],
            "Valid Anagram": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/valid-anagram/&amp;sa=D&amp;source=editors&amp;ust=1707022712947521&amp;usg=AOvVaw0ZjXR4Cm8xncqJ9jFzwG-P\">https://leetcode.com/problems/valid-anagram/</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/validAnagram.js&amp;sa=D&amp;source=editors&amp;ust=1707022712947675&amp;usg=AOvVaw1HCGbt0NbAGzZbXJCWjAQJ\">https://github.com/adityasuman2025/CP/blob/master/JS/validAnagram.js</a></span></p>"
            ],
            "Valid Palindrome": [
                "<p class=\"c1\"><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://leetcode.com/problems/valid-palindrome/&amp;sa=D&amp;source=editors&amp;ust=1707022712947842&amp;usg=AOvVaw3wpsI6wQhIL-es7hw9Ddpk\">https://leetcode.com/problems/valid-palindrome/</a></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span class=\"c11\">Solution: </span><span class=\"c3\"><a class=\"c5\" href=\"https://www.google.com/url?q=https://github.com/adityasuman2025/CP/blob/master/JS/validPalindrome.js&amp;sa=D&amp;source=editors&amp;ust=1707022712947997&amp;usg=AOvVaw3gRV8XY2cdTeNs3oLoD6RF\">https://github.com/adityasuman2025/CP/blob/master/JS/validPalindrome.js</a></span></p>"
            ],
            "Recognising Greedy Problem": [
                "<p class=\"c1\"><span class=\"c8\">Recognising when a problem can be solved using a greedy algorithm requires an understanding of the problem's characteristics. Here are some key indicators that suggest a problem might be solvable using a greedy approach:</span></p>",
                "<ul class=\"c10 lst-kix_ks0gl3jge051-0 start\"><li class=\"c0 li-bullet-0\"><span class=\"c2\">Optimal Substructure:</span><span class=\"c8\">&nbsp;The problem can be broken down into subproblems, and the optimal solution to the overall problem can be constructed from optimal solutions to its </span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Greedy Choice Property:</span><span class=\"c8\">&nbsp;At each step, you make a locally optimal choice. This means you choose the best option at that particular step without considering the consequences of that choice on future steps.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">No Backtracking:</span><span class=\"c8\">&nbsp;Greedy algorithms make decisions in a one-way manner, meaning they don't revise their choices once made. Once a decision is made, it stays.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Sorting Helps:</span><span class=\"c8\">&nbsp;Sorting elements based on some criteria often makes the greedy approach more evident. For example, in interval scheduling, sorting intervals by end time can lead to a greedy solution.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Problem has a Tight Bound:</span><span class=\"c8\">&nbsp;Sometimes, the problem has a structure where the best solution must include a certain choice, making it a natural fit for greedy algorithms.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Problem is a Scheduling or Interval Problem:</span><span class=\"c8\">&nbsp;Problems involving scheduling or intervals (like activity selection, interval partitioning, etc.) often lend themselves well to greedy approaches, especially when sorted by a specific criterion.</span></li><li class=\"c0 li-bullet-0\"><span class=\"c2\">Problem is a Fractional Knapsack Problem: </span><span class=\"c8\">If the problem involves maximising the value of items in a knapsack given a weight constraint, and you can take fractional amounts of items, a greedy algorithm can often provide an optimal solution.</span></li></ul>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>",
                "<p class=\"c1\"><span style=\"overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 718.11px; height: 340.00px;\"><img alt=\"\" src=\"images/image3.png\" style=\"width: 718.11px; height: 340.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);\" title=\"\"></span></p>",
                "<p class=\"c1 c4\"><span class=\"c8\"></span></p>"
            ]
        }
    }
]